diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache00/init.c rtems-hwsched-cache/testsuites/gabtests/cache00/init.c
--- rtems-hwds/testsuites/gabtests/cache00/init.c	2010-10-09 21:10:42.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache00/init.c	2010-10-06 22:28:28.000000000 -0400
@@ -42,7 +42,7 @@ rtems_id  final_barrier;
 uint32_t *shared_array;
 
 uint32_t  cache_line_length = 64;
-uint32_t  cache_num_lines_to_access = 512*(0.1); /* 512*(% of cache) */
+uint32_t  cache_num_lines = 512; /* 512*(% of cache) */
 
 rtems_task Init(
   rtems_task_argument argument
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache00/macros.h rtems-hwsched-cache/testsuites/gabtests/cache00/macros.h
--- rtems-hwds/testsuites/gabtests/cache00/macros.h	2010-10-01 04:44:22.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache00/macros.h	2010-10-07 16:04:25.000000000 -0400
@@ -5,15 +5,15 @@
  */
 
 /* This file was generated with the following parameters: 
--T 27,0.600,0 
+-T 1,0.010,0 -T 1,0.016,0 -T 1,0.005,0 -T 1,0.008,0 -T 2,0.002,0 -T 3,0.003,0 -T 4,0.013,0 -T 4,0.006,0 -T 5,0.004,0 -T 5,0.001,0 -T 6,0.016,0 -T 6,0.005,0 -T 7,0.001,0 -T 7,0.003,0 -T 7,0.012,0 -T 8,0.013,0 -T 9,0.004,0 -T 9,0.007,0 -T 10,0.009,0 -T 10,0.001,0 -T 10,0.003,0 -T 10,0.006,0 -T 11,0.005,0 -T 11,0.006,0 -T 12,0.004,0 -T 13,0.004,0 -T 13,0.003,0 -T 13,0.006,0 -T 15,0.012,0 -T 15,0.006,0 -T 16,0.014,0 -T 16,0.012,0 -T 16,0.004,0 -T 17,0.015,0 -T 17,0.015,0 -T 19,0.011,0 -T 20,0.014,0 -T 21,0.001,0 -T 22,0.005,0 -T 22,0.003,0 -T 22,0.016,0 -T 22,0.003,0 -T 24,0.002,0 -T 24,0.001,0 -T 25,0.001,0 -T 25,0.006,0 -T 25,0.017,0 -T 28,0.004,0 -T 29,0.014,0 -T 29,0.015,0 -T 32,0.004,0 -T 32,0.017,0 -T 32,0.003,0 -T 32,0.005,0 -T 33,0.012,0 -T 34,0.016,0 -T 35,0.002,0 -T 36,0.016,0 -T 38,0.002,0 -T 38,0.004,0 -T 38,0.002,0 -T 38,0.012,0 -T 39,0.007,0 -T 39,0.001,0 -T 39,0.006,0 -T 40,0.017,0 -T 40,0.006,0 -T 41,0.007,0 -T 42,0.015,0 -T 42,0.007,0 -T 43,0.010,0 -T 44,0.003,0 -T 44,0.014,0 -T 45,0.011,0 -T 48,0.012,0 -T 48,0.009,0 -T 49,0.001,0 -T 50,0.005,0 -T 50,0.001,0 -T 50,0.011,0 
 */
 
 #ifndef __MACROS_H_
 #define __MACROS_H_
 
 #define  HP_LENGTH                  (-1)
-#define  MAX_PERIOD                 (27)
-#define  NUM_PERIODIC_TASKS         (1)
+#define  MAX_PERIOD                 (50)
+#define  NUM_PERIODIC_TASKS         (80)
 #define  NUM_APERIODIC_TASKS        (0)
 #define  NUM_TASKS                  ( NUM_PERIODIC_TASKS + NUM_APERIODIC_TASKS )
 #endif
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache00/params.h rtems-hwsched-cache/testsuites/gabtests/cache00/params.h
--- rtems-hwds/testsuites/gabtests/cache00/params.h	2010-10-01 04:44:22.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache00/params.h	2010-10-07 16:04:25.000000000 -0400
@@ -5,32 +5,190 @@
  */
 
 /* This file was generated with the following parameters: 
--T 27,0.600,0 
+-T 1,0.010,0 -T 1,0.016,0 -T 1,0.005,0 -T 1,0.008,0 -T 2,0.002,0 -T 3,0.003,0 -T 4,0.013,0 -T 4,0.006,0 -T 5,0.004,0 -T 5,0.001,0 -T 6,0.016,0 -T 6,0.005,0 -T 7,0.001,0 -T 7,0.003,0 -T 7,0.012,0 -T 8,0.013,0 -T 9,0.004,0 -T 9,0.007,0 -T 10,0.009,0 -T 10,0.001,0 -T 10,0.003,0 -T 10,0.006,0 -T 11,0.005,0 -T 11,0.006,0 -T 12,0.004,0 -T 13,0.004,0 -T 13,0.003,0 -T 13,0.006,0 -T 15,0.012,0 -T 15,0.006,0 -T 16,0.014,0 -T 16,0.012,0 -T 16,0.004,0 -T 17,0.015,0 -T 17,0.015,0 -T 19,0.011,0 -T 20,0.014,0 -T 21,0.001,0 -T 22,0.005,0 -T 22,0.003,0 -T 22,0.016,0 -T 22,0.003,0 -T 24,0.002,0 -T 24,0.001,0 -T 25,0.001,0 -T 25,0.006,0 -T 25,0.017,0 -T 28,0.004,0 -T 29,0.014,0 -T 29,0.015,0 -T 32,0.004,0 -T 32,0.017,0 -T 32,0.003,0 -T 32,0.005,0 -T 33,0.012,0 -T 34,0.016,0 -T 35,0.002,0 -T 36,0.016,0 -T 38,0.002,0 -T 38,0.004,0 -T 38,0.002,0 -T 38,0.012,0 -T 39,0.007,0 -T 39,0.001,0 -T 39,0.006,0 -T 40,0.017,0 -T 40,0.006,0 -T 41,0.007,0 -T 42,0.015,0 -T 42,0.007,0 -T 43,0.010,0 -T 44,0.003,0 -T 44,0.014,0 -T 45,0.011,0 -T 48,0.012,0 -T 48,0.009,0 -T 49,0.001,0 -T 50,0.005,0 -T 50,0.001,0 -T 50,0.011,0 
 */
 
 #ifndef __PARAMS_H_
 #define __PARAMS_H_
 
 #define  HP_LENGTH                  (-1)
-#define  MAX_PERIOD                 (27)
-#define  NUM_PERIODIC_TASKS         (1)
+#define  MAX_PERIOD                 (50)
+#define  NUM_PERIODIC_TASKS         (80)
 #define  NUM_APERIODIC_TASKS        (0)
 #define  NUM_TASKS                  ( NUM_PERIODIC_TASKS + NUM_APERIODIC_TASKS )
 uint32_t  periodic_tasks            = NUM_PERIODIC_TASKS;
 
-rtems_task_priority Priorities[1+NUM_TASKS]= { 0, 27 };
+rtems_task_priority Priorities[1+NUM_TASKS]= { 0, 1, 1, 1, 1, 2, 3, 4, 4, 5, 5, 6, 6, 7, 7, 7, 8, 9, 9, 10, 10, 10, 10, 11, 11, 12, 13, 13, 13, 15, 15, 16, 16, 16, 17, 17, 19, 20, 21, 22, 22, 22, 22, 24, 24, 25, 25, 25, 28, 29, 29, 32, 32, 32, 32, 33, 34, 35, 36, 38, 38, 38, 38, 39, 39, 39, 40, 40, 41, 42, 42, 43, 44, 44, 45, 48, 48, 49, 50, 50, 50 };
 
-uint32_t  Periods[1+NUM_PERIODIC_TASKS]    = { 0, 27 };
+uint32_t  Periods[1+NUM_PERIODIC_TASKS]    = { 0, 1, 1, 1, 1, 2, 3, 4, 4, 5, 5, 6, 6, 7, 7, 7, 8, 9, 9, 10, 10, 10, 10, 11, 11, 12, 13, 13, 13, 15, 15, 16, 16, 16, 17, 17, 19, 20, 21, 22, 22, 22, 22, 24, 24, 25, 25, 25, 28, 29, 29, 32, 32, 32, 32, 33, 34, 35, 36, 38, 38, 38, 38, 39, 39, 39, 40, 40, 41, 42, 42, 43, 44, 44, 45, 48, 48, 49, 50, 50, 50 };
 
 uint32_t  Execution_us[1+NUM_TASKS]        = {
                                              0*CONFIGURE_MICROSECONDS_PER_TICK,
-                                             27*0.6*CONFIGURE_MICROSECONDS_PER_TICK
+                                             1*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             1*0.016*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             1*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             1*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             2*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             3*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             4*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             4*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             5*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             5*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             6*0.016*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             6*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             7*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             7*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             7*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             8*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             9*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             9*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             10*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             10*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             10*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             10*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             11*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             11*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             12*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             13*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             13*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             13*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             15*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             15*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             16*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             16*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             16*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             17*0.015*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             17*0.015*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             19*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             20*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             21*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             22*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             22*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             22*0.016*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             22*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             24*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             24*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             25*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             25*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             25*0.017*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             28*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             29*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             29*0.015*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             32*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             32*0.017*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             32*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             32*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             33*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             34*0.016*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             35*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             36*0.016*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             38*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             38*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             38*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             38*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             39*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             39*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             39*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             40*0.017*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             40*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             41*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             42*0.015*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             42*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             43*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             44*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             44*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             45*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             48*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             48*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             49*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             50*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             50*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             50*0.011*CONFIGURE_MICROSECONDS_PER_TICK
                                              };
 
-uint32_t  Phases[1+NUM_TASKS]           = { 0, 0 };
+uint32_t  Phases[1+NUM_TASKS]           = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
 
 #define build_task_name() do { \
 Task_name[ 1 ] =  rtems_build_name( 'P', 'T', '0', '1' );\
+Task_name[ 2 ] =  rtems_build_name( 'P', 'T', '0', '2' );\
+Task_name[ 3 ] =  rtems_build_name( 'P', 'T', '0', '3' );\
+Task_name[ 4 ] =  rtems_build_name( 'P', 'T', '0', '4' );\
+Task_name[ 5 ] =  rtems_build_name( 'P', 'T', '0', '5' );\
+Task_name[ 6 ] =  rtems_build_name( 'P', 'T', '0', '6' );\
+Task_name[ 7 ] =  rtems_build_name( 'P', 'T', '0', '7' );\
+Task_name[ 8 ] =  rtems_build_name( 'P', 'T', '0', '8' );\
+Task_name[ 9 ] =  rtems_build_name( 'P', 'T', '0', '9' );\
+Task_name[ 10 ] =  rtems_build_name( 'P', 'T', '1', '0' );\
+Task_name[ 11 ] =  rtems_build_name( 'P', 'T', '1', '1' );\
+Task_name[ 12 ] =  rtems_build_name( 'P', 'T', '1', '2' );\
+Task_name[ 13 ] =  rtems_build_name( 'P', 'T', '1', '3' );\
+Task_name[ 14 ] =  rtems_build_name( 'P', 'T', '1', '4' );\
+Task_name[ 15 ] =  rtems_build_name( 'P', 'T', '1', '5' );\
+Task_name[ 16 ] =  rtems_build_name( 'P', 'T', '1', '6' );\
+Task_name[ 17 ] =  rtems_build_name( 'P', 'T', '1', '7' );\
+Task_name[ 18 ] =  rtems_build_name( 'P', 'T', '1', '8' );\
+Task_name[ 19 ] =  rtems_build_name( 'P', 'T', '1', '9' );\
+Task_name[ 20 ] =  rtems_build_name( 'P', 'T', '2', '0' );\
+Task_name[ 21 ] =  rtems_build_name( 'P', 'T', '2', '1' );\
+Task_name[ 22 ] =  rtems_build_name( 'P', 'T', '2', '2' );\
+Task_name[ 23 ] =  rtems_build_name( 'P', 'T', '2', '3' );\
+Task_name[ 24 ] =  rtems_build_name( 'P', 'T', '2', '4' );\
+Task_name[ 25 ] =  rtems_build_name( 'P', 'T', '2', '5' );\
+Task_name[ 26 ] =  rtems_build_name( 'P', 'T', '2', '6' );\
+Task_name[ 27 ] =  rtems_build_name( 'P', 'T', '2', '7' );\
+Task_name[ 28 ] =  rtems_build_name( 'P', 'T', '2', '8' );\
+Task_name[ 29 ] =  rtems_build_name( 'P', 'T', '2', '9' );\
+Task_name[ 30 ] =  rtems_build_name( 'P', 'T', '3', '0' );\
+Task_name[ 31 ] =  rtems_build_name( 'P', 'T', '3', '1' );\
+Task_name[ 32 ] =  rtems_build_name( 'P', 'T', '3', '2' );\
+Task_name[ 33 ] =  rtems_build_name( 'P', 'T', '3', '3' );\
+Task_name[ 34 ] =  rtems_build_name( 'P', 'T', '3', '4' );\
+Task_name[ 35 ] =  rtems_build_name( 'P', 'T', '3', '5' );\
+Task_name[ 36 ] =  rtems_build_name( 'P', 'T', '3', '6' );\
+Task_name[ 37 ] =  rtems_build_name( 'P', 'T', '3', '7' );\
+Task_name[ 38 ] =  rtems_build_name( 'P', 'T', '3', '8' );\
+Task_name[ 39 ] =  rtems_build_name( 'P', 'T', '3', '9' );\
+Task_name[ 40 ] =  rtems_build_name( 'P', 'T', '4', '0' );\
+Task_name[ 41 ] =  rtems_build_name( 'P', 'T', '4', '1' );\
+Task_name[ 42 ] =  rtems_build_name( 'P', 'T', '4', '2' );\
+Task_name[ 43 ] =  rtems_build_name( 'P', 'T', '4', '3' );\
+Task_name[ 44 ] =  rtems_build_name( 'P', 'T', '4', '4' );\
+Task_name[ 45 ] =  rtems_build_name( 'P', 'T', '4', '5' );\
+Task_name[ 46 ] =  rtems_build_name( 'P', 'T', '4', '6' );\
+Task_name[ 47 ] =  rtems_build_name( 'P', 'T', '4', '7' );\
+Task_name[ 48 ] =  rtems_build_name( 'P', 'T', '4', '8' );\
+Task_name[ 49 ] =  rtems_build_name( 'P', 'T', '4', '9' );\
+Task_name[ 50 ] =  rtems_build_name( 'P', 'T', '5', '0' );\
+Task_name[ 51 ] =  rtems_build_name( 'P', 'T', '5', '1' );\
+Task_name[ 52 ] =  rtems_build_name( 'P', 'T', '5', '2' );\
+Task_name[ 53 ] =  rtems_build_name( 'P', 'T', '5', '3' );\
+Task_name[ 54 ] =  rtems_build_name( 'P', 'T', '5', '4' );\
+Task_name[ 55 ] =  rtems_build_name( 'P', 'T', '5', '5' );\
+Task_name[ 56 ] =  rtems_build_name( 'P', 'T', '5', '6' );\
+Task_name[ 57 ] =  rtems_build_name( 'P', 'T', '5', '7' );\
+Task_name[ 58 ] =  rtems_build_name( 'P', 'T', '5', '8' );\
+Task_name[ 59 ] =  rtems_build_name( 'P', 'T', '5', '9' );\
+Task_name[ 60 ] =  rtems_build_name( 'P', 'T', '6', '0' );\
+Task_name[ 61 ] =  rtems_build_name( 'P', 'T', '6', '1' );\
+Task_name[ 62 ] =  rtems_build_name( 'P', 'T', '6', '2' );\
+Task_name[ 63 ] =  rtems_build_name( 'P', 'T', '6', '3' );\
+Task_name[ 64 ] =  rtems_build_name( 'P', 'T', '6', '4' );\
+Task_name[ 65 ] =  rtems_build_name( 'P', 'T', '6', '5' );\
+Task_name[ 66 ] =  rtems_build_name( 'P', 'T', '6', '6' );\
+Task_name[ 67 ] =  rtems_build_name( 'P', 'T', '6', '7' );\
+Task_name[ 68 ] =  rtems_build_name( 'P', 'T', '6', '8' );\
+Task_name[ 69 ] =  rtems_build_name( 'P', 'T', '6', '9' );\
+Task_name[ 70 ] =  rtems_build_name( 'P', 'T', '7', '0' );\
+Task_name[ 71 ] =  rtems_build_name( 'P', 'T', '7', '1' );\
+Task_name[ 72 ] =  rtems_build_name( 'P', 'T', '7', '2' );\
+Task_name[ 73 ] =  rtems_build_name( 'P', 'T', '7', '3' );\
+Task_name[ 74 ] =  rtems_build_name( 'P', 'T', '7', '4' );\
+Task_name[ 75 ] =  rtems_build_name( 'P', 'T', '7', '5' );\
+Task_name[ 76 ] =  rtems_build_name( 'P', 'T', '7', '6' );\
+Task_name[ 77 ] =  rtems_build_name( 'P', 'T', '7', '7' );\
+Task_name[ 78 ] =  rtems_build_name( 'P', 'T', '7', '8' );\
+Task_name[ 79 ] =  rtems_build_name( 'P', 'T', '7', '9' );\
+Task_name[ 80 ] =  rtems_build_name( 'P', 'T', '8', '0' );\
 } while(0)
 
 #endif
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache00/system.h rtems-hwsched-cache/testsuites/gabtests/cache00/system.h
--- rtems-hwds/testsuites/gabtests/cache00/system.h	2010-10-01 05:17:28.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache00/system.h	2010-10-07 16:32:43.000000000 -0400
@@ -98,5 +98,5 @@ extern rtems_id   final_barrier;
 extern uint32_t *shared_array;
 #define SHARED_ARRAY_SIZE (1024 * 32 * 10) /* 1KB * num_kb * multiplier */
 extern uint32_t cache_line_length;
-extern uint32_t cache_num_lines_to_access;
+extern uint32_t cache_num_lines;
 /* end of include file */
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache00/tasks_aperiodic.c rtems-hwsched-cache/testsuites/gabtests/cache00/tasks_aperiodic.c
--- rtems-hwds/testsuites/gabtests/cache00/tasks_aperiodic.c	2010-09-30 19:49:13.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache00/tasks_aperiodic.c	2010-10-06 22:23:49.000000000 -0400
@@ -39,7 +39,7 @@ rtems_task Tasks_Aperiodic(
   */
 
   /* active computing */
-  busy_wait( Execution_us[argument], Instructions_per_us );
+//  busy_wait( Execution_us[argument], Instructions_per_us );
 
   /*
   rtems_clock_get(RTEMS_CLOCK_GET_TICKS_SINCE_BOOT, &stop);
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache00/tasks_periodic.c rtems-hwsched-cache/testsuites/gabtests/cache00/tasks_periodic.c
--- rtems-hwds/testsuites/gabtests/cache00/tasks_periodic.c	2010-09-30 19:49:13.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache00/tasks_periodic.c	2010-10-06 22:23:49.000000000 -0400
@@ -28,6 +28,8 @@ rtems_task Tasks_Periodic(
   uint32_t          periods_executed;
   uint32_t          local_deadlines_missed;
   uint32_t          temp = 0;
+  uint32_t          count = 0;
+  uint64_t  start_tick, stop_tick;
 
   status = rtems_rate_monotonic_create( argument, &rmid );
   directive_failed( status, "rtems_rate_monotonic_create" );
@@ -85,8 +87,10 @@ rtems_task Tasks_Periodic(
     /* loop through shared_array by cache_line_length until 
      * done accessing cache_num_lines_to_access. half of accesses 
      * are writes, and half are reads. */
+    count = 0;
     for ( i = (argument*SHARED_ARRAY_SIZE/NUM_TASKS); 
-          i < (argument*SHARED_ARRAY_SIZE/NUM_TASKS) + cache_num_lines_to_access; 
+          i < (argument*SHARED_ARRAY_SIZE/NUM_TASKS) + cache_num_lines*
+          (((double)Execution_us[argument]/(double)Periods[argument]/CONFIGURE_MICROSECONDS_PER_TICK/0.6)); 
           i++) 
     {
       if ((argument+i)%2) {
@@ -102,6 +106,10 @@ rtems_task Tasks_Periodic(
             i*(cache_line_length/sizeof(uint32_t)) % (SHARED_ARRAY_SIZE/sizeof(uint32_t))
           ] = argument;
       }
+      count += 40; /* rough estimate of the loop length */
+      if (count > Instructions_per_us * Execution_us[argument]) {
+        break;
+      }
     }
 
     /*
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache01/init.c rtems-hwsched-cache/testsuites/gabtests/cache01/init.c
--- rtems-hwds/testsuites/gabtests/cache01/init.c	2010-10-09 21:10:42.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache01/init.c	2010-10-06 22:23:48.000000000 -0400
@@ -42,7 +42,7 @@ rtems_id  final_barrier;
 uint32_t *shared_array;
 
 uint32_t  cache_line_length = 64;
-uint32_t  cache_num_lines_to_access = 512*(0.1 + 0.1); /* 512*(% of cache) */
+uint32_t  cache_num_lines = 512; /* 512*(% of cache) */
 
 rtems_task Init(
   rtems_task_argument argument
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache01/macros.h rtems-hwsched-cache/testsuites/gabtests/cache01/macros.h
--- rtems-hwds/testsuites/gabtests/cache01/macros.h	2010-10-01 04:44:22.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache01/macros.h	2010-10-07 16:04:25.000000000 -0400
@@ -5,15 +5,15 @@
  */
 
 /* This file was generated with the following parameters: 
--T 27,0.600,0 
+-T 1,0.013,0 -T 1,0.011,0 -T 1,0.015,0 -T 2,0.003,0 -T 3,0.008,0 -T 3,0.005,0 -T 4,0.013,0 -T 4,0.005,0 -T 4,0.012,0 -T 4,0.010,0 -T 4,0.004,0 -T 6,0.006,0 -T 6,0.011,0 -T 7,0.010,0 -T 7,0.004,0 -T 9,0.010,0 -T 9,0.004,0 -T 9,0.006,0 -T 9,0.010,0 -T 10,0.005,0 -T 10,0.007,0 -T 12,0.009,0 -T 13,0.009,0 -T 13,0.003,0 -T 13,0.002,0 -T 14,0.005,0 -T 15,0.003,0 -T 16,0.000,0 -T 16,0.001,0 -T 16,0.001,0 -T 17,0.013,0 -T 19,0.006,0 -T 19,0.008,0 -T 20,0.000,0 -T 21,0.011,0 -T 21,0.003,0 -T 22,0.009,0 -T 23,0.004,0 -T 23,0.014,0 -T 24,0.014,0 -T 24,0.014,0 -T 25,0.011,0 -T 25,0.005,0 -T 25,0.008,0 -T 26,0.009,0 -T 26,0.002,0 -T 26,0.012,0 -T 28,0.014,0 -T 30,0.002,0 -T 31,0.001,0 -T 32,0.014,0 -T 32,0.003,0 -T 32,0.006,0 -T 33,0.013,0 -T 33,0.002,0 -T 35,0.011,0 -T 35,0.012,0 -T 35,0.011,0 -T 37,0.001,0 -T 37,0.014,0 -T 37,0.005,0 -T 38,0.008,0 -T 38,0.011,0 -T 39,0.001,0 -T 39,0.012,0 -T 39,0.005,0 -T 40,0.012,0 -T 40,0.011,0 -T 41,0.013,0 -T 42,0.012,0 -T 43,0.006,0 -T 43,0.001,0 -T 43,0.003,0 -T 44,0.012,0 -T 45,0.006,0 -T 46,0.003,0 -T 48,0.002,0 -T 49,0.012,0 -T 50,0.005,0 -T 50,0.004,0 
 */
 
 #ifndef __MACROS_H_
 #define __MACROS_H_
 
 #define  HP_LENGTH                  (-1)
-#define  MAX_PERIOD                 (27)
-#define  NUM_PERIODIC_TASKS         (1)
+#define  MAX_PERIOD                 (50)
+#define  NUM_PERIODIC_TASKS         (80)
 #define  NUM_APERIODIC_TASKS        (0)
 #define  NUM_TASKS                  ( NUM_PERIODIC_TASKS + NUM_APERIODIC_TASKS )
 #endif
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache01/params.h rtems-hwsched-cache/testsuites/gabtests/cache01/params.h
--- rtems-hwds/testsuites/gabtests/cache01/params.h	2010-10-01 04:44:22.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache01/params.h	2010-10-07 16:04:25.000000000 -0400
@@ -5,32 +5,190 @@
  */
 
 /* This file was generated with the following parameters: 
--T 27,0.600,0 
+-T 1,0.013,0 -T 1,0.011,0 -T 1,0.015,0 -T 2,0.003,0 -T 3,0.008,0 -T 3,0.005,0 -T 4,0.013,0 -T 4,0.005,0 -T 4,0.012,0 -T 4,0.010,0 -T 4,0.004,0 -T 6,0.006,0 -T 6,0.011,0 -T 7,0.010,0 -T 7,0.004,0 -T 9,0.010,0 -T 9,0.004,0 -T 9,0.006,0 -T 9,0.010,0 -T 10,0.005,0 -T 10,0.007,0 -T 12,0.009,0 -T 13,0.009,0 -T 13,0.003,0 -T 13,0.002,0 -T 14,0.005,0 -T 15,0.003,0 -T 16,0.000,0 -T 16,0.001,0 -T 16,0.001,0 -T 17,0.013,0 -T 19,0.006,0 -T 19,0.008,0 -T 20,0.000,0 -T 21,0.011,0 -T 21,0.003,0 -T 22,0.009,0 -T 23,0.004,0 -T 23,0.014,0 -T 24,0.014,0 -T 24,0.014,0 -T 25,0.011,0 -T 25,0.005,0 -T 25,0.008,0 -T 26,0.009,0 -T 26,0.002,0 -T 26,0.012,0 -T 28,0.014,0 -T 30,0.002,0 -T 31,0.001,0 -T 32,0.014,0 -T 32,0.003,0 -T 32,0.006,0 -T 33,0.013,0 -T 33,0.002,0 -T 35,0.011,0 -T 35,0.012,0 -T 35,0.011,0 -T 37,0.001,0 -T 37,0.014,0 -T 37,0.005,0 -T 38,0.008,0 -T 38,0.011,0 -T 39,0.001,0 -T 39,0.012,0 -T 39,0.005,0 -T 40,0.012,0 -T 40,0.011,0 -T 41,0.013,0 -T 42,0.012,0 -T 43,0.006,0 -T 43,0.001,0 -T 43,0.003,0 -T 44,0.012,0 -T 45,0.006,0 -T 46,0.003,0 -T 48,0.002,0 -T 49,0.012,0 -T 50,0.005,0 -T 50,0.004,0 
 */
 
 #ifndef __PARAMS_H_
 #define __PARAMS_H_
 
 #define  HP_LENGTH                  (-1)
-#define  MAX_PERIOD                 (27)
-#define  NUM_PERIODIC_TASKS         (1)
+#define  MAX_PERIOD                 (50)
+#define  NUM_PERIODIC_TASKS         (80)
 #define  NUM_APERIODIC_TASKS        (0)
 #define  NUM_TASKS                  ( NUM_PERIODIC_TASKS + NUM_APERIODIC_TASKS )
 uint32_t  periodic_tasks            = NUM_PERIODIC_TASKS;
 
-rtems_task_priority Priorities[1+NUM_TASKS]= { 0, 27 };
+rtems_task_priority Priorities[1+NUM_TASKS]= { 0, 1, 1, 1, 2, 3, 3, 4, 4, 4, 4, 4, 6, 6, 7, 7, 9, 9, 9, 9, 10, 10, 12, 13, 13, 13, 14, 15, 16, 16, 16, 17, 19, 19, 20, 21, 21, 22, 23, 23, 24, 24, 25, 25, 25, 26, 26, 26, 28, 30, 31, 32, 32, 32, 33, 33, 35, 35, 35, 37, 37, 37, 38, 38, 39, 39, 39, 40, 40, 41, 42, 43, 43, 43, 44, 45, 46, 48, 49, 50, 50 };
 
-uint32_t  Periods[1+NUM_PERIODIC_TASKS]    = { 0, 27 };
+uint32_t  Periods[1+NUM_PERIODIC_TASKS]    = { 0, 1, 1, 1, 2, 3, 3, 4, 4, 4, 4, 4, 6, 6, 7, 7, 9, 9, 9, 9, 10, 10, 12, 13, 13, 13, 14, 15, 16, 16, 16, 17, 19, 19, 20, 21, 21, 22, 23, 23, 24, 24, 25, 25, 25, 26, 26, 26, 28, 30, 31, 32, 32, 32, 33, 33, 35, 35, 35, 37, 37, 37, 38, 38, 39, 39, 39, 40, 40, 41, 42, 43, 43, 43, 44, 45, 46, 48, 49, 50, 50 };
 
 uint32_t  Execution_us[1+NUM_TASKS]        = {
                                              0*CONFIGURE_MICROSECONDS_PER_TICK,
-                                             27*0.6*CONFIGURE_MICROSECONDS_PER_TICK
+                                             1*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             1*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             1*0.015*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             2*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             3*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             3*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             4*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             4*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             4*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             4*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             4*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             6*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             6*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             7*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             7*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             9*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             9*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             9*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             9*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             10*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             10*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             12*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             13*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             13*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             13*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             14*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             15*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             16*0*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             16*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             16*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             17*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             19*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             19*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             20*0*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             21*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             21*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             22*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             23*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             23*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             24*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             24*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             25*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             25*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             25*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             26*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             26*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             26*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             28*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             30*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             31*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             32*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             32*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             32*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             33*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             33*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             35*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             35*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             35*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             37*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             37*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             37*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             38*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             38*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             39*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             39*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             39*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             40*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             40*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             41*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             42*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             43*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             43*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             43*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             44*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             45*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             46*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             48*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             49*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             50*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             50*0.004*CONFIGURE_MICROSECONDS_PER_TICK
                                              };
 
-uint32_t  Phases[1+NUM_TASKS]           = { 0, 0 };
+uint32_t  Phases[1+NUM_TASKS]           = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
 
 #define build_task_name() do { \
 Task_name[ 1 ] =  rtems_build_name( 'P', 'T', '0', '1' );\
+Task_name[ 2 ] =  rtems_build_name( 'P', 'T', '0', '2' );\
+Task_name[ 3 ] =  rtems_build_name( 'P', 'T', '0', '3' );\
+Task_name[ 4 ] =  rtems_build_name( 'P', 'T', '0', '4' );\
+Task_name[ 5 ] =  rtems_build_name( 'P', 'T', '0', '5' );\
+Task_name[ 6 ] =  rtems_build_name( 'P', 'T', '0', '6' );\
+Task_name[ 7 ] =  rtems_build_name( 'P', 'T', '0', '7' );\
+Task_name[ 8 ] =  rtems_build_name( 'P', 'T', '0', '8' );\
+Task_name[ 9 ] =  rtems_build_name( 'P', 'T', '0', '9' );\
+Task_name[ 10 ] =  rtems_build_name( 'P', 'T', '1', '0' );\
+Task_name[ 11 ] =  rtems_build_name( 'P', 'T', '1', '1' );\
+Task_name[ 12 ] =  rtems_build_name( 'P', 'T', '1', '2' );\
+Task_name[ 13 ] =  rtems_build_name( 'P', 'T', '1', '3' );\
+Task_name[ 14 ] =  rtems_build_name( 'P', 'T', '1', '4' );\
+Task_name[ 15 ] =  rtems_build_name( 'P', 'T', '1', '5' );\
+Task_name[ 16 ] =  rtems_build_name( 'P', 'T', '1', '6' );\
+Task_name[ 17 ] =  rtems_build_name( 'P', 'T', '1', '7' );\
+Task_name[ 18 ] =  rtems_build_name( 'P', 'T', '1', '8' );\
+Task_name[ 19 ] =  rtems_build_name( 'P', 'T', '1', '9' );\
+Task_name[ 20 ] =  rtems_build_name( 'P', 'T', '2', '0' );\
+Task_name[ 21 ] =  rtems_build_name( 'P', 'T', '2', '1' );\
+Task_name[ 22 ] =  rtems_build_name( 'P', 'T', '2', '2' );\
+Task_name[ 23 ] =  rtems_build_name( 'P', 'T', '2', '3' );\
+Task_name[ 24 ] =  rtems_build_name( 'P', 'T', '2', '4' );\
+Task_name[ 25 ] =  rtems_build_name( 'P', 'T', '2', '5' );\
+Task_name[ 26 ] =  rtems_build_name( 'P', 'T', '2', '6' );\
+Task_name[ 27 ] =  rtems_build_name( 'P', 'T', '2', '7' );\
+Task_name[ 28 ] =  rtems_build_name( 'P', 'T', '2', '8' );\
+Task_name[ 29 ] =  rtems_build_name( 'P', 'T', '2', '9' );\
+Task_name[ 30 ] =  rtems_build_name( 'P', 'T', '3', '0' );\
+Task_name[ 31 ] =  rtems_build_name( 'P', 'T', '3', '1' );\
+Task_name[ 32 ] =  rtems_build_name( 'P', 'T', '3', '2' );\
+Task_name[ 33 ] =  rtems_build_name( 'P', 'T', '3', '3' );\
+Task_name[ 34 ] =  rtems_build_name( 'P', 'T', '3', '4' );\
+Task_name[ 35 ] =  rtems_build_name( 'P', 'T', '3', '5' );\
+Task_name[ 36 ] =  rtems_build_name( 'P', 'T', '3', '6' );\
+Task_name[ 37 ] =  rtems_build_name( 'P', 'T', '3', '7' );\
+Task_name[ 38 ] =  rtems_build_name( 'P', 'T', '3', '8' );\
+Task_name[ 39 ] =  rtems_build_name( 'P', 'T', '3', '9' );\
+Task_name[ 40 ] =  rtems_build_name( 'P', 'T', '4', '0' );\
+Task_name[ 41 ] =  rtems_build_name( 'P', 'T', '4', '1' );\
+Task_name[ 42 ] =  rtems_build_name( 'P', 'T', '4', '2' );\
+Task_name[ 43 ] =  rtems_build_name( 'P', 'T', '4', '3' );\
+Task_name[ 44 ] =  rtems_build_name( 'P', 'T', '4', '4' );\
+Task_name[ 45 ] =  rtems_build_name( 'P', 'T', '4', '5' );\
+Task_name[ 46 ] =  rtems_build_name( 'P', 'T', '4', '6' );\
+Task_name[ 47 ] =  rtems_build_name( 'P', 'T', '4', '7' );\
+Task_name[ 48 ] =  rtems_build_name( 'P', 'T', '4', '8' );\
+Task_name[ 49 ] =  rtems_build_name( 'P', 'T', '4', '9' );\
+Task_name[ 50 ] =  rtems_build_name( 'P', 'T', '5', '0' );\
+Task_name[ 51 ] =  rtems_build_name( 'P', 'T', '5', '1' );\
+Task_name[ 52 ] =  rtems_build_name( 'P', 'T', '5', '2' );\
+Task_name[ 53 ] =  rtems_build_name( 'P', 'T', '5', '3' );\
+Task_name[ 54 ] =  rtems_build_name( 'P', 'T', '5', '4' );\
+Task_name[ 55 ] =  rtems_build_name( 'P', 'T', '5', '5' );\
+Task_name[ 56 ] =  rtems_build_name( 'P', 'T', '5', '6' );\
+Task_name[ 57 ] =  rtems_build_name( 'P', 'T', '5', '7' );\
+Task_name[ 58 ] =  rtems_build_name( 'P', 'T', '5', '8' );\
+Task_name[ 59 ] =  rtems_build_name( 'P', 'T', '5', '9' );\
+Task_name[ 60 ] =  rtems_build_name( 'P', 'T', '6', '0' );\
+Task_name[ 61 ] =  rtems_build_name( 'P', 'T', '6', '1' );\
+Task_name[ 62 ] =  rtems_build_name( 'P', 'T', '6', '2' );\
+Task_name[ 63 ] =  rtems_build_name( 'P', 'T', '6', '3' );\
+Task_name[ 64 ] =  rtems_build_name( 'P', 'T', '6', '4' );\
+Task_name[ 65 ] =  rtems_build_name( 'P', 'T', '6', '5' );\
+Task_name[ 66 ] =  rtems_build_name( 'P', 'T', '6', '6' );\
+Task_name[ 67 ] =  rtems_build_name( 'P', 'T', '6', '7' );\
+Task_name[ 68 ] =  rtems_build_name( 'P', 'T', '6', '8' );\
+Task_name[ 69 ] =  rtems_build_name( 'P', 'T', '6', '9' );\
+Task_name[ 70 ] =  rtems_build_name( 'P', 'T', '7', '0' );\
+Task_name[ 71 ] =  rtems_build_name( 'P', 'T', '7', '1' );\
+Task_name[ 72 ] =  rtems_build_name( 'P', 'T', '7', '2' );\
+Task_name[ 73 ] =  rtems_build_name( 'P', 'T', '7', '3' );\
+Task_name[ 74 ] =  rtems_build_name( 'P', 'T', '7', '4' );\
+Task_name[ 75 ] =  rtems_build_name( 'P', 'T', '7', '5' );\
+Task_name[ 76 ] =  rtems_build_name( 'P', 'T', '7', '6' );\
+Task_name[ 77 ] =  rtems_build_name( 'P', 'T', '7', '7' );\
+Task_name[ 78 ] =  rtems_build_name( 'P', 'T', '7', '8' );\
+Task_name[ 79 ] =  rtems_build_name( 'P', 'T', '7', '9' );\
+Task_name[ 80 ] =  rtems_build_name( 'P', 'T', '8', '0' );\
 } while(0)
 
 #endif
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache01/system.h rtems-hwsched-cache/testsuites/gabtests/cache01/system.h
--- rtems-hwds/testsuites/gabtests/cache01/system.h	2010-10-01 05:17:28.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache01/system.h	2010-10-07 16:32:43.000000000 -0400
@@ -98,5 +98,5 @@ extern rtems_id   final_barrier;
 extern uint32_t *shared_array;
 #define SHARED_ARRAY_SIZE (1024 * 32 * 10) /* 1KB * num_kb * multiplier */
 extern uint32_t cache_line_length;
-extern uint32_t cache_num_lines_to_access;
+extern uint32_t cache_num_lines;
 /* end of include file */
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache01/tasks_periodic.c rtems-hwsched-cache/testsuites/gabtests/cache01/tasks_periodic.c
--- rtems-hwds/testsuites/gabtests/cache01/tasks_periodic.c	2010-09-30 19:49:13.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache01/tasks_periodic.c	2010-10-06 22:23:48.000000000 -0400
@@ -28,6 +28,8 @@ rtems_task Tasks_Periodic(
   uint32_t          periods_executed;
   uint32_t          local_deadlines_missed;
   uint32_t          temp = 0;
+  uint32_t          count = 0;
+  uint64_t  start_tick, stop_tick;
 
   status = rtems_rate_monotonic_create( argument, &rmid );
   directive_failed( status, "rtems_rate_monotonic_create" );
@@ -85,8 +87,10 @@ rtems_task Tasks_Periodic(
     /* loop through shared_array by cache_line_length until 
      * done accessing cache_num_lines_to_access. half of accesses 
      * are writes, and half are reads. */
+    count = 0;
     for ( i = (argument*SHARED_ARRAY_SIZE/NUM_TASKS); 
-          i < (argument*SHARED_ARRAY_SIZE/NUM_TASKS) + cache_num_lines_to_access; 
+          i < (argument*SHARED_ARRAY_SIZE/NUM_TASKS) + cache_num_lines*
+          (((double)Execution_us[argument]/(double)Periods[argument]/CONFIGURE_MICROSECONDS_PER_TICK/0.6)); 
           i++) 
     {
       if ((argument+i)%2) {
@@ -102,6 +106,10 @@ rtems_task Tasks_Periodic(
             i*(cache_line_length/sizeof(uint32_t)) % (SHARED_ARRAY_SIZE/sizeof(uint32_t))
           ] = argument;
       }
+      count += 40; /* rough estimate of the loop length */
+      if (count > Instructions_per_us * Execution_us[argument]) {
+        break;
+      }
     }
 
     /*
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache02/init.c rtems-hwsched-cache/testsuites/gabtests/cache02/init.c
--- rtems-hwds/testsuites/gabtests/cache02/init.c	2010-10-09 21:10:42.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache02/init.c	2010-10-06 22:23:49.000000000 -0400
@@ -42,7 +42,7 @@ rtems_id  final_barrier;
 uint32_t *shared_array;
 
 uint32_t  cache_line_length = 64;
-uint32_t  cache_num_lines_to_access = 512*(0.1 + 0.2); /* 512*(% of cache) */
+uint32_t  cache_num_lines = 512; /* 512*(% of cache) */
 
 rtems_task Init(
   rtems_task_argument argument
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache02/macros.h rtems-hwsched-cache/testsuites/gabtests/cache02/macros.h
--- rtems-hwds/testsuites/gabtests/cache02/macros.h	2010-10-01 04:44:22.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache02/macros.h	2010-10-07 16:04:25.000000000 -0400
@@ -5,15 +5,15 @@
  */
 
 /* This file was generated with the following parameters: 
--T 27,0.600,0 
+-T 1,0.008,0 -T 1,0.005,0 -T 2,0.009,0 -T 5,0.011,0 -T 5,0.003,0 -T 6,0.014,0 -T 6,0.001,0 -T 7,0.007,0 -T 7,0.008,0 -T 7,0.014,0 -T 7,0.012,0 -T 8,0.002,0 -T 9,0.013,0 -T 10,0.001,0 -T 10,0.014,0 -T 11,0.010,0 -T 12,0.010,0 -T 12,0.007,0 -T 13,0.011,0 -T 13,0.001,0 -T 15,0.003,0 -T 15,0.013,0 -T 15,0.012,0 -T 16,0.001,0 -T 17,0.007,0 -T 17,0.009,0 -T 18,0.004,0 -T 19,0.006,0 -T 20,0.004,0 -T 20,0.006,0 -T 21,0.011,0 -T 21,0.013,0 -T 21,0.000,0 -T 24,0.007,0 -T 25,0.002,0 -T 25,0.011,0 -T 27,0.005,0 -T 27,0.012,0 -T 28,0.006,0 -T 28,0.009,0 -T 28,0.007,0 -T 29,0.011,0 -T 31,0.002,0 -T 31,0.008,0 -T 32,0.005,0 -T 32,0.003,0 -T 33,0.006,0 -T 34,0.009,0 -T 35,0.008,0 -T 35,0.012,0 -T 36,0.010,0 -T 36,0.012,0 -T 37,0.009,0 -T 37,0.000,0 -T 38,0.000,0 -T 38,0.010,0 -T 38,0.013,0 -T 38,0.001,0 -T 39,0.012,0 -T 39,0.003,0 -T 39,0.013,0 -T 39,0.014,0 -T 41,0.005,0 -T 42,0.010,0 -T 43,0.013,0 -T 44,0.003,0 -T 45,0.005,0 -T 45,0.011,0 -T 46,0.005,0 -T 46,0.014,0 -T 47,0.011,0 -T 47,0.005,0 -T 47,0.007,0 -T 47,0.014,0 -T 47,0.001,0 -T 48,0.001,0 -T 48,0.011,0 -T 49,0.004,0 -T 50,0.012,0 -T 50,0.003,0 
 */
 
 #ifndef __MACROS_H_
 #define __MACROS_H_
 
 #define  HP_LENGTH                  (-1)
-#define  MAX_PERIOD                 (27)
-#define  NUM_PERIODIC_TASKS         (1)
+#define  MAX_PERIOD                 (50)
+#define  NUM_PERIODIC_TASKS         (80)
 #define  NUM_APERIODIC_TASKS        (0)
 #define  NUM_TASKS                  ( NUM_PERIODIC_TASKS + NUM_APERIODIC_TASKS )
 #endif
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache02/params.h rtems-hwsched-cache/testsuites/gabtests/cache02/params.h
--- rtems-hwds/testsuites/gabtests/cache02/params.h	2010-10-01 04:44:22.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache02/params.h	2010-10-07 16:04:25.000000000 -0400
@@ -5,32 +5,190 @@
  */
 
 /* This file was generated with the following parameters: 
--T 27,0.600,0 
+-T 1,0.008,0 -T 1,0.005,0 -T 2,0.009,0 -T 5,0.011,0 -T 5,0.003,0 -T 6,0.014,0 -T 6,0.001,0 -T 7,0.007,0 -T 7,0.008,0 -T 7,0.014,0 -T 7,0.012,0 -T 8,0.002,0 -T 9,0.013,0 -T 10,0.001,0 -T 10,0.014,0 -T 11,0.010,0 -T 12,0.010,0 -T 12,0.007,0 -T 13,0.011,0 -T 13,0.001,0 -T 15,0.003,0 -T 15,0.013,0 -T 15,0.012,0 -T 16,0.001,0 -T 17,0.007,0 -T 17,0.009,0 -T 18,0.004,0 -T 19,0.006,0 -T 20,0.004,0 -T 20,0.006,0 -T 21,0.011,0 -T 21,0.013,0 -T 21,0.000,0 -T 24,0.007,0 -T 25,0.002,0 -T 25,0.011,0 -T 27,0.005,0 -T 27,0.012,0 -T 28,0.006,0 -T 28,0.009,0 -T 28,0.007,0 -T 29,0.011,0 -T 31,0.002,0 -T 31,0.008,0 -T 32,0.005,0 -T 32,0.003,0 -T 33,0.006,0 -T 34,0.009,0 -T 35,0.008,0 -T 35,0.012,0 -T 36,0.010,0 -T 36,0.012,0 -T 37,0.009,0 -T 37,0.000,0 -T 38,0.000,0 -T 38,0.010,0 -T 38,0.013,0 -T 38,0.001,0 -T 39,0.012,0 -T 39,0.003,0 -T 39,0.013,0 -T 39,0.014,0 -T 41,0.005,0 -T 42,0.010,0 -T 43,0.013,0 -T 44,0.003,0 -T 45,0.005,0 -T 45,0.011,0 -T 46,0.005,0 -T 46,0.014,0 -T 47,0.011,0 -T 47,0.005,0 -T 47,0.007,0 -T 47,0.014,0 -T 47,0.001,0 -T 48,0.001,0 -T 48,0.011,0 -T 49,0.004,0 -T 50,0.012,0 -T 50,0.003,0 
 */
 
 #ifndef __PARAMS_H_
 #define __PARAMS_H_
 
 #define  HP_LENGTH                  (-1)
-#define  MAX_PERIOD                 (27)
-#define  NUM_PERIODIC_TASKS         (1)
+#define  MAX_PERIOD                 (50)
+#define  NUM_PERIODIC_TASKS         (80)
 #define  NUM_APERIODIC_TASKS        (0)
 #define  NUM_TASKS                  ( NUM_PERIODIC_TASKS + NUM_APERIODIC_TASKS )
 uint32_t  periodic_tasks            = NUM_PERIODIC_TASKS;
 
-rtems_task_priority Priorities[1+NUM_TASKS]= { 0, 27 };
+rtems_task_priority Priorities[1+NUM_TASKS]= { 0, 1, 1, 2, 5, 5, 6, 6, 7, 7, 7, 7, 8, 9, 10, 10, 11, 12, 12, 13, 13, 15, 15, 15, 16, 17, 17, 18, 19, 20, 20, 21, 21, 21, 24, 25, 25, 27, 27, 28, 28, 28, 29, 31, 31, 32, 32, 33, 34, 35, 35, 36, 36, 37, 37, 38, 38, 38, 38, 39, 39, 39, 39, 41, 42, 43, 44, 45, 45, 46, 46, 47, 47, 47, 47, 47, 48, 48, 49, 50, 50 };
 
-uint32_t  Periods[1+NUM_PERIODIC_TASKS]    = { 0, 27 };
+uint32_t  Periods[1+NUM_PERIODIC_TASKS]    = { 0, 1, 1, 2, 5, 5, 6, 6, 7, 7, 7, 7, 8, 9, 10, 10, 11, 12, 12, 13, 13, 15, 15, 15, 16, 17, 17, 18, 19, 20, 20, 21, 21, 21, 24, 25, 25, 27, 27, 28, 28, 28, 29, 31, 31, 32, 32, 33, 34, 35, 35, 36, 36, 37, 37, 38, 38, 38, 38, 39, 39, 39, 39, 41, 42, 43, 44, 45, 45, 46, 46, 47, 47, 47, 47, 47, 48, 48, 49, 50, 50 };
 
 uint32_t  Execution_us[1+NUM_TASKS]        = {
                                              0*CONFIGURE_MICROSECONDS_PER_TICK,
-                                             27*0.6*CONFIGURE_MICROSECONDS_PER_TICK
+                                             1*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             1*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             2*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             5*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             5*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             6*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             6*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             7*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             7*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             7*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             7*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             8*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             9*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             10*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             10*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             11*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             12*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             12*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             13*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             13*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             15*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             15*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             15*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             16*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             17*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             17*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             18*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             19*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             20*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             20*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             21*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             21*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             21*0*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             24*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             25*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             25*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             27*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             27*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             28*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             28*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             28*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             29*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             31*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             31*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             32*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             32*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             33*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             34*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             35*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             35*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             36*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             36*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             37*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             37*0*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             38*0*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             38*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             38*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             38*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             39*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             39*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             39*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             39*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             41*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             42*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             43*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             44*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             45*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             45*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             46*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             46*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             47*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             47*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             47*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             47*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             47*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             48*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             48*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             49*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             50*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             50*0.003*CONFIGURE_MICROSECONDS_PER_TICK
                                              };
 
-uint32_t  Phases[1+NUM_TASKS]           = { 0, 0 };
+uint32_t  Phases[1+NUM_TASKS]           = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
 
 #define build_task_name() do { \
 Task_name[ 1 ] =  rtems_build_name( 'P', 'T', '0', '1' );\
+Task_name[ 2 ] =  rtems_build_name( 'P', 'T', '0', '2' );\
+Task_name[ 3 ] =  rtems_build_name( 'P', 'T', '0', '3' );\
+Task_name[ 4 ] =  rtems_build_name( 'P', 'T', '0', '4' );\
+Task_name[ 5 ] =  rtems_build_name( 'P', 'T', '0', '5' );\
+Task_name[ 6 ] =  rtems_build_name( 'P', 'T', '0', '6' );\
+Task_name[ 7 ] =  rtems_build_name( 'P', 'T', '0', '7' );\
+Task_name[ 8 ] =  rtems_build_name( 'P', 'T', '0', '8' );\
+Task_name[ 9 ] =  rtems_build_name( 'P', 'T', '0', '9' );\
+Task_name[ 10 ] =  rtems_build_name( 'P', 'T', '1', '0' );\
+Task_name[ 11 ] =  rtems_build_name( 'P', 'T', '1', '1' );\
+Task_name[ 12 ] =  rtems_build_name( 'P', 'T', '1', '2' );\
+Task_name[ 13 ] =  rtems_build_name( 'P', 'T', '1', '3' );\
+Task_name[ 14 ] =  rtems_build_name( 'P', 'T', '1', '4' );\
+Task_name[ 15 ] =  rtems_build_name( 'P', 'T', '1', '5' );\
+Task_name[ 16 ] =  rtems_build_name( 'P', 'T', '1', '6' );\
+Task_name[ 17 ] =  rtems_build_name( 'P', 'T', '1', '7' );\
+Task_name[ 18 ] =  rtems_build_name( 'P', 'T', '1', '8' );\
+Task_name[ 19 ] =  rtems_build_name( 'P', 'T', '1', '9' );\
+Task_name[ 20 ] =  rtems_build_name( 'P', 'T', '2', '0' );\
+Task_name[ 21 ] =  rtems_build_name( 'P', 'T', '2', '1' );\
+Task_name[ 22 ] =  rtems_build_name( 'P', 'T', '2', '2' );\
+Task_name[ 23 ] =  rtems_build_name( 'P', 'T', '2', '3' );\
+Task_name[ 24 ] =  rtems_build_name( 'P', 'T', '2', '4' );\
+Task_name[ 25 ] =  rtems_build_name( 'P', 'T', '2', '5' );\
+Task_name[ 26 ] =  rtems_build_name( 'P', 'T', '2', '6' );\
+Task_name[ 27 ] =  rtems_build_name( 'P', 'T', '2', '7' );\
+Task_name[ 28 ] =  rtems_build_name( 'P', 'T', '2', '8' );\
+Task_name[ 29 ] =  rtems_build_name( 'P', 'T', '2', '9' );\
+Task_name[ 30 ] =  rtems_build_name( 'P', 'T', '3', '0' );\
+Task_name[ 31 ] =  rtems_build_name( 'P', 'T', '3', '1' );\
+Task_name[ 32 ] =  rtems_build_name( 'P', 'T', '3', '2' );\
+Task_name[ 33 ] =  rtems_build_name( 'P', 'T', '3', '3' );\
+Task_name[ 34 ] =  rtems_build_name( 'P', 'T', '3', '4' );\
+Task_name[ 35 ] =  rtems_build_name( 'P', 'T', '3', '5' );\
+Task_name[ 36 ] =  rtems_build_name( 'P', 'T', '3', '6' );\
+Task_name[ 37 ] =  rtems_build_name( 'P', 'T', '3', '7' );\
+Task_name[ 38 ] =  rtems_build_name( 'P', 'T', '3', '8' );\
+Task_name[ 39 ] =  rtems_build_name( 'P', 'T', '3', '9' );\
+Task_name[ 40 ] =  rtems_build_name( 'P', 'T', '4', '0' );\
+Task_name[ 41 ] =  rtems_build_name( 'P', 'T', '4', '1' );\
+Task_name[ 42 ] =  rtems_build_name( 'P', 'T', '4', '2' );\
+Task_name[ 43 ] =  rtems_build_name( 'P', 'T', '4', '3' );\
+Task_name[ 44 ] =  rtems_build_name( 'P', 'T', '4', '4' );\
+Task_name[ 45 ] =  rtems_build_name( 'P', 'T', '4', '5' );\
+Task_name[ 46 ] =  rtems_build_name( 'P', 'T', '4', '6' );\
+Task_name[ 47 ] =  rtems_build_name( 'P', 'T', '4', '7' );\
+Task_name[ 48 ] =  rtems_build_name( 'P', 'T', '4', '8' );\
+Task_name[ 49 ] =  rtems_build_name( 'P', 'T', '4', '9' );\
+Task_name[ 50 ] =  rtems_build_name( 'P', 'T', '5', '0' );\
+Task_name[ 51 ] =  rtems_build_name( 'P', 'T', '5', '1' );\
+Task_name[ 52 ] =  rtems_build_name( 'P', 'T', '5', '2' );\
+Task_name[ 53 ] =  rtems_build_name( 'P', 'T', '5', '3' );\
+Task_name[ 54 ] =  rtems_build_name( 'P', 'T', '5', '4' );\
+Task_name[ 55 ] =  rtems_build_name( 'P', 'T', '5', '5' );\
+Task_name[ 56 ] =  rtems_build_name( 'P', 'T', '5', '6' );\
+Task_name[ 57 ] =  rtems_build_name( 'P', 'T', '5', '7' );\
+Task_name[ 58 ] =  rtems_build_name( 'P', 'T', '5', '8' );\
+Task_name[ 59 ] =  rtems_build_name( 'P', 'T', '5', '9' );\
+Task_name[ 60 ] =  rtems_build_name( 'P', 'T', '6', '0' );\
+Task_name[ 61 ] =  rtems_build_name( 'P', 'T', '6', '1' );\
+Task_name[ 62 ] =  rtems_build_name( 'P', 'T', '6', '2' );\
+Task_name[ 63 ] =  rtems_build_name( 'P', 'T', '6', '3' );\
+Task_name[ 64 ] =  rtems_build_name( 'P', 'T', '6', '4' );\
+Task_name[ 65 ] =  rtems_build_name( 'P', 'T', '6', '5' );\
+Task_name[ 66 ] =  rtems_build_name( 'P', 'T', '6', '6' );\
+Task_name[ 67 ] =  rtems_build_name( 'P', 'T', '6', '7' );\
+Task_name[ 68 ] =  rtems_build_name( 'P', 'T', '6', '8' );\
+Task_name[ 69 ] =  rtems_build_name( 'P', 'T', '6', '9' );\
+Task_name[ 70 ] =  rtems_build_name( 'P', 'T', '7', '0' );\
+Task_name[ 71 ] =  rtems_build_name( 'P', 'T', '7', '1' );\
+Task_name[ 72 ] =  rtems_build_name( 'P', 'T', '7', '2' );\
+Task_name[ 73 ] =  rtems_build_name( 'P', 'T', '7', '3' );\
+Task_name[ 74 ] =  rtems_build_name( 'P', 'T', '7', '4' );\
+Task_name[ 75 ] =  rtems_build_name( 'P', 'T', '7', '5' );\
+Task_name[ 76 ] =  rtems_build_name( 'P', 'T', '7', '6' );\
+Task_name[ 77 ] =  rtems_build_name( 'P', 'T', '7', '7' );\
+Task_name[ 78 ] =  rtems_build_name( 'P', 'T', '7', '8' );\
+Task_name[ 79 ] =  rtems_build_name( 'P', 'T', '7', '9' );\
+Task_name[ 80 ] =  rtems_build_name( 'P', 'T', '8', '0' );\
 } while(0)
 
 #endif
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache02/system.h rtems-hwsched-cache/testsuites/gabtests/cache02/system.h
--- rtems-hwds/testsuites/gabtests/cache02/system.h	2010-10-01 05:17:28.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache02/system.h	2010-10-07 16:32:43.000000000 -0400
@@ -98,5 +98,5 @@ extern rtems_id   final_barrier;
 extern uint32_t *shared_array;
 #define SHARED_ARRAY_SIZE (1024 * 32 * 10) /* 1KB * num_kb * multiplier */
 extern uint32_t cache_line_length;
-extern uint32_t cache_num_lines_to_access;
+extern uint32_t cache_num_lines;
 /* end of include file */
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache02/tasks_periodic.c rtems-hwsched-cache/testsuites/gabtests/cache02/tasks_periodic.c
--- rtems-hwds/testsuites/gabtests/cache02/tasks_periodic.c	2010-09-30 19:49:13.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache02/tasks_periodic.c	2010-10-06 22:23:49.000000000 -0400
@@ -28,6 +28,8 @@ rtems_task Tasks_Periodic(
   uint32_t          periods_executed;
   uint32_t          local_deadlines_missed;
   uint32_t          temp = 0;
+  uint32_t          count = 0;
+  uint64_t  start_tick, stop_tick;
 
   status = rtems_rate_monotonic_create( argument, &rmid );
   directive_failed( status, "rtems_rate_monotonic_create" );
@@ -85,8 +87,10 @@ rtems_task Tasks_Periodic(
     /* loop through shared_array by cache_line_length until 
      * done accessing cache_num_lines_to_access. half of accesses 
      * are writes, and half are reads. */
+    count = 0;
     for ( i = (argument*SHARED_ARRAY_SIZE/NUM_TASKS); 
-          i < (argument*SHARED_ARRAY_SIZE/NUM_TASKS) + cache_num_lines_to_access; 
+          i < (argument*SHARED_ARRAY_SIZE/NUM_TASKS) + cache_num_lines*
+          (((double)Execution_us[argument]/(double)Periods[argument]/CONFIGURE_MICROSECONDS_PER_TICK/0.6)); 
           i++) 
     {
       if ((argument+i)%2) {
@@ -102,6 +106,10 @@ rtems_task Tasks_Periodic(
             i*(cache_line_length/sizeof(uint32_t)) % (SHARED_ARRAY_SIZE/sizeof(uint32_t))
           ] = argument;
       }
+      count += 40; /* rough estimate of the loop length */
+      if (count > Instructions_per_us * Execution_us[argument]) {
+        break;
+      }
     }
 
     /*
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache03/init.c rtems-hwsched-cache/testsuites/gabtests/cache03/init.c
--- rtems-hwds/testsuites/gabtests/cache03/init.c	2010-10-09 21:10:42.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache03/init.c	2010-10-06 22:23:48.000000000 -0400
@@ -42,7 +42,7 @@ rtems_id  final_barrier;
 uint32_t *shared_array;
 
 uint32_t  cache_line_length = 64;
-uint32_t  cache_num_lines_to_access = 512*(0.1 + 0.3); /* 512*(% of cache) */
+uint32_t  cache_num_lines = 512; /* 512*(% of cache) */
 
 rtems_task Init(
   rtems_task_argument argument
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache03/macros.h rtems-hwsched-cache/testsuites/gabtests/cache03/macros.h
--- rtems-hwds/testsuites/gabtests/cache03/macros.h	2010-10-01 04:44:22.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache03/macros.h	2010-10-07 16:04:25.000000000 -0400
@@ -5,15 +5,15 @@
  */
 
 /* This file was generated with the following parameters: 
--T 27,0.600,0 
+-T 1,0.009,0 -T 1,0.001,0 -T 1,0.013,0 -T 2,0.010,0 -T 2,0.008,0 -T 3,0.014,0 -T 4,0.013,0 -T 5,0.007,0 -T 6,0.005,0 -T 6,0.011,0 -T 7,0.006,0 -T 7,0.009,0 -T 7,0.002,0 -T 7,0.005,0 -T 10,0.005,0 -T 10,0.003,0 -T 12,0.002,0 -T 12,0.007,0 -T 12,0.006,0 -T 12,0.008,0 -T 13,0.012,0 -T 13,0.002,0 -T 14,0.001,0 -T 15,0.009,0 -T 16,0.005,0 -T 17,0.006,0 -T 17,0.004,0 -T 17,0.013,0 -T 17,0.009,0 -T 20,0.011,0 -T 21,0.003,0 -T 21,0.010,0 -T 22,0.002,0 -T 22,0.005,0 -T 22,0.005,0 -T 23,0.009,0 -T 23,0.009,0 -T 24,0.010,0 -T 24,0.013,0 -T 25,0.002,0 -T 28,0.006,0 -T 28,0.003,0 -T 29,0.007,0 -T 29,0.014,0 -T 29,0.013,0 -T 29,0.003,0 -T 30,0.012,0 -T 30,0.009,0 -T 31,0.004,0 -T 31,0.010,0 -T 31,0.010,0 -T 31,0.003,0 -T 31,0.012,0 -T 32,0.007,0 -T 33,0.011,0 -T 33,0.015,0 -T 34,0.007,0 -T 35,0.005,0 -T 35,0.008,0 -T 35,0.010,0 -T 35,0.002,0 -T 35,0.008,0 -T 35,0.015,0 -T 36,0.002,0 -T 40,0.009,0 -T 40,0.004,0 -T 41,0.006,0 -T 42,0.009,0 -T 43,0.013,0 -T 44,0.006,0 -T 44,0.012,0 -T 44,0.011,0 -T 46,0.003,0 -T 47,0.014,0 -T 48,0.003,0 -T 48,0.008,0 -T 49,0.010,0 -T 50,0.001,0 -T 50,0.010,0 -T 50,0.003,0 
 */
 
 #ifndef __MACROS_H_
 #define __MACROS_H_
 
 #define  HP_LENGTH                  (-1)
-#define  MAX_PERIOD                 (27)
-#define  NUM_PERIODIC_TASKS         (1)
+#define  MAX_PERIOD                 (50)
+#define  NUM_PERIODIC_TASKS         (80)
 #define  NUM_APERIODIC_TASKS        (0)
 #define  NUM_TASKS                  ( NUM_PERIODIC_TASKS + NUM_APERIODIC_TASKS )
 #endif
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache03/params.h rtems-hwsched-cache/testsuites/gabtests/cache03/params.h
--- rtems-hwds/testsuites/gabtests/cache03/params.h	2010-10-01 04:44:22.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache03/params.h	2010-10-07 16:04:25.000000000 -0400
@@ -5,32 +5,190 @@
  */
 
 /* This file was generated with the following parameters: 
--T 27,0.600,0 
+-T 1,0.009,0 -T 1,0.001,0 -T 1,0.013,0 -T 2,0.010,0 -T 2,0.008,0 -T 3,0.014,0 -T 4,0.013,0 -T 5,0.007,0 -T 6,0.005,0 -T 6,0.011,0 -T 7,0.006,0 -T 7,0.009,0 -T 7,0.002,0 -T 7,0.005,0 -T 10,0.005,0 -T 10,0.003,0 -T 12,0.002,0 -T 12,0.007,0 -T 12,0.006,0 -T 12,0.008,0 -T 13,0.012,0 -T 13,0.002,0 -T 14,0.001,0 -T 15,0.009,0 -T 16,0.005,0 -T 17,0.006,0 -T 17,0.004,0 -T 17,0.013,0 -T 17,0.009,0 -T 20,0.011,0 -T 21,0.003,0 -T 21,0.010,0 -T 22,0.002,0 -T 22,0.005,0 -T 22,0.005,0 -T 23,0.009,0 -T 23,0.009,0 -T 24,0.010,0 -T 24,0.013,0 -T 25,0.002,0 -T 28,0.006,0 -T 28,0.003,0 -T 29,0.007,0 -T 29,0.014,0 -T 29,0.013,0 -T 29,0.003,0 -T 30,0.012,0 -T 30,0.009,0 -T 31,0.004,0 -T 31,0.010,0 -T 31,0.010,0 -T 31,0.003,0 -T 31,0.012,0 -T 32,0.007,0 -T 33,0.011,0 -T 33,0.015,0 -T 34,0.007,0 -T 35,0.005,0 -T 35,0.008,0 -T 35,0.010,0 -T 35,0.002,0 -T 35,0.008,0 -T 35,0.015,0 -T 36,0.002,0 -T 40,0.009,0 -T 40,0.004,0 -T 41,0.006,0 -T 42,0.009,0 -T 43,0.013,0 -T 44,0.006,0 -T 44,0.012,0 -T 44,0.011,0 -T 46,0.003,0 -T 47,0.014,0 -T 48,0.003,0 -T 48,0.008,0 -T 49,0.010,0 -T 50,0.001,0 -T 50,0.010,0 -T 50,0.003,0 
 */
 
 #ifndef __PARAMS_H_
 #define __PARAMS_H_
 
 #define  HP_LENGTH                  (-1)
-#define  MAX_PERIOD                 (27)
-#define  NUM_PERIODIC_TASKS         (1)
+#define  MAX_PERIOD                 (50)
+#define  NUM_PERIODIC_TASKS         (80)
 #define  NUM_APERIODIC_TASKS        (0)
 #define  NUM_TASKS                  ( NUM_PERIODIC_TASKS + NUM_APERIODIC_TASKS )
 uint32_t  periodic_tasks            = NUM_PERIODIC_TASKS;
 
-rtems_task_priority Priorities[1+NUM_TASKS]= { 0, 27 };
+rtems_task_priority Priorities[1+NUM_TASKS]= { 0, 1, 1, 1, 2, 2, 3, 4, 5, 6, 6, 7, 7, 7, 7, 10, 10, 12, 12, 12, 12, 13, 13, 14, 15, 16, 17, 17, 17, 17, 20, 21, 21, 22, 22, 22, 23, 23, 24, 24, 25, 28, 28, 29, 29, 29, 29, 30, 30, 31, 31, 31, 31, 31, 32, 33, 33, 34, 35, 35, 35, 35, 35, 35, 36, 40, 40, 41, 42, 43, 44, 44, 44, 46, 47, 48, 48, 49, 50, 50, 50 };
 
-uint32_t  Periods[1+NUM_PERIODIC_TASKS]    = { 0, 27 };
+uint32_t  Periods[1+NUM_PERIODIC_TASKS]    = { 0, 1, 1, 1, 2, 2, 3, 4, 5, 6, 6, 7, 7, 7, 7, 10, 10, 12, 12, 12, 12, 13, 13, 14, 15, 16, 17, 17, 17, 17, 20, 21, 21, 22, 22, 22, 23, 23, 24, 24, 25, 28, 28, 29, 29, 29, 29, 30, 30, 31, 31, 31, 31, 31, 32, 33, 33, 34, 35, 35, 35, 35, 35, 35, 36, 40, 40, 41, 42, 43, 44, 44, 44, 46, 47, 48, 48, 49, 50, 50, 50 };
 
 uint32_t  Execution_us[1+NUM_TASKS]        = {
                                              0*CONFIGURE_MICROSECONDS_PER_TICK,
-                                             27*0.6*CONFIGURE_MICROSECONDS_PER_TICK
+                                             1*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             1*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             1*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             2*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             2*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             3*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             4*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             5*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             6*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             6*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             7*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             7*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             7*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             7*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             10*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             10*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             12*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             12*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             12*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             12*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             13*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             13*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             14*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             15*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             16*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             17*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             17*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             17*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             17*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             20*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             21*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             21*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             22*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             22*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             22*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             23*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             23*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             24*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             24*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             25*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             28*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             28*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             29*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             29*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             29*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             29*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             30*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             30*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             31*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             31*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             31*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             31*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             31*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             32*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             33*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             33*0.015*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             34*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             35*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             35*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             35*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             35*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             35*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             35*0.015*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             36*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             40*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             40*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             41*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             42*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             43*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             44*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             44*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             44*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             46*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             47*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             48*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             48*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             49*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             50*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             50*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             50*0.003*CONFIGURE_MICROSECONDS_PER_TICK
                                              };
 
-uint32_t  Phases[1+NUM_TASKS]           = { 0, 0 };
+uint32_t  Phases[1+NUM_TASKS]           = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
 
 #define build_task_name() do { \
 Task_name[ 1 ] =  rtems_build_name( 'P', 'T', '0', '1' );\
+Task_name[ 2 ] =  rtems_build_name( 'P', 'T', '0', '2' );\
+Task_name[ 3 ] =  rtems_build_name( 'P', 'T', '0', '3' );\
+Task_name[ 4 ] =  rtems_build_name( 'P', 'T', '0', '4' );\
+Task_name[ 5 ] =  rtems_build_name( 'P', 'T', '0', '5' );\
+Task_name[ 6 ] =  rtems_build_name( 'P', 'T', '0', '6' );\
+Task_name[ 7 ] =  rtems_build_name( 'P', 'T', '0', '7' );\
+Task_name[ 8 ] =  rtems_build_name( 'P', 'T', '0', '8' );\
+Task_name[ 9 ] =  rtems_build_name( 'P', 'T', '0', '9' );\
+Task_name[ 10 ] =  rtems_build_name( 'P', 'T', '1', '0' );\
+Task_name[ 11 ] =  rtems_build_name( 'P', 'T', '1', '1' );\
+Task_name[ 12 ] =  rtems_build_name( 'P', 'T', '1', '2' );\
+Task_name[ 13 ] =  rtems_build_name( 'P', 'T', '1', '3' );\
+Task_name[ 14 ] =  rtems_build_name( 'P', 'T', '1', '4' );\
+Task_name[ 15 ] =  rtems_build_name( 'P', 'T', '1', '5' );\
+Task_name[ 16 ] =  rtems_build_name( 'P', 'T', '1', '6' );\
+Task_name[ 17 ] =  rtems_build_name( 'P', 'T', '1', '7' );\
+Task_name[ 18 ] =  rtems_build_name( 'P', 'T', '1', '8' );\
+Task_name[ 19 ] =  rtems_build_name( 'P', 'T', '1', '9' );\
+Task_name[ 20 ] =  rtems_build_name( 'P', 'T', '2', '0' );\
+Task_name[ 21 ] =  rtems_build_name( 'P', 'T', '2', '1' );\
+Task_name[ 22 ] =  rtems_build_name( 'P', 'T', '2', '2' );\
+Task_name[ 23 ] =  rtems_build_name( 'P', 'T', '2', '3' );\
+Task_name[ 24 ] =  rtems_build_name( 'P', 'T', '2', '4' );\
+Task_name[ 25 ] =  rtems_build_name( 'P', 'T', '2', '5' );\
+Task_name[ 26 ] =  rtems_build_name( 'P', 'T', '2', '6' );\
+Task_name[ 27 ] =  rtems_build_name( 'P', 'T', '2', '7' );\
+Task_name[ 28 ] =  rtems_build_name( 'P', 'T', '2', '8' );\
+Task_name[ 29 ] =  rtems_build_name( 'P', 'T', '2', '9' );\
+Task_name[ 30 ] =  rtems_build_name( 'P', 'T', '3', '0' );\
+Task_name[ 31 ] =  rtems_build_name( 'P', 'T', '3', '1' );\
+Task_name[ 32 ] =  rtems_build_name( 'P', 'T', '3', '2' );\
+Task_name[ 33 ] =  rtems_build_name( 'P', 'T', '3', '3' );\
+Task_name[ 34 ] =  rtems_build_name( 'P', 'T', '3', '4' );\
+Task_name[ 35 ] =  rtems_build_name( 'P', 'T', '3', '5' );\
+Task_name[ 36 ] =  rtems_build_name( 'P', 'T', '3', '6' );\
+Task_name[ 37 ] =  rtems_build_name( 'P', 'T', '3', '7' );\
+Task_name[ 38 ] =  rtems_build_name( 'P', 'T', '3', '8' );\
+Task_name[ 39 ] =  rtems_build_name( 'P', 'T', '3', '9' );\
+Task_name[ 40 ] =  rtems_build_name( 'P', 'T', '4', '0' );\
+Task_name[ 41 ] =  rtems_build_name( 'P', 'T', '4', '1' );\
+Task_name[ 42 ] =  rtems_build_name( 'P', 'T', '4', '2' );\
+Task_name[ 43 ] =  rtems_build_name( 'P', 'T', '4', '3' );\
+Task_name[ 44 ] =  rtems_build_name( 'P', 'T', '4', '4' );\
+Task_name[ 45 ] =  rtems_build_name( 'P', 'T', '4', '5' );\
+Task_name[ 46 ] =  rtems_build_name( 'P', 'T', '4', '6' );\
+Task_name[ 47 ] =  rtems_build_name( 'P', 'T', '4', '7' );\
+Task_name[ 48 ] =  rtems_build_name( 'P', 'T', '4', '8' );\
+Task_name[ 49 ] =  rtems_build_name( 'P', 'T', '4', '9' );\
+Task_name[ 50 ] =  rtems_build_name( 'P', 'T', '5', '0' );\
+Task_name[ 51 ] =  rtems_build_name( 'P', 'T', '5', '1' );\
+Task_name[ 52 ] =  rtems_build_name( 'P', 'T', '5', '2' );\
+Task_name[ 53 ] =  rtems_build_name( 'P', 'T', '5', '3' );\
+Task_name[ 54 ] =  rtems_build_name( 'P', 'T', '5', '4' );\
+Task_name[ 55 ] =  rtems_build_name( 'P', 'T', '5', '5' );\
+Task_name[ 56 ] =  rtems_build_name( 'P', 'T', '5', '6' );\
+Task_name[ 57 ] =  rtems_build_name( 'P', 'T', '5', '7' );\
+Task_name[ 58 ] =  rtems_build_name( 'P', 'T', '5', '8' );\
+Task_name[ 59 ] =  rtems_build_name( 'P', 'T', '5', '9' );\
+Task_name[ 60 ] =  rtems_build_name( 'P', 'T', '6', '0' );\
+Task_name[ 61 ] =  rtems_build_name( 'P', 'T', '6', '1' );\
+Task_name[ 62 ] =  rtems_build_name( 'P', 'T', '6', '2' );\
+Task_name[ 63 ] =  rtems_build_name( 'P', 'T', '6', '3' );\
+Task_name[ 64 ] =  rtems_build_name( 'P', 'T', '6', '4' );\
+Task_name[ 65 ] =  rtems_build_name( 'P', 'T', '6', '5' );\
+Task_name[ 66 ] =  rtems_build_name( 'P', 'T', '6', '6' );\
+Task_name[ 67 ] =  rtems_build_name( 'P', 'T', '6', '7' );\
+Task_name[ 68 ] =  rtems_build_name( 'P', 'T', '6', '8' );\
+Task_name[ 69 ] =  rtems_build_name( 'P', 'T', '6', '9' );\
+Task_name[ 70 ] =  rtems_build_name( 'P', 'T', '7', '0' );\
+Task_name[ 71 ] =  rtems_build_name( 'P', 'T', '7', '1' );\
+Task_name[ 72 ] =  rtems_build_name( 'P', 'T', '7', '2' );\
+Task_name[ 73 ] =  rtems_build_name( 'P', 'T', '7', '3' );\
+Task_name[ 74 ] =  rtems_build_name( 'P', 'T', '7', '4' );\
+Task_name[ 75 ] =  rtems_build_name( 'P', 'T', '7', '5' );\
+Task_name[ 76 ] =  rtems_build_name( 'P', 'T', '7', '6' );\
+Task_name[ 77 ] =  rtems_build_name( 'P', 'T', '7', '7' );\
+Task_name[ 78 ] =  rtems_build_name( 'P', 'T', '7', '8' );\
+Task_name[ 79 ] =  rtems_build_name( 'P', 'T', '7', '9' );\
+Task_name[ 80 ] =  rtems_build_name( 'P', 'T', '8', '0' );\
 } while(0)
 
 #endif
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache03/system.h rtems-hwsched-cache/testsuites/gabtests/cache03/system.h
--- rtems-hwds/testsuites/gabtests/cache03/system.h	2010-10-01 05:17:28.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache03/system.h	2010-10-07 16:32:43.000000000 -0400
@@ -98,5 +98,5 @@ extern rtems_id   final_barrier;
 extern uint32_t *shared_array;
 #define SHARED_ARRAY_SIZE (1024 * 32 * 10) /* 1KB * num_kb * multiplier */
 extern uint32_t cache_line_length;
-extern uint32_t cache_num_lines_to_access;
+extern uint32_t cache_num_lines;
 /* end of include file */
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache03/tasks_periodic.c rtems-hwsched-cache/testsuites/gabtests/cache03/tasks_periodic.c
--- rtems-hwds/testsuites/gabtests/cache03/tasks_periodic.c	2010-09-30 19:49:13.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache03/tasks_periodic.c	2010-10-06 22:23:48.000000000 -0400
@@ -28,6 +28,8 @@ rtems_task Tasks_Periodic(
   uint32_t          periods_executed;
   uint32_t          local_deadlines_missed;
   uint32_t          temp = 0;
+  uint32_t          count = 0;
+  uint64_t  start_tick, stop_tick;
 
   status = rtems_rate_monotonic_create( argument, &rmid );
   directive_failed( status, "rtems_rate_monotonic_create" );
@@ -85,8 +87,10 @@ rtems_task Tasks_Periodic(
     /* loop through shared_array by cache_line_length until 
      * done accessing cache_num_lines_to_access. half of accesses 
      * are writes, and half are reads. */
+    count = 0;
     for ( i = (argument*SHARED_ARRAY_SIZE/NUM_TASKS); 
-          i < (argument*SHARED_ARRAY_SIZE/NUM_TASKS) + cache_num_lines_to_access; 
+          i < (argument*SHARED_ARRAY_SIZE/NUM_TASKS) + cache_num_lines*
+          (((double)Execution_us[argument]/(double)Periods[argument]/CONFIGURE_MICROSECONDS_PER_TICK/0.6)); 
           i++) 
     {
       if ((argument+i)%2) {
@@ -102,6 +106,10 @@ rtems_task Tasks_Periodic(
             i*(cache_line_length/sizeof(uint32_t)) % (SHARED_ARRAY_SIZE/sizeof(uint32_t))
           ] = argument;
       }
+      count += 40; /* rough estimate of the loop length */
+      if (count > Instructions_per_us * Execution_us[argument]) {
+        break;
+      }
     }
 
     /*
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache04/init.c rtems-hwsched-cache/testsuites/gabtests/cache04/init.c
--- rtems-hwds/testsuites/gabtests/cache04/init.c	2010-10-09 21:10:42.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache04/init.c	2010-10-06 22:23:48.000000000 -0400
@@ -42,7 +42,7 @@ rtems_id  final_barrier;
 uint32_t *shared_array;
 
 uint32_t  cache_line_length = 64;
-uint32_t  cache_num_lines_to_access = 512*(0.1 + 0.4); /* 512*(% of cache) */
+uint32_t  cache_num_lines = 512; /* 512*(% of cache) */
 
 rtems_task Init(
   rtems_task_argument argument
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache04/macros.h rtems-hwsched-cache/testsuites/gabtests/cache04/macros.h
--- rtems-hwds/testsuites/gabtests/cache04/macros.h	2010-10-01 04:44:22.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache04/macros.h	2010-10-07 16:04:25.000000000 -0400
@@ -5,15 +5,15 @@
  */
 
 /* This file was generated with the following parameters: 
--T 27,0.600,0 
+-T 2,0.005,0 -T 3,0.011,0 -T 3,0.007,0 -T 4,0.004,0 -T 5,0.000,0 -T 6,0.004,0 -T 6,0.008,0 -T 7,0.012,0 -T 7,0.006,0 -T 7,0.001,0 -T 7,0.006,0 -T 8,0.004,0 -T 9,0.011,0 -T 9,0.012,0 -T 9,0.005,0 -T 10,0.003,0 -T 10,0.007,0 -T 11,0.005,0 -T 11,0.003,0 -T 11,0.002,0 -T 12,0.012,0 -T 12,0.004,0 -T 13,0.011,0 -T 13,0.007,0 -T 13,0.011,0 -T 15,0.007,0 -T 15,0.013,0 -T 15,0.007,0 -T 16,0.001,0 -T 16,0.014,0 -T 17,0.001,0 -T 18,0.003,0 -T 18,0.009,0 -T 18,0.013,0 -T 19,0.009,0 -T 20,0.011,0 -T 21,0.000,0 -T 21,0.004,0 -T 22,0.003,0 -T 25,0.013,0 -T 25,0.002,0 -T 26,0.011,0 -T 26,0.004,0 -T 27,0.003,0 -T 28,0.010,0 -T 28,0.009,0 -T 29,0.013,0 -T 29,0.014,0 -T 29,0.008,0 -T 29,0.007,0 -T 30,0.003,0 -T 32,0.011,0 -T 32,0.007,0 -T 34,0.001,0 -T 35,0.014,0 -T 35,0.014,0 -T 35,0.011,0 -T 36,0.006,0 -T 36,0.003,0 -T 36,0.014,0 -T 37,0.004,0 -T 37,0.013,0 -T 37,0.011,0 -T 38,0.014,0 -T 39,0.009,0 -T 39,0.005,0 -T 42,0.002,0 -T 44,0.006,0 -T 44,0.012,0 -T 45,0.003,0 -T 46,0.005,0 -T 46,0.009,0 -T 46,0.012,0 -T 47,0.013,0 -T 47,0.006,0 -T 48,0.014,0 -T 48,0.003,0 -T 48,0.004,0 -T 49,0.013,0 -T 50,0.006,0 
 */
 
 #ifndef __MACROS_H_
 #define __MACROS_H_
 
 #define  HP_LENGTH                  (-1)
-#define  MAX_PERIOD                 (27)
-#define  NUM_PERIODIC_TASKS         (1)
+#define  MAX_PERIOD                 (50)
+#define  NUM_PERIODIC_TASKS         (80)
 #define  NUM_APERIODIC_TASKS        (0)
 #define  NUM_TASKS                  ( NUM_PERIODIC_TASKS + NUM_APERIODIC_TASKS )
 #endif
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache04/params.h rtems-hwsched-cache/testsuites/gabtests/cache04/params.h
--- rtems-hwds/testsuites/gabtests/cache04/params.h	2010-10-01 04:44:22.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache04/params.h	2010-10-07 16:04:25.000000000 -0400
@@ -5,32 +5,190 @@
  */
 
 /* This file was generated with the following parameters: 
--T 27,0.600,0 
+-T 2,0.005,0 -T 3,0.011,0 -T 3,0.007,0 -T 4,0.004,0 -T 5,0.000,0 -T 6,0.004,0 -T 6,0.008,0 -T 7,0.012,0 -T 7,0.006,0 -T 7,0.001,0 -T 7,0.006,0 -T 8,0.004,0 -T 9,0.011,0 -T 9,0.012,0 -T 9,0.005,0 -T 10,0.003,0 -T 10,0.007,0 -T 11,0.005,0 -T 11,0.003,0 -T 11,0.002,0 -T 12,0.012,0 -T 12,0.004,0 -T 13,0.011,0 -T 13,0.007,0 -T 13,0.011,0 -T 15,0.007,0 -T 15,0.013,0 -T 15,0.007,0 -T 16,0.001,0 -T 16,0.014,0 -T 17,0.001,0 -T 18,0.003,0 -T 18,0.009,0 -T 18,0.013,0 -T 19,0.009,0 -T 20,0.011,0 -T 21,0.000,0 -T 21,0.004,0 -T 22,0.003,0 -T 25,0.013,0 -T 25,0.002,0 -T 26,0.011,0 -T 26,0.004,0 -T 27,0.003,0 -T 28,0.010,0 -T 28,0.009,0 -T 29,0.013,0 -T 29,0.014,0 -T 29,0.008,0 -T 29,0.007,0 -T 30,0.003,0 -T 32,0.011,0 -T 32,0.007,0 -T 34,0.001,0 -T 35,0.014,0 -T 35,0.014,0 -T 35,0.011,0 -T 36,0.006,0 -T 36,0.003,0 -T 36,0.014,0 -T 37,0.004,0 -T 37,0.013,0 -T 37,0.011,0 -T 38,0.014,0 -T 39,0.009,0 -T 39,0.005,0 -T 42,0.002,0 -T 44,0.006,0 -T 44,0.012,0 -T 45,0.003,0 -T 46,0.005,0 -T 46,0.009,0 -T 46,0.012,0 -T 47,0.013,0 -T 47,0.006,0 -T 48,0.014,0 -T 48,0.003,0 -T 48,0.004,0 -T 49,0.013,0 -T 50,0.006,0 
 */
 
 #ifndef __PARAMS_H_
 #define __PARAMS_H_
 
 #define  HP_LENGTH                  (-1)
-#define  MAX_PERIOD                 (27)
-#define  NUM_PERIODIC_TASKS         (1)
+#define  MAX_PERIOD                 (50)
+#define  NUM_PERIODIC_TASKS         (80)
 #define  NUM_APERIODIC_TASKS        (0)
 #define  NUM_TASKS                  ( NUM_PERIODIC_TASKS + NUM_APERIODIC_TASKS )
 uint32_t  periodic_tasks            = NUM_PERIODIC_TASKS;
 
-rtems_task_priority Priorities[1+NUM_TASKS]= { 0, 27 };
+rtems_task_priority Priorities[1+NUM_TASKS]= { 0, 2, 3, 3, 4, 5, 6, 6, 7, 7, 7, 7, 8, 9, 9, 9, 10, 10, 11, 11, 11, 12, 12, 13, 13, 13, 15, 15, 15, 16, 16, 17, 18, 18, 18, 19, 20, 21, 21, 22, 25, 25, 26, 26, 27, 28, 28, 29, 29, 29, 29, 30, 32, 32, 34, 35, 35, 35, 36, 36, 36, 37, 37, 37, 38, 39, 39, 42, 44, 44, 45, 46, 46, 46, 47, 47, 48, 48, 48, 49, 50 };
 
-uint32_t  Periods[1+NUM_PERIODIC_TASKS]    = { 0, 27 };
+uint32_t  Periods[1+NUM_PERIODIC_TASKS]    = { 0, 2, 3, 3, 4, 5, 6, 6, 7, 7, 7, 7, 8, 9, 9, 9, 10, 10, 11, 11, 11, 12, 12, 13, 13, 13, 15, 15, 15, 16, 16, 17, 18, 18, 18, 19, 20, 21, 21, 22, 25, 25, 26, 26, 27, 28, 28, 29, 29, 29, 29, 30, 32, 32, 34, 35, 35, 35, 36, 36, 36, 37, 37, 37, 38, 39, 39, 42, 44, 44, 45, 46, 46, 46, 47, 47, 48, 48, 48, 49, 50 };
 
 uint32_t  Execution_us[1+NUM_TASKS]        = {
                                              0*CONFIGURE_MICROSECONDS_PER_TICK,
-                                             27*0.6*CONFIGURE_MICROSECONDS_PER_TICK
+                                             2*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             3*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             3*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             4*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             5*0*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             6*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             6*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             7*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             7*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             7*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             7*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             8*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             9*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             9*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             9*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             10*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             10*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             11*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             11*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             11*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             12*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             12*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             13*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             13*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             13*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             15*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             15*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             15*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             16*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             16*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             17*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             18*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             18*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             18*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             19*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             20*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             21*0*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             21*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             22*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             25*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             25*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             26*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             26*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             27*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             28*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             28*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             29*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             29*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             29*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             29*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             30*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             32*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             32*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             34*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             35*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             35*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             35*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             36*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             36*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             36*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             37*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             37*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             37*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             38*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             39*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             39*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             42*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             44*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             44*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             45*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             46*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             46*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             46*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             47*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             47*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             48*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             48*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             48*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             49*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             50*0.006*CONFIGURE_MICROSECONDS_PER_TICK
                                              };
 
-uint32_t  Phases[1+NUM_TASKS]           = { 0, 0 };
+uint32_t  Phases[1+NUM_TASKS]           = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
 
 #define build_task_name() do { \
 Task_name[ 1 ] =  rtems_build_name( 'P', 'T', '0', '1' );\
+Task_name[ 2 ] =  rtems_build_name( 'P', 'T', '0', '2' );\
+Task_name[ 3 ] =  rtems_build_name( 'P', 'T', '0', '3' );\
+Task_name[ 4 ] =  rtems_build_name( 'P', 'T', '0', '4' );\
+Task_name[ 5 ] =  rtems_build_name( 'P', 'T', '0', '5' );\
+Task_name[ 6 ] =  rtems_build_name( 'P', 'T', '0', '6' );\
+Task_name[ 7 ] =  rtems_build_name( 'P', 'T', '0', '7' );\
+Task_name[ 8 ] =  rtems_build_name( 'P', 'T', '0', '8' );\
+Task_name[ 9 ] =  rtems_build_name( 'P', 'T', '0', '9' );\
+Task_name[ 10 ] =  rtems_build_name( 'P', 'T', '1', '0' );\
+Task_name[ 11 ] =  rtems_build_name( 'P', 'T', '1', '1' );\
+Task_name[ 12 ] =  rtems_build_name( 'P', 'T', '1', '2' );\
+Task_name[ 13 ] =  rtems_build_name( 'P', 'T', '1', '3' );\
+Task_name[ 14 ] =  rtems_build_name( 'P', 'T', '1', '4' );\
+Task_name[ 15 ] =  rtems_build_name( 'P', 'T', '1', '5' );\
+Task_name[ 16 ] =  rtems_build_name( 'P', 'T', '1', '6' );\
+Task_name[ 17 ] =  rtems_build_name( 'P', 'T', '1', '7' );\
+Task_name[ 18 ] =  rtems_build_name( 'P', 'T', '1', '8' );\
+Task_name[ 19 ] =  rtems_build_name( 'P', 'T', '1', '9' );\
+Task_name[ 20 ] =  rtems_build_name( 'P', 'T', '2', '0' );\
+Task_name[ 21 ] =  rtems_build_name( 'P', 'T', '2', '1' );\
+Task_name[ 22 ] =  rtems_build_name( 'P', 'T', '2', '2' );\
+Task_name[ 23 ] =  rtems_build_name( 'P', 'T', '2', '3' );\
+Task_name[ 24 ] =  rtems_build_name( 'P', 'T', '2', '4' );\
+Task_name[ 25 ] =  rtems_build_name( 'P', 'T', '2', '5' );\
+Task_name[ 26 ] =  rtems_build_name( 'P', 'T', '2', '6' );\
+Task_name[ 27 ] =  rtems_build_name( 'P', 'T', '2', '7' );\
+Task_name[ 28 ] =  rtems_build_name( 'P', 'T', '2', '8' );\
+Task_name[ 29 ] =  rtems_build_name( 'P', 'T', '2', '9' );\
+Task_name[ 30 ] =  rtems_build_name( 'P', 'T', '3', '0' );\
+Task_name[ 31 ] =  rtems_build_name( 'P', 'T', '3', '1' );\
+Task_name[ 32 ] =  rtems_build_name( 'P', 'T', '3', '2' );\
+Task_name[ 33 ] =  rtems_build_name( 'P', 'T', '3', '3' );\
+Task_name[ 34 ] =  rtems_build_name( 'P', 'T', '3', '4' );\
+Task_name[ 35 ] =  rtems_build_name( 'P', 'T', '3', '5' );\
+Task_name[ 36 ] =  rtems_build_name( 'P', 'T', '3', '6' );\
+Task_name[ 37 ] =  rtems_build_name( 'P', 'T', '3', '7' );\
+Task_name[ 38 ] =  rtems_build_name( 'P', 'T', '3', '8' );\
+Task_name[ 39 ] =  rtems_build_name( 'P', 'T', '3', '9' );\
+Task_name[ 40 ] =  rtems_build_name( 'P', 'T', '4', '0' );\
+Task_name[ 41 ] =  rtems_build_name( 'P', 'T', '4', '1' );\
+Task_name[ 42 ] =  rtems_build_name( 'P', 'T', '4', '2' );\
+Task_name[ 43 ] =  rtems_build_name( 'P', 'T', '4', '3' );\
+Task_name[ 44 ] =  rtems_build_name( 'P', 'T', '4', '4' );\
+Task_name[ 45 ] =  rtems_build_name( 'P', 'T', '4', '5' );\
+Task_name[ 46 ] =  rtems_build_name( 'P', 'T', '4', '6' );\
+Task_name[ 47 ] =  rtems_build_name( 'P', 'T', '4', '7' );\
+Task_name[ 48 ] =  rtems_build_name( 'P', 'T', '4', '8' );\
+Task_name[ 49 ] =  rtems_build_name( 'P', 'T', '4', '9' );\
+Task_name[ 50 ] =  rtems_build_name( 'P', 'T', '5', '0' );\
+Task_name[ 51 ] =  rtems_build_name( 'P', 'T', '5', '1' );\
+Task_name[ 52 ] =  rtems_build_name( 'P', 'T', '5', '2' );\
+Task_name[ 53 ] =  rtems_build_name( 'P', 'T', '5', '3' );\
+Task_name[ 54 ] =  rtems_build_name( 'P', 'T', '5', '4' );\
+Task_name[ 55 ] =  rtems_build_name( 'P', 'T', '5', '5' );\
+Task_name[ 56 ] =  rtems_build_name( 'P', 'T', '5', '6' );\
+Task_name[ 57 ] =  rtems_build_name( 'P', 'T', '5', '7' );\
+Task_name[ 58 ] =  rtems_build_name( 'P', 'T', '5', '8' );\
+Task_name[ 59 ] =  rtems_build_name( 'P', 'T', '5', '9' );\
+Task_name[ 60 ] =  rtems_build_name( 'P', 'T', '6', '0' );\
+Task_name[ 61 ] =  rtems_build_name( 'P', 'T', '6', '1' );\
+Task_name[ 62 ] =  rtems_build_name( 'P', 'T', '6', '2' );\
+Task_name[ 63 ] =  rtems_build_name( 'P', 'T', '6', '3' );\
+Task_name[ 64 ] =  rtems_build_name( 'P', 'T', '6', '4' );\
+Task_name[ 65 ] =  rtems_build_name( 'P', 'T', '6', '5' );\
+Task_name[ 66 ] =  rtems_build_name( 'P', 'T', '6', '6' );\
+Task_name[ 67 ] =  rtems_build_name( 'P', 'T', '6', '7' );\
+Task_name[ 68 ] =  rtems_build_name( 'P', 'T', '6', '8' );\
+Task_name[ 69 ] =  rtems_build_name( 'P', 'T', '6', '9' );\
+Task_name[ 70 ] =  rtems_build_name( 'P', 'T', '7', '0' );\
+Task_name[ 71 ] =  rtems_build_name( 'P', 'T', '7', '1' );\
+Task_name[ 72 ] =  rtems_build_name( 'P', 'T', '7', '2' );\
+Task_name[ 73 ] =  rtems_build_name( 'P', 'T', '7', '3' );\
+Task_name[ 74 ] =  rtems_build_name( 'P', 'T', '7', '4' );\
+Task_name[ 75 ] =  rtems_build_name( 'P', 'T', '7', '5' );\
+Task_name[ 76 ] =  rtems_build_name( 'P', 'T', '7', '6' );\
+Task_name[ 77 ] =  rtems_build_name( 'P', 'T', '7', '7' );\
+Task_name[ 78 ] =  rtems_build_name( 'P', 'T', '7', '8' );\
+Task_name[ 79 ] =  rtems_build_name( 'P', 'T', '7', '9' );\
+Task_name[ 80 ] =  rtems_build_name( 'P', 'T', '8', '0' );\
 } while(0)
 
 #endif
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache04/system.h rtems-hwsched-cache/testsuites/gabtests/cache04/system.h
--- rtems-hwds/testsuites/gabtests/cache04/system.h	2010-10-01 05:17:28.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache04/system.h	2010-10-07 16:32:43.000000000 -0400
@@ -98,5 +98,5 @@ extern rtems_id   final_barrier;
 extern uint32_t *shared_array;
 #define SHARED_ARRAY_SIZE (1024 * 32 * 10) /* 1KB * num_kb * multiplier */
 extern uint32_t cache_line_length;
-extern uint32_t cache_num_lines_to_access;
+extern uint32_t cache_num_lines;
 /* end of include file */
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache04/tasks_periodic.c rtems-hwsched-cache/testsuites/gabtests/cache04/tasks_periodic.c
--- rtems-hwds/testsuites/gabtests/cache04/tasks_periodic.c	2010-09-30 19:49:13.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache04/tasks_periodic.c	2010-10-06 22:23:48.000000000 -0400
@@ -28,6 +28,8 @@ rtems_task Tasks_Periodic(
   uint32_t          periods_executed;
   uint32_t          local_deadlines_missed;
   uint32_t          temp = 0;
+  uint32_t          count = 0;
+  uint64_t  start_tick, stop_tick;
 
   status = rtems_rate_monotonic_create( argument, &rmid );
   directive_failed( status, "rtems_rate_monotonic_create" );
@@ -85,8 +87,10 @@ rtems_task Tasks_Periodic(
     /* loop through shared_array by cache_line_length until 
      * done accessing cache_num_lines_to_access. half of accesses 
      * are writes, and half are reads. */
+    count = 0;
     for ( i = (argument*SHARED_ARRAY_SIZE/NUM_TASKS); 
-          i < (argument*SHARED_ARRAY_SIZE/NUM_TASKS) + cache_num_lines_to_access; 
+          i < (argument*SHARED_ARRAY_SIZE/NUM_TASKS) + cache_num_lines*
+          (((double)Execution_us[argument]/(double)Periods[argument]/CONFIGURE_MICROSECONDS_PER_TICK/0.6)); 
           i++) 
     {
       if ((argument+i)%2) {
@@ -102,6 +106,10 @@ rtems_task Tasks_Periodic(
             i*(cache_line_length/sizeof(uint32_t)) % (SHARED_ARRAY_SIZE/sizeof(uint32_t))
           ] = argument;
       }
+      count += 40; /* rough estimate of the loop length */
+      if (count > Instructions_per_us * Execution_us[argument]) {
+        break;
+      }
     }
 
     /*
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache05/init.c rtems-hwsched-cache/testsuites/gabtests/cache05/init.c
--- rtems-hwds/testsuites/gabtests/cache05/init.c	2010-10-09 21:10:42.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache05/init.c	2010-10-06 22:23:48.000000000 -0400
@@ -42,7 +42,7 @@ rtems_id  final_barrier;
 uint32_t *shared_array;
 
 uint32_t  cache_line_length = 64;
-uint32_t  cache_num_lines_to_access = 512*(0.1 + 0.5); /* 512*(% of cache) */
+uint32_t  cache_num_lines = 512; /* 512*(% of cache) */
 
 rtems_task Init(
   rtems_task_argument argument
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache05/macros.h rtems-hwsched-cache/testsuites/gabtests/cache05/macros.h
--- rtems-hwds/testsuites/gabtests/cache05/macros.h	2010-10-01 04:44:22.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache05/macros.h	2010-10-07 16:04:25.000000000 -0400
@@ -5,15 +5,15 @@
  */
 
 /* This file was generated with the following parameters: 
--T 27,0.600,0 
+-T 1,0.003,0 -T 1,0.002,0 -T 2,0.003,0 -T 3,0.006,0 -T 3,0.014,0 -T 4,0.014,0 -T 5,0.009,0 -T 6,0.009,0 -T 6,0.015,0 -T 6,0.007,0 -T 6,0.014,0 -T 8,0.002,0 -T 8,0.008,0 -T 9,0.011,0 -T 11,0.010,0 -T 11,0.015,0 -T 11,0.006,0 -T 11,0.008,0 -T 11,0.012,0 -T 12,0.002,0 -T 12,0.011,0 -T 13,0.006,0 -T 13,0.001,0 -T 13,0.004,0 -T 14,0.011,0 -T 14,0.000,0 -T 14,0.003,0 -T 15,0.000,0 -T 15,0.003,0 -T 16,0.006,0 -T 16,0.012,0 -T 17,0.007,0 -T 17,0.008,0 -T 18,0.004,0 -T 19,0.015,0 -T 22,0.007,0 -T 22,0.014,0 -T 22,0.001,0 -T 22,0.000,0 -T 24,0.012,0 -T 24,0.006,0 -T 25,0.014,0 -T 25,0.014,0 -T 26,0.002,0 -T 26,0.005,0 -T 26,0.002,0 -T 26,0.012,0 -T 26,0.002,0 -T 28,0.003,0 -T 28,0.002,0 -T 30,0.005,0 -T 30,0.008,0 -T 32,0.008,0 -T 32,0.012,0 -T 33,0.002,0 -T 33,0.013,0 -T 33,0.014,0 -T 34,0.013,0 -T 37,0.012,0 -T 38,0.005,0 -T 42,0.002,0 -T 43,0.004,0 -T 43,0.004,0 -T 43,0.014,0 -T 43,0.013,0 -T 43,0.013,0 -T 43,0.001,0 -T 45,0.015,0 -T 45,0.010,0 -T 46,0.008,0 -T 46,0.012,0 -T 46,0.009,0 -T 46,0.003,0 -T 47,0.005,0 -T 47,0.009,0 -T 48,0.001,0 -T 49,0.013,0 -T 49,0.004,0 -T 49,0.004,0 -T 50,0.006,0 
 */
 
 #ifndef __MACROS_H_
 #define __MACROS_H_
 
 #define  HP_LENGTH                  (-1)
-#define  MAX_PERIOD                 (27)
-#define  NUM_PERIODIC_TASKS         (1)
+#define  MAX_PERIOD                 (50)
+#define  NUM_PERIODIC_TASKS         (80)
 #define  NUM_APERIODIC_TASKS        (0)
 #define  NUM_TASKS                  ( NUM_PERIODIC_TASKS + NUM_APERIODIC_TASKS )
 #endif
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache05/params.h rtems-hwsched-cache/testsuites/gabtests/cache05/params.h
--- rtems-hwds/testsuites/gabtests/cache05/params.h	2010-10-01 04:44:22.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache05/params.h	2010-10-07 16:04:25.000000000 -0400
@@ -5,32 +5,190 @@
  */
 
 /* This file was generated with the following parameters: 
--T 27,0.600,0 
+-T 1,0.003,0 -T 1,0.002,0 -T 2,0.003,0 -T 3,0.006,0 -T 3,0.014,0 -T 4,0.014,0 -T 5,0.009,0 -T 6,0.009,0 -T 6,0.015,0 -T 6,0.007,0 -T 6,0.014,0 -T 8,0.002,0 -T 8,0.008,0 -T 9,0.011,0 -T 11,0.010,0 -T 11,0.015,0 -T 11,0.006,0 -T 11,0.008,0 -T 11,0.012,0 -T 12,0.002,0 -T 12,0.011,0 -T 13,0.006,0 -T 13,0.001,0 -T 13,0.004,0 -T 14,0.011,0 -T 14,0.000,0 -T 14,0.003,0 -T 15,0.000,0 -T 15,0.003,0 -T 16,0.006,0 -T 16,0.012,0 -T 17,0.007,0 -T 17,0.008,0 -T 18,0.004,0 -T 19,0.015,0 -T 22,0.007,0 -T 22,0.014,0 -T 22,0.001,0 -T 22,0.000,0 -T 24,0.012,0 -T 24,0.006,0 -T 25,0.014,0 -T 25,0.014,0 -T 26,0.002,0 -T 26,0.005,0 -T 26,0.002,0 -T 26,0.012,0 -T 26,0.002,0 -T 28,0.003,0 -T 28,0.002,0 -T 30,0.005,0 -T 30,0.008,0 -T 32,0.008,0 -T 32,0.012,0 -T 33,0.002,0 -T 33,0.013,0 -T 33,0.014,0 -T 34,0.013,0 -T 37,0.012,0 -T 38,0.005,0 -T 42,0.002,0 -T 43,0.004,0 -T 43,0.004,0 -T 43,0.014,0 -T 43,0.013,0 -T 43,0.013,0 -T 43,0.001,0 -T 45,0.015,0 -T 45,0.010,0 -T 46,0.008,0 -T 46,0.012,0 -T 46,0.009,0 -T 46,0.003,0 -T 47,0.005,0 -T 47,0.009,0 -T 48,0.001,0 -T 49,0.013,0 -T 49,0.004,0 -T 49,0.004,0 -T 50,0.006,0 
 */
 
 #ifndef __PARAMS_H_
 #define __PARAMS_H_
 
 #define  HP_LENGTH                  (-1)
-#define  MAX_PERIOD                 (27)
-#define  NUM_PERIODIC_TASKS         (1)
+#define  MAX_PERIOD                 (50)
+#define  NUM_PERIODIC_TASKS         (80)
 #define  NUM_APERIODIC_TASKS        (0)
 #define  NUM_TASKS                  ( NUM_PERIODIC_TASKS + NUM_APERIODIC_TASKS )
 uint32_t  periodic_tasks            = NUM_PERIODIC_TASKS;
 
-rtems_task_priority Priorities[1+NUM_TASKS]= { 0, 27 };
+rtems_task_priority Priorities[1+NUM_TASKS]= { 0, 1, 1, 2, 3, 3, 4, 5, 6, 6, 6, 6, 8, 8, 9, 11, 11, 11, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 15, 15, 16, 16, 17, 17, 18, 19, 22, 22, 22, 22, 24, 24, 25, 25, 26, 26, 26, 26, 26, 28, 28, 30, 30, 32, 32, 33, 33, 33, 34, 37, 38, 42, 43, 43, 43, 43, 43, 43, 45, 45, 46, 46, 46, 46, 47, 47, 48, 49, 49, 49, 50 };
 
-uint32_t  Periods[1+NUM_PERIODIC_TASKS]    = { 0, 27 };
+uint32_t  Periods[1+NUM_PERIODIC_TASKS]    = { 0, 1, 1, 2, 3, 3, 4, 5, 6, 6, 6, 6, 8, 8, 9, 11, 11, 11, 11, 11, 12, 12, 13, 13, 13, 14, 14, 14, 15, 15, 16, 16, 17, 17, 18, 19, 22, 22, 22, 22, 24, 24, 25, 25, 26, 26, 26, 26, 26, 28, 28, 30, 30, 32, 32, 33, 33, 33, 34, 37, 38, 42, 43, 43, 43, 43, 43, 43, 45, 45, 46, 46, 46, 46, 47, 47, 48, 49, 49, 49, 50 };
 
 uint32_t  Execution_us[1+NUM_TASKS]        = {
                                              0*CONFIGURE_MICROSECONDS_PER_TICK,
-                                             27*0.6*CONFIGURE_MICROSECONDS_PER_TICK
+                                             1*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             1*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             2*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             3*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             3*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             4*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             5*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             6*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             6*0.015*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             6*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             6*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             8*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             8*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             9*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             11*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             11*0.015*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             11*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             11*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             11*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             12*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             12*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             13*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             13*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             13*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             14*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             14*0*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             14*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             15*0*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             15*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             16*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             16*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             17*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             17*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             18*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             19*0.015*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             22*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             22*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             22*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             22*0*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             24*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             24*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             25*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             25*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             26*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             26*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             26*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             26*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             26*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             28*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             28*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             30*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             30*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             32*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             32*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             33*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             33*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             33*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             34*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             37*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             38*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             42*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             43*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             43*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             43*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             43*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             43*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             43*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             45*0.015*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             45*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             46*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             46*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             46*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             46*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             47*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             47*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             48*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             49*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             49*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             49*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             50*0.006*CONFIGURE_MICROSECONDS_PER_TICK
                                              };
 
-uint32_t  Phases[1+NUM_TASKS]           = { 0, 0 };
+uint32_t  Phases[1+NUM_TASKS]           = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
 
 #define build_task_name() do { \
 Task_name[ 1 ] =  rtems_build_name( 'P', 'T', '0', '1' );\
+Task_name[ 2 ] =  rtems_build_name( 'P', 'T', '0', '2' );\
+Task_name[ 3 ] =  rtems_build_name( 'P', 'T', '0', '3' );\
+Task_name[ 4 ] =  rtems_build_name( 'P', 'T', '0', '4' );\
+Task_name[ 5 ] =  rtems_build_name( 'P', 'T', '0', '5' );\
+Task_name[ 6 ] =  rtems_build_name( 'P', 'T', '0', '6' );\
+Task_name[ 7 ] =  rtems_build_name( 'P', 'T', '0', '7' );\
+Task_name[ 8 ] =  rtems_build_name( 'P', 'T', '0', '8' );\
+Task_name[ 9 ] =  rtems_build_name( 'P', 'T', '0', '9' );\
+Task_name[ 10 ] =  rtems_build_name( 'P', 'T', '1', '0' );\
+Task_name[ 11 ] =  rtems_build_name( 'P', 'T', '1', '1' );\
+Task_name[ 12 ] =  rtems_build_name( 'P', 'T', '1', '2' );\
+Task_name[ 13 ] =  rtems_build_name( 'P', 'T', '1', '3' );\
+Task_name[ 14 ] =  rtems_build_name( 'P', 'T', '1', '4' );\
+Task_name[ 15 ] =  rtems_build_name( 'P', 'T', '1', '5' );\
+Task_name[ 16 ] =  rtems_build_name( 'P', 'T', '1', '6' );\
+Task_name[ 17 ] =  rtems_build_name( 'P', 'T', '1', '7' );\
+Task_name[ 18 ] =  rtems_build_name( 'P', 'T', '1', '8' );\
+Task_name[ 19 ] =  rtems_build_name( 'P', 'T', '1', '9' );\
+Task_name[ 20 ] =  rtems_build_name( 'P', 'T', '2', '0' );\
+Task_name[ 21 ] =  rtems_build_name( 'P', 'T', '2', '1' );\
+Task_name[ 22 ] =  rtems_build_name( 'P', 'T', '2', '2' );\
+Task_name[ 23 ] =  rtems_build_name( 'P', 'T', '2', '3' );\
+Task_name[ 24 ] =  rtems_build_name( 'P', 'T', '2', '4' );\
+Task_name[ 25 ] =  rtems_build_name( 'P', 'T', '2', '5' );\
+Task_name[ 26 ] =  rtems_build_name( 'P', 'T', '2', '6' );\
+Task_name[ 27 ] =  rtems_build_name( 'P', 'T', '2', '7' );\
+Task_name[ 28 ] =  rtems_build_name( 'P', 'T', '2', '8' );\
+Task_name[ 29 ] =  rtems_build_name( 'P', 'T', '2', '9' );\
+Task_name[ 30 ] =  rtems_build_name( 'P', 'T', '3', '0' );\
+Task_name[ 31 ] =  rtems_build_name( 'P', 'T', '3', '1' );\
+Task_name[ 32 ] =  rtems_build_name( 'P', 'T', '3', '2' );\
+Task_name[ 33 ] =  rtems_build_name( 'P', 'T', '3', '3' );\
+Task_name[ 34 ] =  rtems_build_name( 'P', 'T', '3', '4' );\
+Task_name[ 35 ] =  rtems_build_name( 'P', 'T', '3', '5' );\
+Task_name[ 36 ] =  rtems_build_name( 'P', 'T', '3', '6' );\
+Task_name[ 37 ] =  rtems_build_name( 'P', 'T', '3', '7' );\
+Task_name[ 38 ] =  rtems_build_name( 'P', 'T', '3', '8' );\
+Task_name[ 39 ] =  rtems_build_name( 'P', 'T', '3', '9' );\
+Task_name[ 40 ] =  rtems_build_name( 'P', 'T', '4', '0' );\
+Task_name[ 41 ] =  rtems_build_name( 'P', 'T', '4', '1' );\
+Task_name[ 42 ] =  rtems_build_name( 'P', 'T', '4', '2' );\
+Task_name[ 43 ] =  rtems_build_name( 'P', 'T', '4', '3' );\
+Task_name[ 44 ] =  rtems_build_name( 'P', 'T', '4', '4' );\
+Task_name[ 45 ] =  rtems_build_name( 'P', 'T', '4', '5' );\
+Task_name[ 46 ] =  rtems_build_name( 'P', 'T', '4', '6' );\
+Task_name[ 47 ] =  rtems_build_name( 'P', 'T', '4', '7' );\
+Task_name[ 48 ] =  rtems_build_name( 'P', 'T', '4', '8' );\
+Task_name[ 49 ] =  rtems_build_name( 'P', 'T', '4', '9' );\
+Task_name[ 50 ] =  rtems_build_name( 'P', 'T', '5', '0' );\
+Task_name[ 51 ] =  rtems_build_name( 'P', 'T', '5', '1' );\
+Task_name[ 52 ] =  rtems_build_name( 'P', 'T', '5', '2' );\
+Task_name[ 53 ] =  rtems_build_name( 'P', 'T', '5', '3' );\
+Task_name[ 54 ] =  rtems_build_name( 'P', 'T', '5', '4' );\
+Task_name[ 55 ] =  rtems_build_name( 'P', 'T', '5', '5' );\
+Task_name[ 56 ] =  rtems_build_name( 'P', 'T', '5', '6' );\
+Task_name[ 57 ] =  rtems_build_name( 'P', 'T', '5', '7' );\
+Task_name[ 58 ] =  rtems_build_name( 'P', 'T', '5', '8' );\
+Task_name[ 59 ] =  rtems_build_name( 'P', 'T', '5', '9' );\
+Task_name[ 60 ] =  rtems_build_name( 'P', 'T', '6', '0' );\
+Task_name[ 61 ] =  rtems_build_name( 'P', 'T', '6', '1' );\
+Task_name[ 62 ] =  rtems_build_name( 'P', 'T', '6', '2' );\
+Task_name[ 63 ] =  rtems_build_name( 'P', 'T', '6', '3' );\
+Task_name[ 64 ] =  rtems_build_name( 'P', 'T', '6', '4' );\
+Task_name[ 65 ] =  rtems_build_name( 'P', 'T', '6', '5' );\
+Task_name[ 66 ] =  rtems_build_name( 'P', 'T', '6', '6' );\
+Task_name[ 67 ] =  rtems_build_name( 'P', 'T', '6', '7' );\
+Task_name[ 68 ] =  rtems_build_name( 'P', 'T', '6', '8' );\
+Task_name[ 69 ] =  rtems_build_name( 'P', 'T', '6', '9' );\
+Task_name[ 70 ] =  rtems_build_name( 'P', 'T', '7', '0' );\
+Task_name[ 71 ] =  rtems_build_name( 'P', 'T', '7', '1' );\
+Task_name[ 72 ] =  rtems_build_name( 'P', 'T', '7', '2' );\
+Task_name[ 73 ] =  rtems_build_name( 'P', 'T', '7', '3' );\
+Task_name[ 74 ] =  rtems_build_name( 'P', 'T', '7', '4' );\
+Task_name[ 75 ] =  rtems_build_name( 'P', 'T', '7', '5' );\
+Task_name[ 76 ] =  rtems_build_name( 'P', 'T', '7', '6' );\
+Task_name[ 77 ] =  rtems_build_name( 'P', 'T', '7', '7' );\
+Task_name[ 78 ] =  rtems_build_name( 'P', 'T', '7', '8' );\
+Task_name[ 79 ] =  rtems_build_name( 'P', 'T', '7', '9' );\
+Task_name[ 80 ] =  rtems_build_name( 'P', 'T', '8', '0' );\
 } while(0)
 
 #endif
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache05/system.h rtems-hwsched-cache/testsuites/gabtests/cache05/system.h
--- rtems-hwds/testsuites/gabtests/cache05/system.h	2010-10-01 05:17:28.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache05/system.h	2010-10-07 16:32:43.000000000 -0400
@@ -98,5 +98,5 @@ extern rtems_id   final_barrier;
 extern uint32_t *shared_array;
 #define SHARED_ARRAY_SIZE (1024 * 32 * 10) /* 1KB * num_kb * multiplier */
 extern uint32_t cache_line_length;
-extern uint32_t cache_num_lines_to_access;
+extern uint32_t cache_num_lines;
 /* end of include file */
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache05/tasks_periodic.c rtems-hwsched-cache/testsuites/gabtests/cache05/tasks_periodic.c
--- rtems-hwds/testsuites/gabtests/cache05/tasks_periodic.c	2010-09-30 19:49:13.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache05/tasks_periodic.c	2010-10-06 22:23:48.000000000 -0400
@@ -28,6 +28,8 @@ rtems_task Tasks_Periodic(
   uint32_t          periods_executed;
   uint32_t          local_deadlines_missed;
   uint32_t          temp = 0;
+  uint32_t          count = 0;
+  uint64_t  start_tick, stop_tick;
 
   status = rtems_rate_monotonic_create( argument, &rmid );
   directive_failed( status, "rtems_rate_monotonic_create" );
@@ -85,8 +87,10 @@ rtems_task Tasks_Periodic(
     /* loop through shared_array by cache_line_length until 
      * done accessing cache_num_lines_to_access. half of accesses 
      * are writes, and half are reads. */
+    count = 0;
     for ( i = (argument*SHARED_ARRAY_SIZE/NUM_TASKS); 
-          i < (argument*SHARED_ARRAY_SIZE/NUM_TASKS) + cache_num_lines_to_access; 
+          i < (argument*SHARED_ARRAY_SIZE/NUM_TASKS) + cache_num_lines*
+          (((double)Execution_us[argument]/(double)Periods[argument]/CONFIGURE_MICROSECONDS_PER_TICK/0.6)); 
           i++) 
     {
       if ((argument+i)%2) {
@@ -102,6 +106,10 @@ rtems_task Tasks_Periodic(
             i*(cache_line_length/sizeof(uint32_t)) % (SHARED_ARRAY_SIZE/sizeof(uint32_t))
           ] = argument;
       }
+      count += 40; /* rough estimate of the loop length */
+      if (count > Instructions_per_us * Execution_us[argument]) {
+        break;
+      }
     }
 
     /*
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache06/init.c rtems-hwsched-cache/testsuites/gabtests/cache06/init.c
--- rtems-hwds/testsuites/gabtests/cache06/init.c	2010-10-09 21:10:42.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache06/init.c	2010-10-06 22:23:48.000000000 -0400
@@ -42,7 +42,7 @@ rtems_id  final_barrier;
 uint32_t *shared_array;
 
 uint32_t  cache_line_length = 64;
-uint32_t  cache_num_lines_to_access = 512*(0.1 + 0.6); /* 512*(% of cache) */
+uint32_t  cache_num_lines = 512; /* 512*(% of cache) */
 
 rtems_task Init(
   rtems_task_argument argument
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache06/macros.h rtems-hwsched-cache/testsuites/gabtests/cache06/macros.h
--- rtems-hwds/testsuites/gabtests/cache06/macros.h	2010-10-01 04:44:22.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache06/macros.h	2010-10-07 16:04:25.000000000 -0400
@@ -5,15 +5,15 @@
  */
 
 /* This file was generated with the following parameters: 
--T 27,0.600,0 
+-T 1,0.002,0 -T 1,0.009,0 -T 2,0.011,0 -T 3,0.013,0 -T 3,0.009,0 -T 3,0.011,0 -T 4,0.004,0 -T 4,0.011,0 -T 5,0.006,0 -T 5,0.009,0 -T 6,0.012,0 -T 6,0.001,0 -T 7,0.012,0 -T 8,0.009,0 -T 9,0.013,0 -T 10,0.007,0 -T 11,0.012,0 -T 11,0.010,0 -T 12,0.007,0 -T 13,0.007,0 -T 13,0.012,0 -T 14,0.010,0 -T 14,0.009,0 -T 15,0.009,0 -T 15,0.002,0 -T 16,0.010,0 -T 16,0.010,0 -T 17,0.006,0 -T 18,0.002,0 -T 18,0.000,0 -T 20,0.012,0 -T 21,0.006,0 -T 22,0.000,0 -T 22,0.005,0 -T 24,0.013,0 -T 24,0.008,0 -T 25,0.003,0 -T 25,0.007,0 -T 25,0.002,0 -T 26,0.009,0 -T 26,0.009,0 -T 27,0.010,0 -T 28,0.013,0 -T 28,0.005,0 -T 29,0.013,0 -T 32,0.006,0 -T 33,0.009,0 -T 33,0.009,0 -T 33,0.011,0 -T 34,0.012,0 -T 35,0.007,0 -T 35,0.006,0 -T 37,0.005,0 -T 38,0.007,0 -T 38,0.011,0 -T 39,0.008,0 -T 39,0.010,0 -T 39,0.010,0 -T 39,0.001,0 -T 40,0.010,0 -T 40,0.003,0 -T 40,0.005,0 -T 40,0.008,0 -T 41,0.003,0 -T 42,0.010,0 -T 42,0.008,0 -T 42,0.003,0 -T 42,0.013,0 -T 43,0.010,0 -T 46,0.003,0 -T 46,0.005,0 -T 46,0.002,0 -T 47,0.002,0 -T 47,0.003,0 -T 47,0.009,0 -T 47,0.006,0 -T 47,0.002,0 -T 48,0.008,0 -T 50,0.004,0 -T 50,0.010,0 
 */
 
 #ifndef __MACROS_H_
 #define __MACROS_H_
 
 #define  HP_LENGTH                  (-1)
-#define  MAX_PERIOD                 (27)
-#define  NUM_PERIODIC_TASKS         (1)
+#define  MAX_PERIOD                 (50)
+#define  NUM_PERIODIC_TASKS         (80)
 #define  NUM_APERIODIC_TASKS        (0)
 #define  NUM_TASKS                  ( NUM_PERIODIC_TASKS + NUM_APERIODIC_TASKS )
 #endif
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache06/params.h rtems-hwsched-cache/testsuites/gabtests/cache06/params.h
--- rtems-hwds/testsuites/gabtests/cache06/params.h	2010-10-01 04:44:22.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache06/params.h	2010-10-07 16:04:25.000000000 -0400
@@ -5,32 +5,190 @@
  */
 
 /* This file was generated with the following parameters: 
--T 27,0.600,0 
+-T 1,0.002,0 -T 1,0.009,0 -T 2,0.011,0 -T 3,0.013,0 -T 3,0.009,0 -T 3,0.011,0 -T 4,0.004,0 -T 4,0.011,0 -T 5,0.006,0 -T 5,0.009,0 -T 6,0.012,0 -T 6,0.001,0 -T 7,0.012,0 -T 8,0.009,0 -T 9,0.013,0 -T 10,0.007,0 -T 11,0.012,0 -T 11,0.010,0 -T 12,0.007,0 -T 13,0.007,0 -T 13,0.012,0 -T 14,0.010,0 -T 14,0.009,0 -T 15,0.009,0 -T 15,0.002,0 -T 16,0.010,0 -T 16,0.010,0 -T 17,0.006,0 -T 18,0.002,0 -T 18,0.000,0 -T 20,0.012,0 -T 21,0.006,0 -T 22,0.000,0 -T 22,0.005,0 -T 24,0.013,0 -T 24,0.008,0 -T 25,0.003,0 -T 25,0.007,0 -T 25,0.002,0 -T 26,0.009,0 -T 26,0.009,0 -T 27,0.010,0 -T 28,0.013,0 -T 28,0.005,0 -T 29,0.013,0 -T 32,0.006,0 -T 33,0.009,0 -T 33,0.009,0 -T 33,0.011,0 -T 34,0.012,0 -T 35,0.007,0 -T 35,0.006,0 -T 37,0.005,0 -T 38,0.007,0 -T 38,0.011,0 -T 39,0.008,0 -T 39,0.010,0 -T 39,0.010,0 -T 39,0.001,0 -T 40,0.010,0 -T 40,0.003,0 -T 40,0.005,0 -T 40,0.008,0 -T 41,0.003,0 -T 42,0.010,0 -T 42,0.008,0 -T 42,0.003,0 -T 42,0.013,0 -T 43,0.010,0 -T 46,0.003,0 -T 46,0.005,0 -T 46,0.002,0 -T 47,0.002,0 -T 47,0.003,0 -T 47,0.009,0 -T 47,0.006,0 -T 47,0.002,0 -T 48,0.008,0 -T 50,0.004,0 -T 50,0.010,0 
 */
 
 #ifndef __PARAMS_H_
 #define __PARAMS_H_
 
 #define  HP_LENGTH                  (-1)
-#define  MAX_PERIOD                 (27)
-#define  NUM_PERIODIC_TASKS         (1)
+#define  MAX_PERIOD                 (50)
+#define  NUM_PERIODIC_TASKS         (80)
 #define  NUM_APERIODIC_TASKS        (0)
 #define  NUM_TASKS                  ( NUM_PERIODIC_TASKS + NUM_APERIODIC_TASKS )
 uint32_t  periodic_tasks            = NUM_PERIODIC_TASKS;
 
-rtems_task_priority Priorities[1+NUM_TASKS]= { 0, 27 };
+rtems_task_priority Priorities[1+NUM_TASKS]= { 0, 1, 1, 2, 3, 3, 3, 4, 4, 5, 5, 6, 6, 7, 8, 9, 10, 11, 11, 12, 13, 13, 14, 14, 15, 15, 16, 16, 17, 18, 18, 20, 21, 22, 22, 24, 24, 25, 25, 25, 26, 26, 27, 28, 28, 29, 32, 33, 33, 33, 34, 35, 35, 37, 38, 38, 39, 39, 39, 39, 40, 40, 40, 40, 41, 42, 42, 42, 42, 43, 46, 46, 46, 47, 47, 47, 47, 47, 48, 50, 50 };
 
-uint32_t  Periods[1+NUM_PERIODIC_TASKS]    = { 0, 27 };
+uint32_t  Periods[1+NUM_PERIODIC_TASKS]    = { 0, 1, 1, 2, 3, 3, 3, 4, 4, 5, 5, 6, 6, 7, 8, 9, 10, 11, 11, 12, 13, 13, 14, 14, 15, 15, 16, 16, 17, 18, 18, 20, 21, 22, 22, 24, 24, 25, 25, 25, 26, 26, 27, 28, 28, 29, 32, 33, 33, 33, 34, 35, 35, 37, 38, 38, 39, 39, 39, 39, 40, 40, 40, 40, 41, 42, 42, 42, 42, 43, 46, 46, 46, 47, 47, 47, 47, 47, 48, 50, 50 };
 
 uint32_t  Execution_us[1+NUM_TASKS]        = {
                                              0*CONFIGURE_MICROSECONDS_PER_TICK,
-                                             27*0.6*CONFIGURE_MICROSECONDS_PER_TICK
+                                             1*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             1*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             2*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             3*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             3*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             3*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             4*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             4*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             5*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             5*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             6*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             6*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             7*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             8*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             9*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             10*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             11*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             11*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             12*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             13*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             13*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             14*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             14*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             15*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             15*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             16*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             16*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             17*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             18*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             18*0*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             20*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             21*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             22*0*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             22*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             24*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             24*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             25*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             25*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             25*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             26*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             26*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             27*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             28*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             28*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             29*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             32*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             33*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             33*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             33*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             34*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             35*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             35*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             37*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             38*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             38*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             39*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             39*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             39*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             39*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             40*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             40*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             40*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             40*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             41*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             42*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             42*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             42*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             42*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             43*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             46*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             46*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             46*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             47*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             47*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             47*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             47*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             47*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             48*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             50*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             50*0.01*CONFIGURE_MICROSECONDS_PER_TICK
                                              };
 
-uint32_t  Phases[1+NUM_TASKS]           = { 0, 0 };
+uint32_t  Phases[1+NUM_TASKS]           = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
 
 #define build_task_name() do { \
 Task_name[ 1 ] =  rtems_build_name( 'P', 'T', '0', '1' );\
+Task_name[ 2 ] =  rtems_build_name( 'P', 'T', '0', '2' );\
+Task_name[ 3 ] =  rtems_build_name( 'P', 'T', '0', '3' );\
+Task_name[ 4 ] =  rtems_build_name( 'P', 'T', '0', '4' );\
+Task_name[ 5 ] =  rtems_build_name( 'P', 'T', '0', '5' );\
+Task_name[ 6 ] =  rtems_build_name( 'P', 'T', '0', '6' );\
+Task_name[ 7 ] =  rtems_build_name( 'P', 'T', '0', '7' );\
+Task_name[ 8 ] =  rtems_build_name( 'P', 'T', '0', '8' );\
+Task_name[ 9 ] =  rtems_build_name( 'P', 'T', '0', '9' );\
+Task_name[ 10 ] =  rtems_build_name( 'P', 'T', '1', '0' );\
+Task_name[ 11 ] =  rtems_build_name( 'P', 'T', '1', '1' );\
+Task_name[ 12 ] =  rtems_build_name( 'P', 'T', '1', '2' );\
+Task_name[ 13 ] =  rtems_build_name( 'P', 'T', '1', '3' );\
+Task_name[ 14 ] =  rtems_build_name( 'P', 'T', '1', '4' );\
+Task_name[ 15 ] =  rtems_build_name( 'P', 'T', '1', '5' );\
+Task_name[ 16 ] =  rtems_build_name( 'P', 'T', '1', '6' );\
+Task_name[ 17 ] =  rtems_build_name( 'P', 'T', '1', '7' );\
+Task_name[ 18 ] =  rtems_build_name( 'P', 'T', '1', '8' );\
+Task_name[ 19 ] =  rtems_build_name( 'P', 'T', '1', '9' );\
+Task_name[ 20 ] =  rtems_build_name( 'P', 'T', '2', '0' );\
+Task_name[ 21 ] =  rtems_build_name( 'P', 'T', '2', '1' );\
+Task_name[ 22 ] =  rtems_build_name( 'P', 'T', '2', '2' );\
+Task_name[ 23 ] =  rtems_build_name( 'P', 'T', '2', '3' );\
+Task_name[ 24 ] =  rtems_build_name( 'P', 'T', '2', '4' );\
+Task_name[ 25 ] =  rtems_build_name( 'P', 'T', '2', '5' );\
+Task_name[ 26 ] =  rtems_build_name( 'P', 'T', '2', '6' );\
+Task_name[ 27 ] =  rtems_build_name( 'P', 'T', '2', '7' );\
+Task_name[ 28 ] =  rtems_build_name( 'P', 'T', '2', '8' );\
+Task_name[ 29 ] =  rtems_build_name( 'P', 'T', '2', '9' );\
+Task_name[ 30 ] =  rtems_build_name( 'P', 'T', '3', '0' );\
+Task_name[ 31 ] =  rtems_build_name( 'P', 'T', '3', '1' );\
+Task_name[ 32 ] =  rtems_build_name( 'P', 'T', '3', '2' );\
+Task_name[ 33 ] =  rtems_build_name( 'P', 'T', '3', '3' );\
+Task_name[ 34 ] =  rtems_build_name( 'P', 'T', '3', '4' );\
+Task_name[ 35 ] =  rtems_build_name( 'P', 'T', '3', '5' );\
+Task_name[ 36 ] =  rtems_build_name( 'P', 'T', '3', '6' );\
+Task_name[ 37 ] =  rtems_build_name( 'P', 'T', '3', '7' );\
+Task_name[ 38 ] =  rtems_build_name( 'P', 'T', '3', '8' );\
+Task_name[ 39 ] =  rtems_build_name( 'P', 'T', '3', '9' );\
+Task_name[ 40 ] =  rtems_build_name( 'P', 'T', '4', '0' );\
+Task_name[ 41 ] =  rtems_build_name( 'P', 'T', '4', '1' );\
+Task_name[ 42 ] =  rtems_build_name( 'P', 'T', '4', '2' );\
+Task_name[ 43 ] =  rtems_build_name( 'P', 'T', '4', '3' );\
+Task_name[ 44 ] =  rtems_build_name( 'P', 'T', '4', '4' );\
+Task_name[ 45 ] =  rtems_build_name( 'P', 'T', '4', '5' );\
+Task_name[ 46 ] =  rtems_build_name( 'P', 'T', '4', '6' );\
+Task_name[ 47 ] =  rtems_build_name( 'P', 'T', '4', '7' );\
+Task_name[ 48 ] =  rtems_build_name( 'P', 'T', '4', '8' );\
+Task_name[ 49 ] =  rtems_build_name( 'P', 'T', '4', '9' );\
+Task_name[ 50 ] =  rtems_build_name( 'P', 'T', '5', '0' );\
+Task_name[ 51 ] =  rtems_build_name( 'P', 'T', '5', '1' );\
+Task_name[ 52 ] =  rtems_build_name( 'P', 'T', '5', '2' );\
+Task_name[ 53 ] =  rtems_build_name( 'P', 'T', '5', '3' );\
+Task_name[ 54 ] =  rtems_build_name( 'P', 'T', '5', '4' );\
+Task_name[ 55 ] =  rtems_build_name( 'P', 'T', '5', '5' );\
+Task_name[ 56 ] =  rtems_build_name( 'P', 'T', '5', '6' );\
+Task_name[ 57 ] =  rtems_build_name( 'P', 'T', '5', '7' );\
+Task_name[ 58 ] =  rtems_build_name( 'P', 'T', '5', '8' );\
+Task_name[ 59 ] =  rtems_build_name( 'P', 'T', '5', '9' );\
+Task_name[ 60 ] =  rtems_build_name( 'P', 'T', '6', '0' );\
+Task_name[ 61 ] =  rtems_build_name( 'P', 'T', '6', '1' );\
+Task_name[ 62 ] =  rtems_build_name( 'P', 'T', '6', '2' );\
+Task_name[ 63 ] =  rtems_build_name( 'P', 'T', '6', '3' );\
+Task_name[ 64 ] =  rtems_build_name( 'P', 'T', '6', '4' );\
+Task_name[ 65 ] =  rtems_build_name( 'P', 'T', '6', '5' );\
+Task_name[ 66 ] =  rtems_build_name( 'P', 'T', '6', '6' );\
+Task_name[ 67 ] =  rtems_build_name( 'P', 'T', '6', '7' );\
+Task_name[ 68 ] =  rtems_build_name( 'P', 'T', '6', '8' );\
+Task_name[ 69 ] =  rtems_build_name( 'P', 'T', '6', '9' );\
+Task_name[ 70 ] =  rtems_build_name( 'P', 'T', '7', '0' );\
+Task_name[ 71 ] =  rtems_build_name( 'P', 'T', '7', '1' );\
+Task_name[ 72 ] =  rtems_build_name( 'P', 'T', '7', '2' );\
+Task_name[ 73 ] =  rtems_build_name( 'P', 'T', '7', '3' );\
+Task_name[ 74 ] =  rtems_build_name( 'P', 'T', '7', '4' );\
+Task_name[ 75 ] =  rtems_build_name( 'P', 'T', '7', '5' );\
+Task_name[ 76 ] =  rtems_build_name( 'P', 'T', '7', '6' );\
+Task_name[ 77 ] =  rtems_build_name( 'P', 'T', '7', '7' );\
+Task_name[ 78 ] =  rtems_build_name( 'P', 'T', '7', '8' );\
+Task_name[ 79 ] =  rtems_build_name( 'P', 'T', '7', '9' );\
+Task_name[ 80 ] =  rtems_build_name( 'P', 'T', '8', '0' );\
 } while(0)
 
 #endif
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache06/system.h rtems-hwsched-cache/testsuites/gabtests/cache06/system.h
--- rtems-hwds/testsuites/gabtests/cache06/system.h	2010-10-01 05:17:28.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache06/system.h	2010-10-07 16:32:43.000000000 -0400
@@ -98,5 +98,5 @@ extern rtems_id   final_barrier;
 extern uint32_t *shared_array;
 #define SHARED_ARRAY_SIZE (1024 * 32 * 10) /* 1KB * num_kb * multiplier */
 extern uint32_t cache_line_length;
-extern uint32_t cache_num_lines_to_access;
+extern uint32_t cache_num_lines;
 /* end of include file */
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache06/tasks_periodic.c rtems-hwsched-cache/testsuites/gabtests/cache06/tasks_periodic.c
--- rtems-hwds/testsuites/gabtests/cache06/tasks_periodic.c	2010-09-30 19:49:13.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache06/tasks_periodic.c	2010-10-06 22:23:48.000000000 -0400
@@ -28,6 +28,8 @@ rtems_task Tasks_Periodic(
   uint32_t          periods_executed;
   uint32_t          local_deadlines_missed;
   uint32_t          temp = 0;
+  uint32_t          count = 0;
+  uint64_t  start_tick, stop_tick;
 
   status = rtems_rate_monotonic_create( argument, &rmid );
   directive_failed( status, "rtems_rate_monotonic_create" );
@@ -85,8 +87,10 @@ rtems_task Tasks_Periodic(
     /* loop through shared_array by cache_line_length until 
      * done accessing cache_num_lines_to_access. half of accesses 
      * are writes, and half are reads. */
+    count = 0;
     for ( i = (argument*SHARED_ARRAY_SIZE/NUM_TASKS); 
-          i < (argument*SHARED_ARRAY_SIZE/NUM_TASKS) + cache_num_lines_to_access; 
+          i < (argument*SHARED_ARRAY_SIZE/NUM_TASKS) + cache_num_lines*
+          (((double)Execution_us[argument]/(double)Periods[argument]/CONFIGURE_MICROSECONDS_PER_TICK/0.6)); 
           i++) 
     {
       if ((argument+i)%2) {
@@ -102,6 +106,10 @@ rtems_task Tasks_Periodic(
             i*(cache_line_length/sizeof(uint32_t)) % (SHARED_ARRAY_SIZE/sizeof(uint32_t))
           ] = argument;
       }
+      count += 40; /* rough estimate of the loop length */
+      if (count > Instructions_per_us * Execution_us[argument]) {
+        break;
+      }
     }
 
     /*
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache07/init.c rtems-hwsched-cache/testsuites/gabtests/cache07/init.c
--- rtems-hwds/testsuites/gabtests/cache07/init.c	2010-10-09 21:10:42.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache07/init.c	2010-10-06 22:23:48.000000000 -0400
@@ -42,7 +42,7 @@ rtems_id  final_barrier;
 uint32_t *shared_array;
 
 uint32_t  cache_line_length = 64;
-uint32_t  cache_num_lines_to_access = 512*(0.1 + 0.7); /* 512*(% of cache) */
+uint32_t  cache_num_lines = 512; /* 512*(% of cache) */
 
 rtems_task Init(
   rtems_task_argument argument
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache07/macros.h rtems-hwsched-cache/testsuites/gabtests/cache07/macros.h
--- rtems-hwds/testsuites/gabtests/cache07/macros.h	2010-10-01 04:44:22.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache07/macros.h	2010-10-07 16:04:25.000000000 -0400
@@ -5,15 +5,15 @@
  */
 
 /* This file was generated with the following parameters: 
--T 27,0.600,0 
+-T 1,0.009,0 -T 1,0.011,0 -T 2,0.006,0 -T 3,0.011,0 -T 5,0.003,0 -T 5,0.003,0 -T 5,0.008,0 -T 6,0.011,0 -T 6,0.001,0 -T 7,0.014,0 -T 7,0.002,0 -T 7,0.013,0 -T 8,0.014,0 -T 9,0.006,0 -T 9,0.002,0 -T 9,0.001,0 -T 12,0.001,0 -T 12,0.011,0 -T 12,0.010,0 -T 13,0.001,0 -T 13,0.008,0 -T 14,0.007,0 -T 16,0.012,0 -T 17,0.007,0 -T 18,0.004,0 -T 19,0.002,0 -T 19,0.014,0 -T 20,0.008,0 -T 20,0.012,0 -T 20,0.009,0 -T 20,0.007,0 -T 24,0.006,0 -T 24,0.013,0 -T 24,0.007,0 -T 24,0.008,0 -T 25,0.003,0 -T 25,0.000,0 -T 26,0.009,0 -T 26,0.010,0 -T 26,0.011,0 -T 26,0.012,0 -T 27,0.011,0 -T 27,0.004,0 -T 27,0.002,0 -T 27,0.006,0 -T 29,0.003,0 -T 29,0.014,0 -T 30,0.003,0 -T 30,0.006,0 -T 31,0.012,0 -T 31,0.012,0 -T 31,0.005,0 -T 31,0.010,0 -T 33,0.009,0 -T 34,0.012,0 -T 34,0.010,0 -T 35,0.000,0 -T 36,0.011,0 -T 37,0.014,0 -T 37,0.001,0 -T 39,0.011,0 -T 39,0.002,0 -T 39,0.007,0 -T 40,0.012,0 -T 43,0.003,0 -T 43,0.009,0 -T 43,0.004,0 -T 43,0.011,0 -T 44,0.007,0 -T 45,0.003,0 -T 45,0.005,0 -T 45,0.006,0 -T 45,0.011,0 -T 48,0.003,0 -T 48,0.009,0 -T 48,0.012,0 -T 49,0.012,0 -T 49,0.005,0 -T 50,0.003,0 -T 50,0.010,0 
 */
 
 #ifndef __MACROS_H_
 #define __MACROS_H_
 
 #define  HP_LENGTH                  (-1)
-#define  MAX_PERIOD                 (27)
-#define  NUM_PERIODIC_TASKS         (1)
+#define  MAX_PERIOD                 (50)
+#define  NUM_PERIODIC_TASKS         (80)
 #define  NUM_APERIODIC_TASKS        (0)
 #define  NUM_TASKS                  ( NUM_PERIODIC_TASKS + NUM_APERIODIC_TASKS )
 #endif
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache07/params.h rtems-hwsched-cache/testsuites/gabtests/cache07/params.h
--- rtems-hwds/testsuites/gabtests/cache07/params.h	2010-10-01 04:44:22.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache07/params.h	2010-10-07 16:04:25.000000000 -0400
@@ -5,32 +5,190 @@
  */
 
 /* This file was generated with the following parameters: 
--T 27,0.600,0 
+-T 1,0.009,0 -T 1,0.011,0 -T 2,0.006,0 -T 3,0.011,0 -T 5,0.003,0 -T 5,0.003,0 -T 5,0.008,0 -T 6,0.011,0 -T 6,0.001,0 -T 7,0.014,0 -T 7,0.002,0 -T 7,0.013,0 -T 8,0.014,0 -T 9,0.006,0 -T 9,0.002,0 -T 9,0.001,0 -T 12,0.001,0 -T 12,0.011,0 -T 12,0.010,0 -T 13,0.001,0 -T 13,0.008,0 -T 14,0.007,0 -T 16,0.012,0 -T 17,0.007,0 -T 18,0.004,0 -T 19,0.002,0 -T 19,0.014,0 -T 20,0.008,0 -T 20,0.012,0 -T 20,0.009,0 -T 20,0.007,0 -T 24,0.006,0 -T 24,0.013,0 -T 24,0.007,0 -T 24,0.008,0 -T 25,0.003,0 -T 25,0.000,0 -T 26,0.009,0 -T 26,0.010,0 -T 26,0.011,0 -T 26,0.012,0 -T 27,0.011,0 -T 27,0.004,0 -T 27,0.002,0 -T 27,0.006,0 -T 29,0.003,0 -T 29,0.014,0 -T 30,0.003,0 -T 30,0.006,0 -T 31,0.012,0 -T 31,0.012,0 -T 31,0.005,0 -T 31,0.010,0 -T 33,0.009,0 -T 34,0.012,0 -T 34,0.010,0 -T 35,0.000,0 -T 36,0.011,0 -T 37,0.014,0 -T 37,0.001,0 -T 39,0.011,0 -T 39,0.002,0 -T 39,0.007,0 -T 40,0.012,0 -T 43,0.003,0 -T 43,0.009,0 -T 43,0.004,0 -T 43,0.011,0 -T 44,0.007,0 -T 45,0.003,0 -T 45,0.005,0 -T 45,0.006,0 -T 45,0.011,0 -T 48,0.003,0 -T 48,0.009,0 -T 48,0.012,0 -T 49,0.012,0 -T 49,0.005,0 -T 50,0.003,0 -T 50,0.010,0 
 */
 
 #ifndef __PARAMS_H_
 #define __PARAMS_H_
 
 #define  HP_LENGTH                  (-1)
-#define  MAX_PERIOD                 (27)
-#define  NUM_PERIODIC_TASKS         (1)
+#define  MAX_PERIOD                 (50)
+#define  NUM_PERIODIC_TASKS         (80)
 #define  NUM_APERIODIC_TASKS        (0)
 #define  NUM_TASKS                  ( NUM_PERIODIC_TASKS + NUM_APERIODIC_TASKS )
 uint32_t  periodic_tasks            = NUM_PERIODIC_TASKS;
 
-rtems_task_priority Priorities[1+NUM_TASKS]= { 0, 27 };
+rtems_task_priority Priorities[1+NUM_TASKS]= { 0, 1, 1, 2, 3, 5, 5, 5, 6, 6, 7, 7, 7, 8, 9, 9, 9, 12, 12, 12, 13, 13, 14, 16, 17, 18, 19, 19, 20, 20, 20, 20, 24, 24, 24, 24, 25, 25, 26, 26, 26, 26, 27, 27, 27, 27, 29, 29, 30, 30, 31, 31, 31, 31, 33, 34, 34, 35, 36, 37, 37, 39, 39, 39, 40, 43, 43, 43, 43, 44, 45, 45, 45, 45, 48, 48, 48, 49, 49, 50, 50 };
 
-uint32_t  Periods[1+NUM_PERIODIC_TASKS]    = { 0, 27 };
+uint32_t  Periods[1+NUM_PERIODIC_TASKS]    = { 0, 1, 1, 2, 3, 5, 5, 5, 6, 6, 7, 7, 7, 8, 9, 9, 9, 12, 12, 12, 13, 13, 14, 16, 17, 18, 19, 19, 20, 20, 20, 20, 24, 24, 24, 24, 25, 25, 26, 26, 26, 26, 27, 27, 27, 27, 29, 29, 30, 30, 31, 31, 31, 31, 33, 34, 34, 35, 36, 37, 37, 39, 39, 39, 40, 43, 43, 43, 43, 44, 45, 45, 45, 45, 48, 48, 48, 49, 49, 50, 50 };
 
 uint32_t  Execution_us[1+NUM_TASKS]        = {
                                              0*CONFIGURE_MICROSECONDS_PER_TICK,
-                                             27*0.6*CONFIGURE_MICROSECONDS_PER_TICK
+                                             1*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             1*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             2*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             3*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             5*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             5*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             5*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             6*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             6*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             7*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             7*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             7*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             8*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             9*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             9*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             9*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             12*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             12*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             12*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             13*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             13*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             14*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             16*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             17*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             18*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             19*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             19*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             20*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             20*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             20*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             20*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             24*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             24*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             24*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             24*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             25*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             25*0*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             26*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             26*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             26*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             26*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             27*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             27*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             27*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             27*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             29*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             29*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             30*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             30*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             31*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             31*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             31*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             31*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             33*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             34*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             34*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             35*0*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             36*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             37*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             37*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             39*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             39*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             39*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             40*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             43*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             43*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             43*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             43*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             44*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             45*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             45*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             45*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             45*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             48*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             48*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             48*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             49*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             49*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             50*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             50*0.01*CONFIGURE_MICROSECONDS_PER_TICK
                                              };
 
-uint32_t  Phases[1+NUM_TASKS]           = { 0, 0 };
+uint32_t  Phases[1+NUM_TASKS]           = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
 
 #define build_task_name() do { \
 Task_name[ 1 ] =  rtems_build_name( 'P', 'T', '0', '1' );\
+Task_name[ 2 ] =  rtems_build_name( 'P', 'T', '0', '2' );\
+Task_name[ 3 ] =  rtems_build_name( 'P', 'T', '0', '3' );\
+Task_name[ 4 ] =  rtems_build_name( 'P', 'T', '0', '4' );\
+Task_name[ 5 ] =  rtems_build_name( 'P', 'T', '0', '5' );\
+Task_name[ 6 ] =  rtems_build_name( 'P', 'T', '0', '6' );\
+Task_name[ 7 ] =  rtems_build_name( 'P', 'T', '0', '7' );\
+Task_name[ 8 ] =  rtems_build_name( 'P', 'T', '0', '8' );\
+Task_name[ 9 ] =  rtems_build_name( 'P', 'T', '0', '9' );\
+Task_name[ 10 ] =  rtems_build_name( 'P', 'T', '1', '0' );\
+Task_name[ 11 ] =  rtems_build_name( 'P', 'T', '1', '1' );\
+Task_name[ 12 ] =  rtems_build_name( 'P', 'T', '1', '2' );\
+Task_name[ 13 ] =  rtems_build_name( 'P', 'T', '1', '3' );\
+Task_name[ 14 ] =  rtems_build_name( 'P', 'T', '1', '4' );\
+Task_name[ 15 ] =  rtems_build_name( 'P', 'T', '1', '5' );\
+Task_name[ 16 ] =  rtems_build_name( 'P', 'T', '1', '6' );\
+Task_name[ 17 ] =  rtems_build_name( 'P', 'T', '1', '7' );\
+Task_name[ 18 ] =  rtems_build_name( 'P', 'T', '1', '8' );\
+Task_name[ 19 ] =  rtems_build_name( 'P', 'T', '1', '9' );\
+Task_name[ 20 ] =  rtems_build_name( 'P', 'T', '2', '0' );\
+Task_name[ 21 ] =  rtems_build_name( 'P', 'T', '2', '1' );\
+Task_name[ 22 ] =  rtems_build_name( 'P', 'T', '2', '2' );\
+Task_name[ 23 ] =  rtems_build_name( 'P', 'T', '2', '3' );\
+Task_name[ 24 ] =  rtems_build_name( 'P', 'T', '2', '4' );\
+Task_name[ 25 ] =  rtems_build_name( 'P', 'T', '2', '5' );\
+Task_name[ 26 ] =  rtems_build_name( 'P', 'T', '2', '6' );\
+Task_name[ 27 ] =  rtems_build_name( 'P', 'T', '2', '7' );\
+Task_name[ 28 ] =  rtems_build_name( 'P', 'T', '2', '8' );\
+Task_name[ 29 ] =  rtems_build_name( 'P', 'T', '2', '9' );\
+Task_name[ 30 ] =  rtems_build_name( 'P', 'T', '3', '0' );\
+Task_name[ 31 ] =  rtems_build_name( 'P', 'T', '3', '1' );\
+Task_name[ 32 ] =  rtems_build_name( 'P', 'T', '3', '2' );\
+Task_name[ 33 ] =  rtems_build_name( 'P', 'T', '3', '3' );\
+Task_name[ 34 ] =  rtems_build_name( 'P', 'T', '3', '4' );\
+Task_name[ 35 ] =  rtems_build_name( 'P', 'T', '3', '5' );\
+Task_name[ 36 ] =  rtems_build_name( 'P', 'T', '3', '6' );\
+Task_name[ 37 ] =  rtems_build_name( 'P', 'T', '3', '7' );\
+Task_name[ 38 ] =  rtems_build_name( 'P', 'T', '3', '8' );\
+Task_name[ 39 ] =  rtems_build_name( 'P', 'T', '3', '9' );\
+Task_name[ 40 ] =  rtems_build_name( 'P', 'T', '4', '0' );\
+Task_name[ 41 ] =  rtems_build_name( 'P', 'T', '4', '1' );\
+Task_name[ 42 ] =  rtems_build_name( 'P', 'T', '4', '2' );\
+Task_name[ 43 ] =  rtems_build_name( 'P', 'T', '4', '3' );\
+Task_name[ 44 ] =  rtems_build_name( 'P', 'T', '4', '4' );\
+Task_name[ 45 ] =  rtems_build_name( 'P', 'T', '4', '5' );\
+Task_name[ 46 ] =  rtems_build_name( 'P', 'T', '4', '6' );\
+Task_name[ 47 ] =  rtems_build_name( 'P', 'T', '4', '7' );\
+Task_name[ 48 ] =  rtems_build_name( 'P', 'T', '4', '8' );\
+Task_name[ 49 ] =  rtems_build_name( 'P', 'T', '4', '9' );\
+Task_name[ 50 ] =  rtems_build_name( 'P', 'T', '5', '0' );\
+Task_name[ 51 ] =  rtems_build_name( 'P', 'T', '5', '1' );\
+Task_name[ 52 ] =  rtems_build_name( 'P', 'T', '5', '2' );\
+Task_name[ 53 ] =  rtems_build_name( 'P', 'T', '5', '3' );\
+Task_name[ 54 ] =  rtems_build_name( 'P', 'T', '5', '4' );\
+Task_name[ 55 ] =  rtems_build_name( 'P', 'T', '5', '5' );\
+Task_name[ 56 ] =  rtems_build_name( 'P', 'T', '5', '6' );\
+Task_name[ 57 ] =  rtems_build_name( 'P', 'T', '5', '7' );\
+Task_name[ 58 ] =  rtems_build_name( 'P', 'T', '5', '8' );\
+Task_name[ 59 ] =  rtems_build_name( 'P', 'T', '5', '9' );\
+Task_name[ 60 ] =  rtems_build_name( 'P', 'T', '6', '0' );\
+Task_name[ 61 ] =  rtems_build_name( 'P', 'T', '6', '1' );\
+Task_name[ 62 ] =  rtems_build_name( 'P', 'T', '6', '2' );\
+Task_name[ 63 ] =  rtems_build_name( 'P', 'T', '6', '3' );\
+Task_name[ 64 ] =  rtems_build_name( 'P', 'T', '6', '4' );\
+Task_name[ 65 ] =  rtems_build_name( 'P', 'T', '6', '5' );\
+Task_name[ 66 ] =  rtems_build_name( 'P', 'T', '6', '6' );\
+Task_name[ 67 ] =  rtems_build_name( 'P', 'T', '6', '7' );\
+Task_name[ 68 ] =  rtems_build_name( 'P', 'T', '6', '8' );\
+Task_name[ 69 ] =  rtems_build_name( 'P', 'T', '6', '9' );\
+Task_name[ 70 ] =  rtems_build_name( 'P', 'T', '7', '0' );\
+Task_name[ 71 ] =  rtems_build_name( 'P', 'T', '7', '1' );\
+Task_name[ 72 ] =  rtems_build_name( 'P', 'T', '7', '2' );\
+Task_name[ 73 ] =  rtems_build_name( 'P', 'T', '7', '3' );\
+Task_name[ 74 ] =  rtems_build_name( 'P', 'T', '7', '4' );\
+Task_name[ 75 ] =  rtems_build_name( 'P', 'T', '7', '5' );\
+Task_name[ 76 ] =  rtems_build_name( 'P', 'T', '7', '6' );\
+Task_name[ 77 ] =  rtems_build_name( 'P', 'T', '7', '7' );\
+Task_name[ 78 ] =  rtems_build_name( 'P', 'T', '7', '8' );\
+Task_name[ 79 ] =  rtems_build_name( 'P', 'T', '7', '9' );\
+Task_name[ 80 ] =  rtems_build_name( 'P', 'T', '8', '0' );\
 } while(0)
 
 #endif
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache07/system.h rtems-hwsched-cache/testsuites/gabtests/cache07/system.h
--- rtems-hwds/testsuites/gabtests/cache07/system.h	2010-10-01 05:17:28.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache07/system.h	2010-10-07 16:32:43.000000000 -0400
@@ -98,5 +98,5 @@ extern rtems_id   final_barrier;
 extern uint32_t *shared_array;
 #define SHARED_ARRAY_SIZE (1024 * 32 * 10) /* 1KB * num_kb * multiplier */
 extern uint32_t cache_line_length;
-extern uint32_t cache_num_lines_to_access;
+extern uint32_t cache_num_lines;
 /* end of include file */
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache07/tasks_periodic.c rtems-hwsched-cache/testsuites/gabtests/cache07/tasks_periodic.c
--- rtems-hwds/testsuites/gabtests/cache07/tasks_periodic.c	2010-09-30 19:49:13.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache07/tasks_periodic.c	2010-10-06 22:23:48.000000000 -0400
@@ -28,6 +28,8 @@ rtems_task Tasks_Periodic(
   uint32_t          periods_executed;
   uint32_t          local_deadlines_missed;
   uint32_t          temp = 0;
+  uint32_t          count = 0;
+  uint64_t  start_tick, stop_tick;
 
   status = rtems_rate_monotonic_create( argument, &rmid );
   directive_failed( status, "rtems_rate_monotonic_create" );
@@ -85,8 +87,10 @@ rtems_task Tasks_Periodic(
     /* loop through shared_array by cache_line_length until 
      * done accessing cache_num_lines_to_access. half of accesses 
      * are writes, and half are reads. */
+    count = 0;
     for ( i = (argument*SHARED_ARRAY_SIZE/NUM_TASKS); 
-          i < (argument*SHARED_ARRAY_SIZE/NUM_TASKS) + cache_num_lines_to_access; 
+          i < (argument*SHARED_ARRAY_SIZE/NUM_TASKS) + cache_num_lines*
+          (((double)Execution_us[argument]/(double)Periods[argument]/CONFIGURE_MICROSECONDS_PER_TICK/0.6)); 
           i++) 
     {
       if ((argument+i)%2) {
@@ -102,6 +106,10 @@ rtems_task Tasks_Periodic(
             i*(cache_line_length/sizeof(uint32_t)) % (SHARED_ARRAY_SIZE/sizeof(uint32_t))
           ] = argument;
       }
+      count += 40; /* rough estimate of the loop length */
+      if (count > Instructions_per_us * Execution_us[argument]) {
+        break;
+      }
     }
 
     /*
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache08/init.c rtems-hwsched-cache/testsuites/gabtests/cache08/init.c
--- rtems-hwds/testsuites/gabtests/cache08/init.c	2010-10-09 21:10:42.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache08/init.c	2010-10-06 22:23:49.000000000 -0400
@@ -42,7 +42,7 @@ rtems_id  final_barrier;
 uint32_t *shared_array;
 
 uint32_t  cache_line_length = 64;
-uint32_t  cache_num_lines_to_access = 512*(0.1 + 0.8); /* 512*(% of cache) */
+uint32_t  cache_num_lines = 512; /* 512*(% of cache) */
 
 rtems_task Init(
   rtems_task_argument argument
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache08/macros.h rtems-hwsched-cache/testsuites/gabtests/cache08/macros.h
--- rtems-hwds/testsuites/gabtests/cache08/macros.h	2010-10-01 04:44:22.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache08/macros.h	2010-10-07 16:04:26.000000000 -0400
@@ -5,15 +5,15 @@
  */
 
 /* This file was generated with the following parameters: 
--T 27,0.600,0 
+-T 1,0.012,0 -T 1,0.004,0 -T 2,0.013,0 -T 2,0.013,0 -T 3,0.011,0 -T 4,0.014,0 -T 4,0.002,0 -T 5,0.006,0 -T 5,0.004,0 -T 6,0.006,0 -T 8,0.010,0 -T 9,0.001,0 -T 9,0.008,0 -T 10,0.010,0 -T 10,0.002,0 -T 13,0.010,0 -T 13,0.014,0 -T 13,0.003,0 -T 13,0.010,0 -T 16,0.013,0 -T 16,0.005,0 -T 16,0.008,0 -T 18,0.002,0 -T 18,0.015,0 -T 18,0.013,0 -T 19,0.003,0 -T 20,0.003,0 -T 20,0.007,0 -T 20,0.006,0 -T 22,0.015,0 -T 22,0.012,0 -T 23,0.001,0 -T 24,0.000,0 -T 25,0.013,0 -T 26,0.008,0 -T 26,0.008,0 -T 26,0.006,0 -T 28,0.001,0 -T 28,0.008,0 -T 29,0.001,0 -T 30,0.005,0 -T 31,0.008,0 -T 31,0.007,0 -T 31,0.011,0 -T 32,0.013,0 -T 33,0.014,0 -T 34,0.001,0 -T 34,0.009,0 -T 35,0.012,0 -T 35,0.000,0 -T 36,0.001,0 -T 36,0.007,0 -T 37,0.009,0 -T 38,0.008,0 -T 39,0.001,0 -T 40,0.009,0 -T 40,0.013,0 -T 40,0.012,0 -T 40,0.001,0 -T 40,0.003,0 -T 41,0.012,0 -T 41,0.011,0 -T 42,0.008,0 -T 42,0.009,0 -T 42,0.007,0 -T 42,0.004,0 -T 42,0.009,0 -T 43,0.004,0 -T 45,0.011,0 -T 45,0.005,0 -T 45,0.002,0 -T 45,0.005,0 -T 45,0.014,0 -T 46,0.001,0 -T 46,0.013,0 -T 46,0.010,0 -T 47,0.009,0 -T 48,0.007,0 -T 50,0.011,0 -T 50,0.004,0 
 */
 
 #ifndef __MACROS_H_
 #define __MACROS_H_
 
 #define  HP_LENGTH                  (-1)
-#define  MAX_PERIOD                 (27)
-#define  NUM_PERIODIC_TASKS         (1)
+#define  MAX_PERIOD                 (50)
+#define  NUM_PERIODIC_TASKS         (80)
 #define  NUM_APERIODIC_TASKS        (0)
 #define  NUM_TASKS                  ( NUM_PERIODIC_TASKS + NUM_APERIODIC_TASKS )
 #endif
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache08/params.h rtems-hwsched-cache/testsuites/gabtests/cache08/params.h
--- rtems-hwds/testsuites/gabtests/cache08/params.h	2010-10-01 04:44:22.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache08/params.h	2010-10-07 16:04:26.000000000 -0400
@@ -5,32 +5,190 @@
  */
 
 /* This file was generated with the following parameters: 
--T 27,0.600,0 
+-T 1,0.012,0 -T 1,0.004,0 -T 2,0.013,0 -T 2,0.013,0 -T 3,0.011,0 -T 4,0.014,0 -T 4,0.002,0 -T 5,0.006,0 -T 5,0.004,0 -T 6,0.006,0 -T 8,0.010,0 -T 9,0.001,0 -T 9,0.008,0 -T 10,0.010,0 -T 10,0.002,0 -T 13,0.010,0 -T 13,0.014,0 -T 13,0.003,0 -T 13,0.010,0 -T 16,0.013,0 -T 16,0.005,0 -T 16,0.008,0 -T 18,0.002,0 -T 18,0.015,0 -T 18,0.013,0 -T 19,0.003,0 -T 20,0.003,0 -T 20,0.007,0 -T 20,0.006,0 -T 22,0.015,0 -T 22,0.012,0 -T 23,0.001,0 -T 24,0.000,0 -T 25,0.013,0 -T 26,0.008,0 -T 26,0.008,0 -T 26,0.006,0 -T 28,0.001,0 -T 28,0.008,0 -T 29,0.001,0 -T 30,0.005,0 -T 31,0.008,0 -T 31,0.007,0 -T 31,0.011,0 -T 32,0.013,0 -T 33,0.014,0 -T 34,0.001,0 -T 34,0.009,0 -T 35,0.012,0 -T 35,0.000,0 -T 36,0.001,0 -T 36,0.007,0 -T 37,0.009,0 -T 38,0.008,0 -T 39,0.001,0 -T 40,0.009,0 -T 40,0.013,0 -T 40,0.012,0 -T 40,0.001,0 -T 40,0.003,0 -T 41,0.012,0 -T 41,0.011,0 -T 42,0.008,0 -T 42,0.009,0 -T 42,0.007,0 -T 42,0.004,0 -T 42,0.009,0 -T 43,0.004,0 -T 45,0.011,0 -T 45,0.005,0 -T 45,0.002,0 -T 45,0.005,0 -T 45,0.014,0 -T 46,0.001,0 -T 46,0.013,0 -T 46,0.010,0 -T 47,0.009,0 -T 48,0.007,0 -T 50,0.011,0 -T 50,0.004,0 
 */
 
 #ifndef __PARAMS_H_
 #define __PARAMS_H_
 
 #define  HP_LENGTH                  (-1)
-#define  MAX_PERIOD                 (27)
-#define  NUM_PERIODIC_TASKS         (1)
+#define  MAX_PERIOD                 (50)
+#define  NUM_PERIODIC_TASKS         (80)
 #define  NUM_APERIODIC_TASKS        (0)
 #define  NUM_TASKS                  ( NUM_PERIODIC_TASKS + NUM_APERIODIC_TASKS )
 uint32_t  periodic_tasks            = NUM_PERIODIC_TASKS;
 
-rtems_task_priority Priorities[1+NUM_TASKS]= { 0, 27 };
+rtems_task_priority Priorities[1+NUM_TASKS]= { 0, 1, 1, 2, 2, 3, 4, 4, 5, 5, 6, 8, 9, 9, 10, 10, 13, 13, 13, 13, 16, 16, 16, 18, 18, 18, 19, 20, 20, 20, 22, 22, 23, 24, 25, 26, 26, 26, 28, 28, 29, 30, 31, 31, 31, 32, 33, 34, 34, 35, 35, 36, 36, 37, 38, 39, 40, 40, 40, 40, 40, 41, 41, 42, 42, 42, 42, 42, 43, 45, 45, 45, 45, 45, 46, 46, 46, 47, 48, 50, 50 };
 
-uint32_t  Periods[1+NUM_PERIODIC_TASKS]    = { 0, 27 };
+uint32_t  Periods[1+NUM_PERIODIC_TASKS]    = { 0, 1, 1, 2, 2, 3, 4, 4, 5, 5, 6, 8, 9, 9, 10, 10, 13, 13, 13, 13, 16, 16, 16, 18, 18, 18, 19, 20, 20, 20, 22, 22, 23, 24, 25, 26, 26, 26, 28, 28, 29, 30, 31, 31, 31, 32, 33, 34, 34, 35, 35, 36, 36, 37, 38, 39, 40, 40, 40, 40, 40, 41, 41, 42, 42, 42, 42, 42, 43, 45, 45, 45, 45, 45, 46, 46, 46, 47, 48, 50, 50 };
 
 uint32_t  Execution_us[1+NUM_TASKS]        = {
                                              0*CONFIGURE_MICROSECONDS_PER_TICK,
-                                             27*0.6*CONFIGURE_MICROSECONDS_PER_TICK
+                                             1*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             1*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             2*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             2*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             3*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             4*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             4*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             5*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             5*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             6*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             8*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             9*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             9*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             10*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             10*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             13*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             13*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             13*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             13*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             16*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             16*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             16*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             18*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             18*0.015*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             18*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             19*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             20*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             20*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             20*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             22*0.015*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             22*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             23*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             24*0*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             25*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             26*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             26*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             26*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             28*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             28*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             29*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             30*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             31*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             31*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             31*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             32*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             33*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             34*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             34*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             35*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             35*0*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             36*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             36*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             37*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             38*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             39*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             40*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             40*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             40*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             40*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             40*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             41*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             41*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             42*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             42*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             42*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             42*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             42*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             43*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             45*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             45*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             45*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             45*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             45*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             46*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             46*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             46*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             47*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             48*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             50*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             50*0.004*CONFIGURE_MICROSECONDS_PER_TICK
                                              };
 
-uint32_t  Phases[1+NUM_TASKS]           = { 0, 0 };
+uint32_t  Phases[1+NUM_TASKS]           = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
 
 #define build_task_name() do { \
 Task_name[ 1 ] =  rtems_build_name( 'P', 'T', '0', '1' );\
+Task_name[ 2 ] =  rtems_build_name( 'P', 'T', '0', '2' );\
+Task_name[ 3 ] =  rtems_build_name( 'P', 'T', '0', '3' );\
+Task_name[ 4 ] =  rtems_build_name( 'P', 'T', '0', '4' );\
+Task_name[ 5 ] =  rtems_build_name( 'P', 'T', '0', '5' );\
+Task_name[ 6 ] =  rtems_build_name( 'P', 'T', '0', '6' );\
+Task_name[ 7 ] =  rtems_build_name( 'P', 'T', '0', '7' );\
+Task_name[ 8 ] =  rtems_build_name( 'P', 'T', '0', '8' );\
+Task_name[ 9 ] =  rtems_build_name( 'P', 'T', '0', '9' );\
+Task_name[ 10 ] =  rtems_build_name( 'P', 'T', '1', '0' );\
+Task_name[ 11 ] =  rtems_build_name( 'P', 'T', '1', '1' );\
+Task_name[ 12 ] =  rtems_build_name( 'P', 'T', '1', '2' );\
+Task_name[ 13 ] =  rtems_build_name( 'P', 'T', '1', '3' );\
+Task_name[ 14 ] =  rtems_build_name( 'P', 'T', '1', '4' );\
+Task_name[ 15 ] =  rtems_build_name( 'P', 'T', '1', '5' );\
+Task_name[ 16 ] =  rtems_build_name( 'P', 'T', '1', '6' );\
+Task_name[ 17 ] =  rtems_build_name( 'P', 'T', '1', '7' );\
+Task_name[ 18 ] =  rtems_build_name( 'P', 'T', '1', '8' );\
+Task_name[ 19 ] =  rtems_build_name( 'P', 'T', '1', '9' );\
+Task_name[ 20 ] =  rtems_build_name( 'P', 'T', '2', '0' );\
+Task_name[ 21 ] =  rtems_build_name( 'P', 'T', '2', '1' );\
+Task_name[ 22 ] =  rtems_build_name( 'P', 'T', '2', '2' );\
+Task_name[ 23 ] =  rtems_build_name( 'P', 'T', '2', '3' );\
+Task_name[ 24 ] =  rtems_build_name( 'P', 'T', '2', '4' );\
+Task_name[ 25 ] =  rtems_build_name( 'P', 'T', '2', '5' );\
+Task_name[ 26 ] =  rtems_build_name( 'P', 'T', '2', '6' );\
+Task_name[ 27 ] =  rtems_build_name( 'P', 'T', '2', '7' );\
+Task_name[ 28 ] =  rtems_build_name( 'P', 'T', '2', '8' );\
+Task_name[ 29 ] =  rtems_build_name( 'P', 'T', '2', '9' );\
+Task_name[ 30 ] =  rtems_build_name( 'P', 'T', '3', '0' );\
+Task_name[ 31 ] =  rtems_build_name( 'P', 'T', '3', '1' );\
+Task_name[ 32 ] =  rtems_build_name( 'P', 'T', '3', '2' );\
+Task_name[ 33 ] =  rtems_build_name( 'P', 'T', '3', '3' );\
+Task_name[ 34 ] =  rtems_build_name( 'P', 'T', '3', '4' );\
+Task_name[ 35 ] =  rtems_build_name( 'P', 'T', '3', '5' );\
+Task_name[ 36 ] =  rtems_build_name( 'P', 'T', '3', '6' );\
+Task_name[ 37 ] =  rtems_build_name( 'P', 'T', '3', '7' );\
+Task_name[ 38 ] =  rtems_build_name( 'P', 'T', '3', '8' );\
+Task_name[ 39 ] =  rtems_build_name( 'P', 'T', '3', '9' );\
+Task_name[ 40 ] =  rtems_build_name( 'P', 'T', '4', '0' );\
+Task_name[ 41 ] =  rtems_build_name( 'P', 'T', '4', '1' );\
+Task_name[ 42 ] =  rtems_build_name( 'P', 'T', '4', '2' );\
+Task_name[ 43 ] =  rtems_build_name( 'P', 'T', '4', '3' );\
+Task_name[ 44 ] =  rtems_build_name( 'P', 'T', '4', '4' );\
+Task_name[ 45 ] =  rtems_build_name( 'P', 'T', '4', '5' );\
+Task_name[ 46 ] =  rtems_build_name( 'P', 'T', '4', '6' );\
+Task_name[ 47 ] =  rtems_build_name( 'P', 'T', '4', '7' );\
+Task_name[ 48 ] =  rtems_build_name( 'P', 'T', '4', '8' );\
+Task_name[ 49 ] =  rtems_build_name( 'P', 'T', '4', '9' );\
+Task_name[ 50 ] =  rtems_build_name( 'P', 'T', '5', '0' );\
+Task_name[ 51 ] =  rtems_build_name( 'P', 'T', '5', '1' );\
+Task_name[ 52 ] =  rtems_build_name( 'P', 'T', '5', '2' );\
+Task_name[ 53 ] =  rtems_build_name( 'P', 'T', '5', '3' );\
+Task_name[ 54 ] =  rtems_build_name( 'P', 'T', '5', '4' );\
+Task_name[ 55 ] =  rtems_build_name( 'P', 'T', '5', '5' );\
+Task_name[ 56 ] =  rtems_build_name( 'P', 'T', '5', '6' );\
+Task_name[ 57 ] =  rtems_build_name( 'P', 'T', '5', '7' );\
+Task_name[ 58 ] =  rtems_build_name( 'P', 'T', '5', '8' );\
+Task_name[ 59 ] =  rtems_build_name( 'P', 'T', '5', '9' );\
+Task_name[ 60 ] =  rtems_build_name( 'P', 'T', '6', '0' );\
+Task_name[ 61 ] =  rtems_build_name( 'P', 'T', '6', '1' );\
+Task_name[ 62 ] =  rtems_build_name( 'P', 'T', '6', '2' );\
+Task_name[ 63 ] =  rtems_build_name( 'P', 'T', '6', '3' );\
+Task_name[ 64 ] =  rtems_build_name( 'P', 'T', '6', '4' );\
+Task_name[ 65 ] =  rtems_build_name( 'P', 'T', '6', '5' );\
+Task_name[ 66 ] =  rtems_build_name( 'P', 'T', '6', '6' );\
+Task_name[ 67 ] =  rtems_build_name( 'P', 'T', '6', '7' );\
+Task_name[ 68 ] =  rtems_build_name( 'P', 'T', '6', '8' );\
+Task_name[ 69 ] =  rtems_build_name( 'P', 'T', '6', '9' );\
+Task_name[ 70 ] =  rtems_build_name( 'P', 'T', '7', '0' );\
+Task_name[ 71 ] =  rtems_build_name( 'P', 'T', '7', '1' );\
+Task_name[ 72 ] =  rtems_build_name( 'P', 'T', '7', '2' );\
+Task_name[ 73 ] =  rtems_build_name( 'P', 'T', '7', '3' );\
+Task_name[ 74 ] =  rtems_build_name( 'P', 'T', '7', '4' );\
+Task_name[ 75 ] =  rtems_build_name( 'P', 'T', '7', '5' );\
+Task_name[ 76 ] =  rtems_build_name( 'P', 'T', '7', '6' );\
+Task_name[ 77 ] =  rtems_build_name( 'P', 'T', '7', '7' );\
+Task_name[ 78 ] =  rtems_build_name( 'P', 'T', '7', '8' );\
+Task_name[ 79 ] =  rtems_build_name( 'P', 'T', '7', '9' );\
+Task_name[ 80 ] =  rtems_build_name( 'P', 'T', '8', '0' );\
 } while(0)
 
 #endif
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache08/system.h rtems-hwsched-cache/testsuites/gabtests/cache08/system.h
--- rtems-hwds/testsuites/gabtests/cache08/system.h	2010-10-01 05:17:28.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache08/system.h	2010-10-07 16:32:43.000000000 -0400
@@ -98,5 +98,5 @@ extern rtems_id   final_barrier;
 extern uint32_t *shared_array;
 #define SHARED_ARRAY_SIZE (1024 * 32 * 10) /* 1KB * num_kb * multiplier */
 extern uint32_t cache_line_length;
-extern uint32_t cache_num_lines_to_access;
+extern uint32_t cache_num_lines;
 /* end of include file */
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache08/tasks_periodic.c rtems-hwsched-cache/testsuites/gabtests/cache08/tasks_periodic.c
--- rtems-hwds/testsuites/gabtests/cache08/tasks_periodic.c	2010-09-30 19:49:13.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache08/tasks_periodic.c	2010-10-06 22:23:49.000000000 -0400
@@ -28,6 +28,8 @@ rtems_task Tasks_Periodic(
   uint32_t          periods_executed;
   uint32_t          local_deadlines_missed;
   uint32_t          temp = 0;
+  uint32_t          count = 0;
+  uint64_t  start_tick, stop_tick;
 
   status = rtems_rate_monotonic_create( argument, &rmid );
   directive_failed( status, "rtems_rate_monotonic_create" );
@@ -85,8 +87,10 @@ rtems_task Tasks_Periodic(
     /* loop through shared_array by cache_line_length until 
      * done accessing cache_num_lines_to_access. half of accesses 
      * are writes, and half are reads. */
+    count = 0;
     for ( i = (argument*SHARED_ARRAY_SIZE/NUM_TASKS); 
-          i < (argument*SHARED_ARRAY_SIZE/NUM_TASKS) + cache_num_lines_to_access; 
+          i < (argument*SHARED_ARRAY_SIZE/NUM_TASKS) + cache_num_lines*
+          (((double)Execution_us[argument]/(double)Periods[argument]/CONFIGURE_MICROSECONDS_PER_TICK/0.6)); 
           i++) 
     {
       if ((argument+i)%2) {
@@ -102,6 +106,10 @@ rtems_task Tasks_Periodic(
             i*(cache_line_length/sizeof(uint32_t)) % (SHARED_ARRAY_SIZE/sizeof(uint32_t))
           ] = argument;
       }
+      count += 40; /* rough estimate of the loop length */
+      if (count > Instructions_per_us * Execution_us[argument]) {
+        break;
+      }
     }
 
     /*
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache09/init.c rtems-hwsched-cache/testsuites/gabtests/cache09/init.c
--- rtems-hwds/testsuites/gabtests/cache09/init.c	2010-10-09 21:10:42.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache09/init.c	2010-10-06 22:23:48.000000000 -0400
@@ -42,7 +42,7 @@ rtems_id  final_barrier;
 uint32_t *shared_array;
 
 uint32_t  cache_line_length = 64;
-uint32_t  cache_num_lines_to_access = 512*(0.1 + 0.9); /* 512*(% of cache) */
+uint32_t  cache_num_lines = 512; /* 512*(% of cache) */
 
 rtems_task Init(
   rtems_task_argument argument
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache09/macros.h rtems-hwsched-cache/testsuites/gabtests/cache09/macros.h
--- rtems-hwds/testsuites/gabtests/cache09/macros.h	2010-10-01 04:44:22.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache09/macros.h	2010-10-07 16:04:26.000000000 -0400
@@ -5,15 +5,15 @@
  */
 
 /* This file was generated with the following parameters: 
--T 27,0.600,0 
+-T 1,0.009,0 -T 3,0.013,0 -T 5,0.010,0 -T 6,0.006,0 -T 6,0.001,0 -T 6,0.000,0 -T 7,0.001,0 -T 7,0.010,0 -T 7,0.001,0 -T 7,0.012,0 -T 7,0.009,0 -T 8,0.007,0 -T 8,0.007,0 -T 10,0.008,0 -T 11,0.008,0 -T 11,0.005,0 -T 11,0.002,0 -T 13,0.008,0 -T 13,0.004,0 -T 13,0.014,0 -T 13,0.003,0 -T 15,0.010,0 -T 16,0.002,0 -T 16,0.013,0 -T 17,0.005,0 -T 17,0.005,0 -T 17,0.006,0 -T 18,0.013,0 -T 18,0.004,0 -T 18,0.010,0 -T 19,0.006,0 -T 19,0.007,0 -T 19,0.006,0 -T 20,0.014,0 -T 21,0.008,0 -T 21,0.013,0 -T 21,0.007,0 -T 22,0.011,0 -T 22,0.013,0 -T 22,0.000,0 -T 23,0.011,0 -T 23,0.006,0 -T 24,0.010,0 -T 24,0.006,0 -T 24,0.003,0 -T 27,0.011,0 -T 27,0.011,0 -T 27,0.008,0 -T 28,0.009,0 -T 28,0.003,0 -T 28,0.011,0 -T 29,0.008,0 -T 29,0.000,0 -T 30,0.014,0 -T 31,0.008,0 -T 31,0.007,0 -T 32,0.003,0 -T 32,0.004,0 -T 33,0.013,0 -T 34,0.005,0 -T 34,0.005,0 -T 35,0.012,0 -T 36,0.009,0 -T 37,0.001,0 -T 38,0.007,0 -T 40,0.012,0 -T 40,0.010,0 -T 40,0.006,0 -T 44,0.006,0 -T 45,0.001,0 -T 45,0.004,0 -T 45,0.010,0 -T 46,0.010,0 -T 47,0.013,0 -T 47,0.012,0 -T 47,0.003,0 -T 48,0.001,0 -T 50,0.011,0 -T 50,0.010,0 -T 50,0.013,0 
 */
 
 #ifndef __MACROS_H_
 #define __MACROS_H_
 
 #define  HP_LENGTH                  (-1)
-#define  MAX_PERIOD                 (27)
-#define  NUM_PERIODIC_TASKS         (1)
+#define  MAX_PERIOD                 (50)
+#define  NUM_PERIODIC_TASKS         (80)
 #define  NUM_APERIODIC_TASKS        (0)
 #define  NUM_TASKS                  ( NUM_PERIODIC_TASKS + NUM_APERIODIC_TASKS )
 #endif
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache09/params.h rtems-hwsched-cache/testsuites/gabtests/cache09/params.h
--- rtems-hwds/testsuites/gabtests/cache09/params.h	2010-10-01 04:44:22.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache09/params.h	2010-10-07 16:04:26.000000000 -0400
@@ -5,32 +5,190 @@
  */
 
 /* This file was generated with the following parameters: 
--T 27,0.600,0 
+-T 1,0.009,0 -T 3,0.013,0 -T 5,0.010,0 -T 6,0.006,0 -T 6,0.001,0 -T 6,0.000,0 -T 7,0.001,0 -T 7,0.010,0 -T 7,0.001,0 -T 7,0.012,0 -T 7,0.009,0 -T 8,0.007,0 -T 8,0.007,0 -T 10,0.008,0 -T 11,0.008,0 -T 11,0.005,0 -T 11,0.002,0 -T 13,0.008,0 -T 13,0.004,0 -T 13,0.014,0 -T 13,0.003,0 -T 15,0.010,0 -T 16,0.002,0 -T 16,0.013,0 -T 17,0.005,0 -T 17,0.005,0 -T 17,0.006,0 -T 18,0.013,0 -T 18,0.004,0 -T 18,0.010,0 -T 19,0.006,0 -T 19,0.007,0 -T 19,0.006,0 -T 20,0.014,0 -T 21,0.008,0 -T 21,0.013,0 -T 21,0.007,0 -T 22,0.011,0 -T 22,0.013,0 -T 22,0.000,0 -T 23,0.011,0 -T 23,0.006,0 -T 24,0.010,0 -T 24,0.006,0 -T 24,0.003,0 -T 27,0.011,0 -T 27,0.011,0 -T 27,0.008,0 -T 28,0.009,0 -T 28,0.003,0 -T 28,0.011,0 -T 29,0.008,0 -T 29,0.000,0 -T 30,0.014,0 -T 31,0.008,0 -T 31,0.007,0 -T 32,0.003,0 -T 32,0.004,0 -T 33,0.013,0 -T 34,0.005,0 -T 34,0.005,0 -T 35,0.012,0 -T 36,0.009,0 -T 37,0.001,0 -T 38,0.007,0 -T 40,0.012,0 -T 40,0.010,0 -T 40,0.006,0 -T 44,0.006,0 -T 45,0.001,0 -T 45,0.004,0 -T 45,0.010,0 -T 46,0.010,0 -T 47,0.013,0 -T 47,0.012,0 -T 47,0.003,0 -T 48,0.001,0 -T 50,0.011,0 -T 50,0.010,0 -T 50,0.013,0 
 */
 
 #ifndef __PARAMS_H_
 #define __PARAMS_H_
 
 #define  HP_LENGTH                  (-1)
-#define  MAX_PERIOD                 (27)
-#define  NUM_PERIODIC_TASKS         (1)
+#define  MAX_PERIOD                 (50)
+#define  NUM_PERIODIC_TASKS         (80)
 #define  NUM_APERIODIC_TASKS        (0)
 #define  NUM_TASKS                  ( NUM_PERIODIC_TASKS + NUM_APERIODIC_TASKS )
 uint32_t  periodic_tasks            = NUM_PERIODIC_TASKS;
 
-rtems_task_priority Priorities[1+NUM_TASKS]= { 0, 27 };
+rtems_task_priority Priorities[1+NUM_TASKS]= { 0, 1, 3, 5, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 10, 11, 11, 11, 13, 13, 13, 13, 15, 16, 16, 17, 17, 17, 18, 18, 18, 19, 19, 19, 20, 21, 21, 21, 22, 22, 22, 23, 23, 24, 24, 24, 27, 27, 27, 28, 28, 28, 29, 29, 30, 31, 31, 32, 32, 33, 34, 34, 35, 36, 37, 38, 40, 40, 40, 44, 45, 45, 45, 46, 47, 47, 47, 48, 50, 50, 50 };
 
-uint32_t  Periods[1+NUM_PERIODIC_TASKS]    = { 0, 27 };
+uint32_t  Periods[1+NUM_PERIODIC_TASKS]    = { 0, 1, 3, 5, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 10, 11, 11, 11, 13, 13, 13, 13, 15, 16, 16, 17, 17, 17, 18, 18, 18, 19, 19, 19, 20, 21, 21, 21, 22, 22, 22, 23, 23, 24, 24, 24, 27, 27, 27, 28, 28, 28, 29, 29, 30, 31, 31, 32, 32, 33, 34, 34, 35, 36, 37, 38, 40, 40, 40, 44, 45, 45, 45, 46, 47, 47, 47, 48, 50, 50, 50 };
 
 uint32_t  Execution_us[1+NUM_TASKS]        = {
                                              0*CONFIGURE_MICROSECONDS_PER_TICK,
-                                             27*0.6*CONFIGURE_MICROSECONDS_PER_TICK
+                                             1*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             3*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             5*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             6*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             6*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             6*0*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             7*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             7*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             7*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             7*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             7*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             8*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             8*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             10*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             11*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             11*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             11*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             13*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             13*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             13*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             13*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             15*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             16*0.002*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             16*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             17*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             17*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             17*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             18*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             18*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             18*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             19*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             19*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             19*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             20*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             21*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             21*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             21*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             22*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             22*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             22*0*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             23*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             23*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             24*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             24*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             24*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             27*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             27*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             27*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             28*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             28*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             28*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             29*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             29*0*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             30*0.014*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             31*0.008*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             31*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             32*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             32*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             33*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             34*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             34*0.005*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             35*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             36*0.009*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             37*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             38*0.007*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             40*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             40*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             40*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             44*0.006*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             45*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             45*0.004*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             45*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             46*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             47*0.013*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             47*0.012*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             47*0.003*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             48*0.001*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             50*0.011*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             50*0.01*CONFIGURE_MICROSECONDS_PER_TICK,
+                                             50*0.013*CONFIGURE_MICROSECONDS_PER_TICK
                                              };
 
-uint32_t  Phases[1+NUM_TASKS]           = { 0, 0 };
+uint32_t  Phases[1+NUM_TASKS]           = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
 
 #define build_task_name() do { \
 Task_name[ 1 ] =  rtems_build_name( 'P', 'T', '0', '1' );\
+Task_name[ 2 ] =  rtems_build_name( 'P', 'T', '0', '2' );\
+Task_name[ 3 ] =  rtems_build_name( 'P', 'T', '0', '3' );\
+Task_name[ 4 ] =  rtems_build_name( 'P', 'T', '0', '4' );\
+Task_name[ 5 ] =  rtems_build_name( 'P', 'T', '0', '5' );\
+Task_name[ 6 ] =  rtems_build_name( 'P', 'T', '0', '6' );\
+Task_name[ 7 ] =  rtems_build_name( 'P', 'T', '0', '7' );\
+Task_name[ 8 ] =  rtems_build_name( 'P', 'T', '0', '8' );\
+Task_name[ 9 ] =  rtems_build_name( 'P', 'T', '0', '9' );\
+Task_name[ 10 ] =  rtems_build_name( 'P', 'T', '1', '0' );\
+Task_name[ 11 ] =  rtems_build_name( 'P', 'T', '1', '1' );\
+Task_name[ 12 ] =  rtems_build_name( 'P', 'T', '1', '2' );\
+Task_name[ 13 ] =  rtems_build_name( 'P', 'T', '1', '3' );\
+Task_name[ 14 ] =  rtems_build_name( 'P', 'T', '1', '4' );\
+Task_name[ 15 ] =  rtems_build_name( 'P', 'T', '1', '5' );\
+Task_name[ 16 ] =  rtems_build_name( 'P', 'T', '1', '6' );\
+Task_name[ 17 ] =  rtems_build_name( 'P', 'T', '1', '7' );\
+Task_name[ 18 ] =  rtems_build_name( 'P', 'T', '1', '8' );\
+Task_name[ 19 ] =  rtems_build_name( 'P', 'T', '1', '9' );\
+Task_name[ 20 ] =  rtems_build_name( 'P', 'T', '2', '0' );\
+Task_name[ 21 ] =  rtems_build_name( 'P', 'T', '2', '1' );\
+Task_name[ 22 ] =  rtems_build_name( 'P', 'T', '2', '2' );\
+Task_name[ 23 ] =  rtems_build_name( 'P', 'T', '2', '3' );\
+Task_name[ 24 ] =  rtems_build_name( 'P', 'T', '2', '4' );\
+Task_name[ 25 ] =  rtems_build_name( 'P', 'T', '2', '5' );\
+Task_name[ 26 ] =  rtems_build_name( 'P', 'T', '2', '6' );\
+Task_name[ 27 ] =  rtems_build_name( 'P', 'T', '2', '7' );\
+Task_name[ 28 ] =  rtems_build_name( 'P', 'T', '2', '8' );\
+Task_name[ 29 ] =  rtems_build_name( 'P', 'T', '2', '9' );\
+Task_name[ 30 ] =  rtems_build_name( 'P', 'T', '3', '0' );\
+Task_name[ 31 ] =  rtems_build_name( 'P', 'T', '3', '1' );\
+Task_name[ 32 ] =  rtems_build_name( 'P', 'T', '3', '2' );\
+Task_name[ 33 ] =  rtems_build_name( 'P', 'T', '3', '3' );\
+Task_name[ 34 ] =  rtems_build_name( 'P', 'T', '3', '4' );\
+Task_name[ 35 ] =  rtems_build_name( 'P', 'T', '3', '5' );\
+Task_name[ 36 ] =  rtems_build_name( 'P', 'T', '3', '6' );\
+Task_name[ 37 ] =  rtems_build_name( 'P', 'T', '3', '7' );\
+Task_name[ 38 ] =  rtems_build_name( 'P', 'T', '3', '8' );\
+Task_name[ 39 ] =  rtems_build_name( 'P', 'T', '3', '9' );\
+Task_name[ 40 ] =  rtems_build_name( 'P', 'T', '4', '0' );\
+Task_name[ 41 ] =  rtems_build_name( 'P', 'T', '4', '1' );\
+Task_name[ 42 ] =  rtems_build_name( 'P', 'T', '4', '2' );\
+Task_name[ 43 ] =  rtems_build_name( 'P', 'T', '4', '3' );\
+Task_name[ 44 ] =  rtems_build_name( 'P', 'T', '4', '4' );\
+Task_name[ 45 ] =  rtems_build_name( 'P', 'T', '4', '5' );\
+Task_name[ 46 ] =  rtems_build_name( 'P', 'T', '4', '6' );\
+Task_name[ 47 ] =  rtems_build_name( 'P', 'T', '4', '7' );\
+Task_name[ 48 ] =  rtems_build_name( 'P', 'T', '4', '8' );\
+Task_name[ 49 ] =  rtems_build_name( 'P', 'T', '4', '9' );\
+Task_name[ 50 ] =  rtems_build_name( 'P', 'T', '5', '0' );\
+Task_name[ 51 ] =  rtems_build_name( 'P', 'T', '5', '1' );\
+Task_name[ 52 ] =  rtems_build_name( 'P', 'T', '5', '2' );\
+Task_name[ 53 ] =  rtems_build_name( 'P', 'T', '5', '3' );\
+Task_name[ 54 ] =  rtems_build_name( 'P', 'T', '5', '4' );\
+Task_name[ 55 ] =  rtems_build_name( 'P', 'T', '5', '5' );\
+Task_name[ 56 ] =  rtems_build_name( 'P', 'T', '5', '6' );\
+Task_name[ 57 ] =  rtems_build_name( 'P', 'T', '5', '7' );\
+Task_name[ 58 ] =  rtems_build_name( 'P', 'T', '5', '8' );\
+Task_name[ 59 ] =  rtems_build_name( 'P', 'T', '5', '9' );\
+Task_name[ 60 ] =  rtems_build_name( 'P', 'T', '6', '0' );\
+Task_name[ 61 ] =  rtems_build_name( 'P', 'T', '6', '1' );\
+Task_name[ 62 ] =  rtems_build_name( 'P', 'T', '6', '2' );\
+Task_name[ 63 ] =  rtems_build_name( 'P', 'T', '6', '3' );\
+Task_name[ 64 ] =  rtems_build_name( 'P', 'T', '6', '4' );\
+Task_name[ 65 ] =  rtems_build_name( 'P', 'T', '6', '5' );\
+Task_name[ 66 ] =  rtems_build_name( 'P', 'T', '6', '6' );\
+Task_name[ 67 ] =  rtems_build_name( 'P', 'T', '6', '7' );\
+Task_name[ 68 ] =  rtems_build_name( 'P', 'T', '6', '8' );\
+Task_name[ 69 ] =  rtems_build_name( 'P', 'T', '6', '9' );\
+Task_name[ 70 ] =  rtems_build_name( 'P', 'T', '7', '0' );\
+Task_name[ 71 ] =  rtems_build_name( 'P', 'T', '7', '1' );\
+Task_name[ 72 ] =  rtems_build_name( 'P', 'T', '7', '2' );\
+Task_name[ 73 ] =  rtems_build_name( 'P', 'T', '7', '3' );\
+Task_name[ 74 ] =  rtems_build_name( 'P', 'T', '7', '4' );\
+Task_name[ 75 ] =  rtems_build_name( 'P', 'T', '7', '5' );\
+Task_name[ 76 ] =  rtems_build_name( 'P', 'T', '7', '6' );\
+Task_name[ 77 ] =  rtems_build_name( 'P', 'T', '7', '7' );\
+Task_name[ 78 ] =  rtems_build_name( 'P', 'T', '7', '8' );\
+Task_name[ 79 ] =  rtems_build_name( 'P', 'T', '7', '9' );\
+Task_name[ 80 ] =  rtems_build_name( 'P', 'T', '8', '0' );\
 } while(0)
 
 #endif
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache09/system.h rtems-hwsched-cache/testsuites/gabtests/cache09/system.h
--- rtems-hwds/testsuites/gabtests/cache09/system.h	2010-10-01 05:17:28.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache09/system.h	2010-10-07 16:32:43.000000000 -0400
@@ -98,5 +98,5 @@ extern rtems_id   final_barrier;
 extern uint32_t *shared_array;
 #define SHARED_ARRAY_SIZE (1024 * 32 * 10) /* 1KB * num_kb * multiplier */
 extern uint32_t cache_line_length;
-extern uint32_t cache_num_lines_to_access;
+extern uint32_t cache_num_lines;
 /* end of include file */
diff -X dontdiff -upr rtems-hwds/testsuites/gabtests/cache09/tasks_periodic.c rtems-hwsched-cache/testsuites/gabtests/cache09/tasks_periodic.c
--- rtems-hwds/testsuites/gabtests/cache09/tasks_periodic.c	2010-09-30 19:49:13.000000000 -0400
+++ rtems-hwsched-cache/testsuites/gabtests/cache09/tasks_periodic.c	2010-10-06 22:23:48.000000000 -0400
@@ -28,6 +28,8 @@ rtems_task Tasks_Periodic(
   uint32_t          periods_executed;
   uint32_t          local_deadlines_missed;
   uint32_t          temp = 0;
+  uint32_t          count = 0;
+  uint64_t  start_tick, stop_tick;
 
   status = rtems_rate_monotonic_create( argument, &rmid );
   directive_failed( status, "rtems_rate_monotonic_create" );
@@ -85,8 +87,10 @@ rtems_task Tasks_Periodic(
     /* loop through shared_array by cache_line_length until 
      * done accessing cache_num_lines_to_access. half of accesses 
      * are writes, and half are reads. */
+    count = 0;
     for ( i = (argument*SHARED_ARRAY_SIZE/NUM_TASKS); 
-          i < (argument*SHARED_ARRAY_SIZE/NUM_TASKS) + cache_num_lines_to_access; 
+          i < (argument*SHARED_ARRAY_SIZE/NUM_TASKS) + cache_num_lines*
+          (((double)Execution_us[argument]/(double)Periods[argument]/CONFIGURE_MICROSECONDS_PER_TICK/0.6)); 
           i++) 
     {
       if ((argument+i)%2) {
@@ -102,6 +106,10 @@ rtems_task Tasks_Periodic(
             i*(cache_line_length/sizeof(uint32_t)) % (SHARED_ARRAY_SIZE/sizeof(uint32_t))
           ] = argument;
       }
+      count += 40; /* rough estimate of the loop length */
+      if (count > Instructions_per_us * Execution_us[argument]) {
+        break;
+      }
     }
 
     /*

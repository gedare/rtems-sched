diff -upr -X dontdiff rtems2/cpukit/score/cpu/sparc64/rtems/score/sparc64.h rtems-hwds2/cpukit/score/cpu/sparc64/rtems/score/sparc64.h
--- rtems2/cpukit/score/cpu/sparc64/rtems/score/sparc64.h	2010-09-26 14:03:01.000000000 -0400
+++ rtems-hwds2/cpukit/score/cpu/sparc64/rtems/score/sparc64.h	2010-10-02 18:29:10.000000000 -0400
@@ -165,10 +165,21 @@ extern "C" {
 
 #endif /* !ASM */
 #define MAGIC_BREAKPOINT MAGIC(0x40000)
-#define MAGIC_HWDS1_START      MAGIC(0x100)
+#define MAGIC_HWDS1_START       MAGIC(0x100)
+#define MAGIC_HWDS1_FIRST       MAGIC(0x101)
+#define MAGIC_HWDS1_ENQUEUE     MAGIC(0x102)
+#define MAGIC_HWDS1_ENQUEUE_FIRST    MAGIC(0x103)
+#define MAGIC_HWDS1_EXTRACT    MAGIC(0x104)
+#define MAGIC_HWDS1_REQUEUE    MAGIC(0x105)
 #define MAGIC_HWDS2_START      MAGIC(0x200)
+#define MAGIC_HWDS2_ENQUEUE      MAGIC(0x201)
+#define MAGIC_HWDS2_EXTRACT      MAGIC(0x202)
+#define MAGIC_HWDS2_UNPAUSE    MAGIC(0x300)
+
 #define MAGIC_HWDS1_END        MAGIC(0x800)
 #define MAGIC_HWDS2_END        MAGIC(0x900)
+#define MAGIC_HWDS2_PAUSE      MAGIC(0xA00)
+
 #define MAGIC_STOP_CACHING    MAGIC(0x1000)
 #define MAGIC_RESUME_CACHING  MAGIC(0x2000)
 #define MAGIC_STOP_POWER      MAGIC(0x4000)
diff -upr -X dontdiff rtems2/cpukit/score/inline/rtems/score/readyq.inl rtems-hwds2/cpukit/score/inline/rtems/score/readyq.inl
--- rtems2/cpukit/score/inline/rtems/score/readyq.inl	2010-09-26 14:02:57.000000000 -0400
+++ rtems-hwds2/cpukit/score/inline/rtems/score/readyq.inl	2010-10-05 11:04:56.000000000 -0400
@@ -44,7 +44,9 @@ RTEMS_INLINE_ROUTINE void _Ready_queue_E
   Thread_Control             *the_thread
 )
 {
+  MAGIC_HWDS1_ENQUEUE;
   the_ready_queue->rq_ops.enqueue( the_ready_queue, the_thread );
+  MAGIC_HWDS1_END;
 }
 
 /*
@@ -61,7 +63,9 @@ RTEMS_INLINE_ROUTINE void _Ready_queue_E
   Thread_Control                   *the_thread
 )
 {
+  MAGIC_HWDS1_ENQUEUE_FIRST;
   the_ready_queue->rq_ops.enqueue_first( the_ready_queue, the_thread );
+  MAGIC_HWDS1_END;
 }
 
 /** @brief  Ready queue Extract
@@ -73,7 +77,9 @@ RTEMS_INLINE_ROUTINE void _Ready_queue_E
   Thread_Control       *the_thread
 )
 {
+  MAGIC_HWDS1_EXTRACT;
   the_ready_queue->rq_ops.extract( the_ready_queue, the_thread );
+  MAGIC_HWDS1_END;
 }
 
 
@@ -87,7 +93,11 @@ RTEMS_INLINE_ROUTINE Thread_Control *_Re
   Ready_queue_Control *the_ready_queue
 )
 {
- return ( the_ready_queue->rq_ops.first( the_ready_queue ) );
+  Thread_Control *t;
+ MAGIC_HWDS1_FIRST;
+ t= the_ready_queue->rq_ops.first( the_ready_queue );
+ MAGIC_HWDS1_END;
+ return t;
 }
 
 /**
diff -upr -X dontdiff rtems2/cpukit/score/src/readyqpriorityrequeue.c rtems-hwds2/cpukit/score/src/readyqpriorityrequeue.c
--- rtems2/cpukit/score/src/readyqpriorityrequeue.c	2010-09-26 14:02:56.000000000 -0400
+++ rtems-hwds2/cpukit/score/src/readyqpriorityrequeue.c	2010-10-05 11:05:49.000000000 -0400
@@ -46,10 +46,14 @@ void _Ready_queue_priority_Requeue(
 )
 {
   if ( !_Chain_Has_only_one_node( the_thread->sched.priority->ready_chain ) ) {
+  MAGIC_HWDS1_EXTRACT;
     _Chain_Extract_unprotected( &the_thread->Object.Node );
+  MAGIC_HWDS1_END;
 
+  MAGIC_HWDS1_ENQUEUE;
     _Chain_Append_unprotected( the_thread->sched.priority->ready_chain, 
       &the_thread->Object.Node );
+  MAGIC_HWDS1_END;
   }
 }
 
diff -upr -X dontdiff rtems2/cpukit/score/src/scheduleredf.c rtems-hwds2/cpukit/score/src/scheduleredf.c
--- rtems2/cpukit/score/src/scheduleredf.c	2010-09-26 14:02:56.000000000 -0400
+++ rtems-hwds2/cpukit/score/src/scheduleredf.c	2010-10-02 18:30:00.000000000 -0400
@@ -37,12 +37,16 @@ void _Scheduler_edf_Release_job(
   ISR_Level       level;
 
   _ISR_Disable( level );
-  
+ 
+  //MAGIC_HWSCHED_START;
+
   /* if the thread is already in a ready state, need to dequeue it from
    * the ready queue and then re-enqueue it with the new deadline.
    */
   if ( _States_Is_ready( the_period->owner->current_state ) ) {
+    MAGIC_HWDS1_EXTRACT;
     _Ready_queue_edf_Extract(&_Scheduler.ready_queue, the_period->owner);
+    MAGIC_HWDS1_END;
 
     /* stamp this job with its new deadline */
     the_period->owner->sched.edf->deadline.value 
@@ -51,7 +55,9 @@ void _Scheduler_edf_Release_job(
     the_period->owner->sched.edf->last_duplicate = 
       &the_period->owner->Object.Node;
 
+    MAGIC_HWDS1_ENQUEUE;
     _Ready_queue_edf_Enqueue(&_Scheduler.ready_queue, the_period->owner);
+    MAGIC_HWDS1_END;
     _Scheduler_Schedule(&_Scheduler);
   } else {
     the_period->owner->sched.edf->deadline.value 
@@ -64,6 +70,8 @@ void _Scheduler_edf_Release_job(
   if (the_period->owner != _Thread_Heir)
     _Thread_Dispatch_necessary = true;
 
+  //MAGIC_HWSCHED_END;
+
   _ISR_Enable( level );
 }
 
diff -upr -X dontdiff rtems2/cpukit/score/src/watchdoginsert.c rtems-hwds2/cpukit/score/src/watchdoginsert.c
--- rtems2/cpukit/score/src/watchdoginsert.c	2010-09-27 16:52:53.000000000 -0400
+++ rtems-hwds2/cpukit/score/src/watchdoginsert.c	2010-10-02 18:29:39.000000000 -0400
@@ -53,6 +53,8 @@ void _Watchdog_Insert(
     return;
   }
 
+  MAGIC_HWDS2_ENQUEUE;
+
   the_watchdog->state = WATCHDOG_BEING_INSERTED;
   _Watchdog_Sync_count++;
 
@@ -96,7 +98,9 @@ restart:
       *  mechanism used here WAS redesigned to address this.
       */
 
-     _ISR_Flash( level );
+    MAGIC_HWDS2_PAUSE;
+//     _ISR_Flash( level );
+    MAGIC_HWDS2_UNPAUSE;
 
      if ( the_watchdog->state != WATCHDOG_BEING_INSERTED ) {
        goto exit_insert;
@@ -119,5 +123,6 @@ restart:
 exit_insert:
   _Watchdog_Sync_level = insert_isr_nest_level;
   _Watchdog_Sync_count--;
+  MAGIC_HWDS2_END;
   _ISR_Enable( level );
 }
diff -upr -X dontdiff rtems2/cpukit/score/src/watchdogremove.c rtems-hwds2/cpukit/score/src/watchdogremove.c
--- rtems2/cpukit/score/src/watchdogremove.c	2010-09-26 14:02:56.000000000 -0400
+++ rtems-hwds2/cpukit/score/src/watchdogremove.c	2010-10-03 00:38:38.000000000 -0400
@@ -37,6 +37,7 @@ Watchdog_States _Watchdog_Remove(
   Watchdog_Control *next_watchdog;
 
   _ISR_Disable( level );
+  MAGIC_HWDS2_EXTRACT;
   previous_state = the_watchdog->state;
   switch ( previous_state ) {
     case WATCHDOG_INACTIVE:
@@ -67,6 +68,7 @@ Watchdog_States _Watchdog_Remove(
       break;
   }
   the_watchdog->stop_time = _Watchdog_Ticks_since_boot;
+  MAGIC_HWDS2_END;
   _ISR_Enable( level );
   return( previous_state );
 }
diff -upr -X dontdiff rtems2/testsuites/gabtests/cache00/init.c rtems-hwds2/testsuites/gabtests/cache00/init.c
--- rtems2/testsuites/gabtests/cache00/init.c	2010-10-02 21:02:19.000000000 -0400
+++ rtems-hwds2/testsuites/gabtests/cache00/init.c	2010-10-02 21:03:25.000000000 -0400
@@ -42,7 +42,7 @@ rtems_id  final_barrier;
 uint32_t *shared_array;
 
 uint32_t  cache_line_length = 64;
-uint32_t  cache_num_lines_to_access = 512*(0.1); /* 512*(% of cache) */
+uint32_t  cache_num_lines_to_access = 512*(.1); /* 512*(% of cache) */
 
 rtems_task Init(
   rtems_task_argument argument
